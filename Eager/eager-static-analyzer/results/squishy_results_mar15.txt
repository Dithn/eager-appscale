Reading input from: results_mar15.txt

----------------- PROJECT: AppEngineAndStorage -----------------
Analyzing: sfeir.poc.appengine.cs.GoogleCloudStorageServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: sfeir.poc.appengine.cs.GoogleCloudStorageServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.files.GSFileOptions$GSFileOptionsBuilder#build()->com.google.appengine.api.files.FileService#createNewGSFile()->com.google.appengine.api.files.FileService#openWriteChannel()->com.google.appengine.api.files.FileWriteChannel#closeFinally() 1

[largest] 1

----------------- PROJECT: DUBwise-Download -----------------
Analyzing: org.ligi.dubwise.download.DUBwiseProps#sound_str()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#fileapi_str()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#_getFileName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#getJARFileName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#firmware_str()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#getJADFileName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallHelper#read_http_str()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#bt_str()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.SourceInfoProvider#getDownloadURL()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#map_str()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.SourceInfoProvider#getStableDownloadURL()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#set_code()
Distinct paths: 9
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.EnterCodeServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.SourceInfoProvider#act_version()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#cldc_str()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DUBwiseProps#devicecontrol_str()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.EnterCodeServlet#doPost()
Distinct paths: 3
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 2

Analyzing: org.ligi.dubwise.download.DUBwiseProps#res_str()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.CodeRecorder#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DownloadHelper#admin_email()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DownloadBuildsServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DownloadBuildsServlet#create_missing_records()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.Query#closeAll() 1
[path] javax.jdo.Query#execute()->javax.jdo.Query#closeAll() 1

Analyzing: org.ligi.dubwise.download.DownloadBuildsServlet#delete_all()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.Query#execute()->javax.jdo.Query#closeAll() 2

Analyzing: org.ligi.dubwise.download.DownloadBuildsServlet#create_all()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#close() 1

Analyzing: org.ligi.dubwise.download.DownloadBuildsServlet#read_http()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.BuildRecord#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.DownloadBuildsServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.Query#closeAll() 1

Analyzing: org.ligi.dubwise.download.DownloadBuildsServlet#create_record()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#makePersistent() 1

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetjsr179()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetcomports()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoGetinstaller_version()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetsnd_mp3_64kbit()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#setBrowserUserAgent()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetcanvas_full_width()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetlocale()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetcanvas_width()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetsnd_wav()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetlocation_api_version()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetsensorapi()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#getCode()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.SourceInfoProvider#installer_source_base_URL()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetuser_agent()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetbrowser_user_agent()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.SourceInfoProvider#delete_notify_URL()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.FileSenderServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGettotal_mem()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetencoding()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetsensor_api_version()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetfree_mem()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#comports_str()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoSetjad_requested()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoSetjar_requested()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#getInstallerVersion()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#info_array()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetprotocol_types()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetbluetooth()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoSetbrowser_user_agent()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetsymbian()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetprofiles()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetsnd_mp3_16kbit()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetcanvas_full_height()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGethostname()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetcanvas_height()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetdevicecontrol()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoGetcode()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetid()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetcldc11()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetrms_avail()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoGetdevice_id()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#getDeviceId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetconfiguration()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#setJADRequested()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#setJARRequested()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetfileapi()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetsnd_mp3_32kbit()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.PersistentDevice#jdoGetplatform()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.FileSenderServlet#doGet()
Distinct paths: 24
Paths with API calls: 16
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 16

Analyzing: org.ligi.dubwise.download.PersistentDevice#info_text()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.SourceInfoProvider#install_notify_URL()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#setInstallerSource()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoSetinstaller_option()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoGetid()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoSetinstaller_version()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.GetInstallRecordServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#setInstallerVersion()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoSetinstaller_source()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#setInstallerOption()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.GetInstallRecordServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: org.ligi.dubwise.download.MetaInfoServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.MetaInfoServlet#doGet()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoSetinstall_result()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#jdoSetdelete_result()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#setInstallResult()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.NotifyServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.NotifyServlet#doGet()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.InstallRecord#setDeleteResult()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.NotifyServlet#doPost()
Distinct paths: 36
Paths with API calls: 36
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 36

Analyzing: org.ligi.dubwise.download.RefreshDownloadSourceServlet#doGet()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.RefreshDownloadSourceServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.ligi.dubwise.download.SourceInfoProvider#update_act_version()
Distinct paths: 1
Paths with API calls: 0

[largest] 36

----------------- PROJECT: FeedStore -----------------
Analyzing: org.magiccube.feedstore.common.entity.AbstractEntity#setTitle()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.dao.AbstractEntityDao#getEntityClass()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedChannelManager#_loadChannels()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.common.entity.AbstractEntity#setUrl()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.dao.AbstractDao#getDatastoreService()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.dao.AbstractDao#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.dao.AbstractEntityDao#createEntityInstance()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedChannelManager#<init>()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.core.dao.AbstractEntityDao#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.dao.FeedChannelDao#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.server.resource.ScheduleResource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.EntityList#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.AbstractEntity#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.AbstractEntity#fromGAEEntity()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.AbstractEntity#setId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedChannelManager#getInstance()
Distinct paths: 2
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.core.dao.AbstractEntityDao#selectAll()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedChannelManager#getChannels()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.dao.AbstractEntityDao#getEntityKind()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.server.resource.ScheduleResource#updateAll()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedChannelManager#getChannelDao()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#setLastPublishTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.EntityList#getEntityById()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.server.resource.FeedChannelResource#getChannels()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.common.entity.AbstractEntity#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.AbstractEntity#getUrl()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedManager#hasEntityWithUrl()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#setLastUpdatedTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedManager#getEntryDao()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.dao.FeedEntryDao#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#getDescription()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.dao.AbstractEntityDao#put()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#getLastStoredTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedEntry#setStoredTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feedlet.Feedlet#update()
Distinct paths: 13
Paths with API calls: 12
[path] com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 8
[path] com.google.appengine.api.datastore.DatastoreService#put() 4

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#setLastStoredTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedEntry#setPublishTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedEntry#setContent()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.ImageInfo#createFromHtml()
Distinct paths: 4
Paths with API calls: 1
[path] com.google.appengine.api.images.ImagesServiceFactory#makeImage() 1

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#getImage()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#getLink()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.ImageInfo#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedChannelManager#saveChannel()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedManager#createEntries()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: org.magiccube.feedstore.server.resource.AbstractResource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.AbstractEntity#getTitle()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.dao.AbstractEntityDao#createQuery()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedEntry#getContent()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#setDescription()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#setImage()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedEntry#setImage()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.AbstractEntity#toGAEEntity()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedEntry#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.server.resource.FeedChannelResource#updateChannel()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#setLink()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.dao.AbstractEntityDao#select()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedEntry#getPublishTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedManager#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.server.resource.FeedChannelResource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feedlet.Feedlet#updateChannel()
Distinct paths: 1029
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.dao.FeedEntryDao#createQuery()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.common.entity.ImageInfo#createFromUrl()
Distinct paths: 4
Paths with API calls: 2
[path] com.google.appengine.api.images.ImagesServiceFactory#makeImage() 2

Analyzing: org.magiccube.feedstore.core.feedlet.Feedlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feedlet.Feedlet#updateEntries()
Distinct paths: 6
Paths with API calls: 3
[path] com.google.appengine.api.datastore.DatastoreService#put() 3

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedManager#getInstance()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedEntry#setAuthor()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.server.resource.FeedEntryResource#getEntries()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 3

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedManager#fetchEntries()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: org.magiccube.feedstore.server.resource.FeedEntryResource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.server.resource.SetupResource#clean()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete() 1

Analyzing: org.magiccube.feedstore.setup.DatastoreSetup#clean()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete() 1

Analyzing: org.magiccube.feedstore.core.subscription.biz.SubscriptionManager#_loadSubscriptions()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.core.subscription.entity.Subscription#setChannelId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.biz.SubscriptionManager#getInstance()
Distinct paths: 2
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedChannelManager#createChannelAsync()
Distinct paths: 2
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedManager#clearn()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete() 1

Analyzing: org.magiccube.feedstore.core.dao.AbstractEntityDao#selectAllKeys()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.common.entity.EntityList#getEntityByTitle()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.biz.SubscriptionManager#getSubscriptionDao()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.dao.SubscriptionDao#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.biz.SubscriptionManager#clean()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete() 1

Analyzing: org.magiccube.feedstore.core.subscription.biz.SubscriptionManager#createCategory()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: org.magiccube.feedstore.core.subscription.biz.SubscriptionManager#getCategories()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.feed.biz.FeedChannelManager#clean()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete() 1

Analyzing: org.magiccube.feedstore.core.subscription.entity.Subscription#getCategoryId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.entity.SubscriptionCategory#getItems()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.biz.SubscriptionManager#<init>()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.core.subscription.entity.SubscriptionCategory#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.entity.Subscription#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.biz.SubscriptionManager#getCategoryDao()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.biz.SubscriptionManager#subscribeAsync()
Distinct paths: 6
Paths with API calls: 6
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put() 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 2

Analyzing: org.magiccube.feedstore.server.resource.SetupResource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.dao.SubscriptionCategoryDao#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.dao.AbstractEntityDao#clean()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete() 1

Analyzing: org.magiccube.feedstore.core.feed.entity.FeedChannel#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.core.subscription.biz.SubscriptionManager#getOrCreateCategory()
Distinct paths: 2
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: org.magiccube.feedstore.common.entity.EntityList#getEntityByUrl()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.magiccube.feedstore.setup.DatastoreSetup#loadOpml()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete() 1

Analyzing: org.magiccube.feedstore.server.resource.SetupResource#loadSubscriptions()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.server.resource.SubscriptionResource#getSubscriptions()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.magiccube.feedstore.server.resource.SubscriptionResource#<init>()
Distinct paths: 1
Paths with API calls: 0

[largest] 8

----------------- PROJECT: GBrain -----------------
Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#updatePosition()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById() 1

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#addNeuron()
Distinct paths: 2
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.axlight.gbrain.shared.FieldVerifier#isValidContent()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.Neuron#setColor()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#fetchNeuron()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.axlight.gbrain.server.Neuron#toNeuronData()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#deleteNeuron()
Distinct paths: 4
Paths with API calls: 4
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById() 1

Analyzing: com.axlight.gbrain.server.Neuron#getParentId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#queryAllChildNeurons()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: com.axlight.gbrain.server.Neuron#<init>()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser() 1

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#getTopNeurons()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#getChildNeurons()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.axlight.gbrain.server.Neuron#setY()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#alreadyExists()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 2

Analyzing: com.axlight.gbrain.server.Neuron#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.shared.NeuronData#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.PMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.shared.NeuronData#getContent()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#updateColor()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.axlight.gbrain.shared.NeuronData#getX()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#removeParent()
Distinct paths: 4
Paths with API calls: 4
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById() 1

Analyzing: com.axlight.gbrain.server.Neuron#setChildren()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#getAllChildNeurons()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.axlight.gbrain.server.Neuron#getChildren()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.shared.NeuronData#getChildren()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.Neuron#setX()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#getInstance()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#updateParent()
Distinct paths: 5
Paths with API calls: 5
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById() 1

Analyzing: com.axlight.gbrain.shared.NeuronData#getY()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.shared.NeuronData#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.Neuron#setParentId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.axlight.gbrain.server.GBrainServiceImpl#<init>()
Distinct paths: 1
Paths with API calls: 0

[largest] 2

----------------- PROJECT: Google-AppEngine-Test-Application -----------------
Analyzing: example.project.GuestbookServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: example.project.GuestbookServlet#doGet()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.users.UserService#createLogoutURL() 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.users.UserService#createLoginURL() 1

[largest] 1

----------------- PROJECT: Google_AppEngine -----------------
Analyzing: guestbook1.AddEvent#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.EMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.AddEvent#ConvertMonthNameToNum()
Distinct paths: 13
Paths with API calls: 0

Analyzing: guestbook1.AddEvent#doGet()
Distinct paths: 34992
Paths with API calls: 34992
[path] com.google.appengine.api.users.UserService#getCurrentUser() 34992

Analyzing: guestbook1.Contact#getEmailAddress()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.Contact#jdoGetphoneNumber()
Distinct paths: 10
Paths with API calls: 0

Analyzing: guestbook1.Contact#getPhoneNumber()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.BookQuery_Group12#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.Contact#jdoGetuser()
Distinct paths: 10
Paths with API calls: 0

Analyzing: guestbook1.Contact#jdoGetemailAddress()
Distinct paths: 10
Paths with API calls: 0

Analyzing: guestbook1.Contact#getUser()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.BookQuery_Group12#doGet()
Distinct paths: 8
Paths with API calls: 8
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.memcache.MemcacheService#get()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.memcache.MemcacheService#contains()->javax.persistence.Query#getResultList()->javax.persistence.EntityManager#close()->com.google.appengine.api.users.UserService#createLogoutURL() 6
[path] com.google.appengine.api.users.UserService#getCurrentUser() 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.memcache.MemcacheService#get()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.memcache.MemcacheService#contains()->com.google.appengine.api.memcache.MemcacheService#get()->javax.persistence.EntityManager#close()->com.google.appengine.api.users.UserService#createLogoutURL() 1

Analyzing: guestbook1.Contact#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: guestbook1.CalendarAuthenticate#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser() 1

Analyzing: guestbook1.CalendarAuthenticate#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.CalendarInteract#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.CalendarInteract#doGet()
Distinct paths: 4
Paths with API calls: 4
[path] com.google.appengine.api.users.UserService#isUserLoggedIn()->com.google.appengine.api.users.UserService#getCurrentUser() 4

Analyzing: guestbook1.CalendarLogout#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.CalendarLogout#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.users.UserService#createLogoutURL() 1

Analyzing: guestbook1.ContactDeletion#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.ContactDeletion#doGet()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#clear() 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#getTransaction()->javax.persistence.EntityTransaction#begin()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#getTransaction()->javax.persistence.EntityTransaction#commit()->javax.persistence.EntityManager#clear() 1

Analyzing: guestbook1.Contact_Delete#doPost()
Distinct paths: 10
Paths with API calls: 10
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.memcache.MemcacheService#contains()->javax.persistence.EntityManager#clear() 3
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.memcache.MemcacheService#contains() 2
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.memcache.MemcacheService#contains()->com.google.appengine.api.memcache.MemcacheService#delete()->javax.persistence.EntityManager#clear() 3
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.memcache.MemcacheService#contains()->com.google.appengine.api.memcache.MemcacheService#delete() 2

Analyzing: guestbook1.Contact_Delete#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.DeleteEvent#doGet()
Distinct paths: 216
Paths with API calls: 216
[path] com.google.appengine.api.users.UserService#getCurrentUser() 216

Analyzing: guestbook1.DeleteEvent#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.Geocoder#getOrdinate()
Distinct paths: 3
Paths with API calls: 0

Analyzing: guestbook1.Geocoder#getLocation()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.Geocoder#parseLocation()
Distinct paths: 2
Paths with API calls: 0

Analyzing: guestbook1.Geocoder#buildUrl()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.Geocoder#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.Geocoder#doGet()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.JPATransactionsServlet_Group12#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.Contact#jdoSetemailAddress()
Distinct paths: 5
Paths with API calls: 0

Analyzing: guestbook1.Contact#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.Contact#setUser()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.Contact#jdoSetuser()
Distinct paths: 5
Paths with API calls: 0

Analyzing: guestbook1.Contact#jdoSetphoneNumber()
Distinct paths: 5
Paths with API calls: 0

Analyzing: guestbook1.JPATransactionsServlet_Group12#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.memcache.MemcacheService#get()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->com.google.appengine.api.memcache.MemcacheService#put()->javax.persistence.EntityManager#close() 1

Analyzing: guestbook1.Contact#setEmailAddress()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.Contact#setPhoneNumber()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.JPATransactions_ToDo#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: guestbook1.JPATransactions_ToDo#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.ToDo#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: guestbook1.ToDo#setUser()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.ToDo#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.ToDo#jdoSetuser()
Distinct paths: 5
Paths with API calls: 0

Analyzing: guestbook1.SignGuestbookServlet#doPost()
Distinct paths: 4
Paths with API calls: 4
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.datastore.DatastoreService#put() 4

Analyzing: guestbook1.SignGuestbookServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.ToDo#jdoGetuser()
Distinct paths: 10
Paths with API calls: 0

Analyzing: guestbook1.ToDoQuery#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.ToDo#getUser()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.ToDoQuery#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->javax.persistence.EntityManager#close() 1

Analyzing: guestbook1.ToDo_Delete#doPost()
Distinct paths: 5
Paths with API calls: 5
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManager#clear() 3
[path] com.google.appengine.api.users.UserService#getCurrentUser() 2

Analyzing: guestbook1.ToDo_Delete#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: guestbook1.UpdateEvent#doGet()
Distinct paths: 216
Paths with API calls: 216
[path] com.google.appengine.api.users.UserService#getCurrentUser() 216

Analyzing: guestbook1.UpdateEvent#<init>()
Distinct paths: 1
Paths with API calls: 0

[largest] 34992

----------------- PROJECT: LibrosEndPoint-AppEngine -----------------
Analyzing: com.jtristan.librosendpoint.DeviceInfoEndpoint#removeDeviceInfo()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

Analyzing: com.jtristan.librosendpoint.DeviceInfoEndpoint#insertDeviceInfo()
Distinct paths: 2
Paths with API calls: 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: com.jtristan.librosendpoint.DeviceInfo#getDeviceRegistrationID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.DeviceInfoEndpoint#listDeviceInfo()
Distinct paths: 12
Paths with API calls: 12
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 2

Analyzing: com.jtristan.librosendpoint.DeviceInfoEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.DeviceInfoEndpoint#getDeviceInfo()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 1

Analyzing: com.jtristan.librosendpoint.DeviceInfoEndpoint#updateDeviceInfo()
Distinct paths: 2
Paths with API calls: 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: com.jtristan.librosendpoint.DeviceInfoEndpoint#getEntityManager()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager() 1

Analyzing: com.jtristan.librosendpoint.EMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.DeviceInfoEndpoint#containsDeviceInfo()
Distinct paths: 2
Paths with API calls: 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 2

Analyzing: com.jtristan.librosendpoint.MessageEndpoint#getEntityManager()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager() 1

Analyzing: com.jtristan.librosendpoint.MessageData#setMessage()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.MessageData#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.MessageEndpoint#doSendViaGcm()
Distinct paths: 8
Paths with API calls: 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 2

Analyzing: com.jtristan.librosendpoint.DeviceInfo#setDeviceRegistrationID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.MessageEndpoint#sendMessage()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close()->javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 1

Analyzing: com.jtristan.librosendpoint.MessageEndpoint#listMessages()
Distinct paths: 12
Paths with API calls: 12
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 2

Analyzing: com.jtristan.librosendpoint.MessageData#setTimestamp()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.MessageEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.entidades.LibroEndpoint#containsLibro()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.librosendpoint.entidades.LibroEndpoint#removeLibro()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.librosendpoint.entidades.LibroEndpoint#getLibro()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.librosendpoint.entidades.LibroEndpoint#getPersistenceManager()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.entidades.LibroEndpoint#insertLibro1()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.librosendpoint.entidades.LibroEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.entidades.Libro#setUsuario()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.entidades.LibroEndpoint#updateLibro()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.librosendpoint.entidades.Libro#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.entidades.PMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.librosendpoint.entidades.LibroEndpoint#listLibro()
Distinct paths: 12
Paths with API calls: 12
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 4
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 2
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 2
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 4

[largest] 4

----------------- PROJECT: MI-MDW-Project -----------------
Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#addBrand()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#makePersistent() 1

Analyzing: cz.cvut.fit.mi_mdw.util.PMF#getPM()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#setName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Brand#addModel()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#editUser()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#deleteUser()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#editDealer()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: cz.cvut.fit.mi_mdw.util.Util#carKeyFromString()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Model#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#validate()
Distinct paths: 4378
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Model#getCars()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#action()
Distinct paths: 22
Paths with API calls: 20
[path] javax.jdo.Query#execute() 4
[path] javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.Query#execute() 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent() 3
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#makePersistent() 3
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById() 1
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close()->javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.Query#execute() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 4

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#orders()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Car#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Model#getBrand()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Brand#setName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#getServletInfo()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#getCars()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Car#getModel()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.util.Validator#username()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#addCar()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Model#getName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.util.Validator#regularText()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#testData()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#getName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#deleteCar()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#deleteAutosalonOrder()
Distinct paths: 4
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#brands()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.util.Message#create()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.User#setUsername()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#getID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#cars()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Car#getID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#addDealer()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#makePersistent() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.users.UserService#createLoginURL()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close()->javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Car#getEngine()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#authenticate()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.users.UserService#createLoginURL() 1
[path] com.google.appengine.api.users.UserService#getCurrentUser() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#setPhone()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Car#getDealer()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#authenticated()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.users.UserService#getCurrentUser() 2

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Car#getPower()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.util.Message#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.util.ReceivedOrderDelete#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Car#getFuel()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.util.ResponseConverter#getState()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#deleteBrand()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Model#validate()
Distinct paths: 56
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.util.Validator#range()
Distinct paths: 3
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Car#getPrice()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Brand#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#dealers()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.users.UserService#createLoginURL()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close()->javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Brand#getName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.util.Validator#email()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.util.Validator#phone()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#addCar()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#users()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#autosalonOrders()
Distinct paths: 2
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#setEmail()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#editBrand()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#deleteDealer()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#addModel()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Engine#valueOf()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.User#validate()
Distinct paths: 13127
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.User#setAddress()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.util.Validator#length()
Distinct paths: 3
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#advertiseCar()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById() 2

Analyzing: cz.cvut.fit.mi_mdw.entities.User#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Brand#validate()
Distinct paths: 56
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.User#setName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Brand#setDescription()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Model#setCars()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Model#setBrand()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#setAddress()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.User#setEmail()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Car#validate()
Distinct paths: 166
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#addUser()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#makePersistent() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Fuel#valueOf()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.User#setPassword()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.AdminServlet#processRequest()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.users.UserService#createLoginURL()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close()->javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.FrontendServlet#processRequest()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.FrontendServlet#buy()
Distinct paths: 5
Paths with API calls: 5
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 4

Analyzing: cz.cvut.fit.mi_mdw.entities.User#getOrders()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.FrontendServlet#getServletInfo()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#getEmail()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Order#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.FrontendServlet#index()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.Query#execute() 2

Analyzing: cz.cvut.fit.mi_mdw.servlets.FrontendServlet#search()
Distinct paths: 145
Paths with API calls: 145
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 1
[path] javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 25
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 25
[path] javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 7
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 7
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 16
[path] javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 19
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 19
[path] javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 4
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 4
[path] javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 16
[path] javax.jdo.Query#execute() 2

Analyzing: cz.cvut.fit.mi_mdw.entities.User#getID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.FrontendServlet#ask()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.FrontendServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.util.Util#modelKeyFromString()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.FrontendServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Dealer#getOrders()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.servlets.FrontendServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.servlets.FrontendServlet#action()
Distinct paths: 5
Paths with API calls: 5
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById() 1
[path] javax.jdo.Query#execute() 2
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: cz.cvut.fit.mi_mdw.entities.Order#getID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.entities.Order#validate()
Distinct paths: 4
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.ws.CarsWS#getAllModels()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.ws.CarsWS#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.ws.CarsWS#addCar()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: cz.cvut.fit.mi_mdw.ws.CarsWS#deleteCar()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent() 1

Analyzing: cz.cvut.fit.mi_mdw.ws.CarsWS#getAllBrands()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.ws.Result#setValue()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.ws.Result#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.cvut.fit.mi_mdw.ws.CarsWS#getAllCars()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.ws.OrdersWS#get()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 1

Analyzing: cz.cvut.fit.mi_mdw.ws.OrdersWS#<init>()
Distinct paths: 1
Paths with API calls: 0

[largest] 25

----------------- PROJECT: Quotester-AppEngine -----------------
Analyzing: com.binroot.Util#writeJSON()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.binroot.AdminServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.binroot.AdminServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.Util#listChildren()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.binroot.AdminServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.binroot.AddTargetServlet#doGet()
Distinct paths: 18
Paths with API calls: 12
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 8
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 4

Analyzing: com.binroot.AddTargetServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.AddTargetServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.Util#persistEntity()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.DeleteQuoteServlet#doGet()
Distinct paths: 7
Paths with API calls: 4
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.DeleteQuoteServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.DeleteQuoteServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.binroot.Util#deleteEntity()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#delete() 1

Analyzing: com.binroot.LogInServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 1

Analyzing: com.binroot.LogInServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.LogInServlet#doGet()
Distinct paths: 5
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 3

Analyzing: com.binroot.PostQuoteServlet#doGet()
Distinct paths: 14
Paths with API calls: 8
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 4
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 4

Analyzing: com.binroot.PostQuoteServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.PostQuoteServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.QueryQuoteServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.QueryQuoteServlet#doGet()
Distinct paths: 6
Paths with API calls: 4
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.QueryQuoteServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.binroot.TargetListServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.TargetListServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.binroot.TargetListServlet#writeTargetJSON()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.binroot.TargetListServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

[largest] 8

----------------- PROJECT: ReservaRestaurantev2-AppEngine -----------------
Analyzing: com.jtristan.reservarestaurantev2.DeviceInfoEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.DeviceInfo#getDeviceRegistrationID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.DeviceInfoEndpoint#updateDeviceInfo()
Distinct paths: 2
Paths with API calls: 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.DeviceInfoEndpoint#listDeviceInfo()
Distinct paths: 12
Paths with API calls: 12
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 2

Analyzing: com.jtristan.reservarestaurantev2.DeviceInfoEndpoint#removeDeviceInfo()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.DeviceInfoEndpoint#getEntityManager()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager() 1

Analyzing: com.jtristan.reservarestaurantev2.EMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.DeviceInfoEndpoint#insertDeviceInfo()
Distinct paths: 2
Paths with API calls: 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.DeviceInfoEndpoint#containsDeviceInfo()
Distinct paths: 2
Paths with API calls: 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 2

Analyzing: com.jtristan.reservarestaurantev2.DeviceInfoEndpoint#getDeviceInfo()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.MessageEndpoint#doSendViaGcm()
Distinct paths: 8
Paths with API calls: 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 2

Analyzing: com.jtristan.reservarestaurantev2.DeviceInfo#setDeviceRegistrationID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.MessageEndpoint#sendMessage()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close()->javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.MessageData#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.MessageEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.MessageEndpoint#listMessages()
Distinct paths: 12
Paths with API calls: 12
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 4

Analyzing: com.jtristan.reservarestaurantev2.MessageEndpoint#getEntityManager()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager() 1

Analyzing: com.jtristan.reservarestaurantev2.MessageData#setTimestamp()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.MessageData#setMessage()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.OfertaEndpoint#insertOferta()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.Oferta#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.OfertaEndpoint#listOferta()
Distinct paths: 12
Paths with API calls: 12
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 2
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 2
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 4
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 4

Analyzing: com.jtristan.reservarestaurantev2.entidades.OfertaEndpoint#updateOferta()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.OfertaEndpoint#getOferta()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.PMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.OfertaEndpoint#getPersistenceManager()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.OfertaEndpoint#removeOferta()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.OfertaEndpoint#containsOferta()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.OfertaEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.ReservaEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.ReservaEndpoint#containsReserva()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.ReservaEndpoint#listReserva()
Distinct paths: 12
Paths with API calls: 12
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 4
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 4
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 2
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 2

Analyzing: com.jtristan.reservarestaurantev2.entidades.ReservaEndpoint#updateReserva()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.Reserva#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.ReservaEndpoint#insertReserva()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.ReservaEndpoint#removeReserva()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.ReservaEndpoint#getReserva()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.ReservaEndpoint#getPersistenceManager()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.Carta#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.CartaEndpoint#getCarta()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.CartaEndpoint#containsCarta()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.CartaEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.CartaEndpoint#updateCarta()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.CartaEndpoint#insertCarta()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.CartaEndpoint#listCarta()
Distinct paths: 25
Paths with API calls: 25
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 4
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 4
[path] javax.jdo.PersistenceManager#getObjectsById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 8
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 8

Analyzing: com.jtristan.reservarestaurantev2.entidades.CartaEndpoint#getPersistenceManager()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.CartaEndpoint#removeCarta()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.Restaurante#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.RestauranteEndpoint#updateRestaurante()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.Restaurante#getOfertas()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.RestauranteEndpoint#insertRestaurante()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.RestauranteEndpoint#getPersistenceManager()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.RestauranteEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.RestauranteEndpoint#getRestaurante()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.Restaurante#getCarta()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.RestauranteEndpoint#removeRestaurante()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.RestauranteEndpoint#containsRestaurante()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.RestauranteEndpoint#listRestaurante()
Distinct paths: 36
Paths with API calls: 36
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 8
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 4
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 2
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 4
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 4
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 8
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 2
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 4

Analyzing: com.jtristan.reservarestaurantev2.entidades.UsuarioEndpoint#getUsuario()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.UsuarioEndpoint#removeUsuario()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.Usuario#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.UsuarioEndpoint#listUsuario()
Distinct paths: 12
Paths with API calls: 12
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 2
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->javax.jdo.PersistenceManager#close() 4
[path] javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 4
[path] com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.jdo.Query#execute()->com.google.appengine.datanucleus.query.JDOCursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.jdo.PersistenceManager#close() 2

Analyzing: com.jtristan.reservarestaurantev2.entidades.UsuarioEndpoint#getPersistenceManager()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.UsuarioEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jtristan.reservarestaurantev2.entidades.UsuarioEndpoint#insertUsuario()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.UsuarioEndpoint#updateUsuario()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jtristan.reservarestaurantev2.entidades.UsuarioEndpoint#containsUsuario()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

[largest] 8

----------------- PROJECT: ServerHealth -----------------
Analyzing: mfi.serverhealth.ServerHealthPollingServlet#readPauseFlag()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#get() 1

Analyzing: mfi.serverhealth.ServerHealthInfoServlet#formatTimeDistance()
Distinct paths: 162
Paths with API calls: 0

Analyzing: mfi.serverhealth.TimeSeriesDataPoint#getInstance()
Distinct paths: 1
Paths with API calls: 0

Analyzing: mfi.serverhealth.ServerHealthInfoServlet#formatDetails()
Distinct paths: 3
Paths with API calls: 0

Analyzing: mfi.serverhealth.ServerHealthInfoServlet#doGet()
Distinct paths: 36
Paths with API calls: 36
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#get() 36

Analyzing: mfi.serverhealth.ServerHealthInfoServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: mfi.serverhealth.ServerHealthInfoServlet#timestampToString()
Distinct paths: 2
Paths with API calls: 0

Analyzing: mfi.serverhealth.TimeSeriesDataPoint#updateTimes()
Distinct paths: 1
Paths with API calls: 0

Analyzing: mfi.serverhealth.ServerHealthPollingServlet#readMaintenanceFlag()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#get() 1

Analyzing: mfi.serverhealth.ServerHealthPollingServlet#doGet()
Distinct paths: 138
Paths with API calls: 138
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put() 128
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#get() 8
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put() 2

Analyzing: mfi.serverhealth.ServerHealthPollingServlet#poll()
Distinct paths: 6
Paths with API calls: 0

Analyzing: mfi.serverhealth.ServerHealthPollingServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: mfi.serverhealth.ServerHealthPollingServlet#sendNotification()
Distinct paths: 4
Paths with API calls: 0

Analyzing: mfi.serverhealth.ServerHealthPollingServlet#writePauseFlag()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: mfi.serverhealth.ServerHealthPollingServlet#checkRegularMaintenanceTime()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put() 2

[largest] 128

----------------- PROJECT: Smorg-Backend-Appengine -----------------
Analyzing: com.smorg.backend.SmorgbackendServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.smorg.backend.SmorgbackendServlet#doGet()
Distinct paths: 1
Paths with API calls: 0

[largest] 0

----------------- PROJECT: Stocks-AppEngine -----------------
Analyzing: com.binroot.stocks.BuyServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.BuyServlet#doPost()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put() 8
[path] com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList() 1

Analyzing: com.binroot.stocks.BuyServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.stocks.BuyServlet#containsShareHolder()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.binroot.stocks.BuyServlet#getConfigEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 2

Analyzing: com.binroot.stocks.TimeServlet#saveTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.BuyServlet#getUserEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 2

Analyzing: com.binroot.stocks.BuyServlet#getStockEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 2

Analyzing: com.binroot.stocks.ConfigServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.ConfigServlet#doPost()
Distinct paths: 18
Paths with API calls: 17
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 16
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.stocks.ConfigServlet#getConfigEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.ConfigServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.stocks.FriendServlet#getConfigEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.FriendServlet#getUserEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.FriendServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.stocks.FriendServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.FriendServlet#doPost()
Distinct paths: 7
Paths with API calls: 7
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 7

Analyzing: com.binroot.stocks.FriendServlet#getStockEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.LeaderboardServlet#getNetWorth()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.LeaderboardServlet#getStockEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.LeaderboardServlet#getNetStockWorth()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.binroot.stocks.LeaderboardServlet#getUserEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.LeaderboardServlet#getConfigEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.LeaderboardServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.binroot.stocks.LeaderboardServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.LeaderboardServlet#doPost()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 3

Analyzing: com.binroot.stocks.PingServlet#printHourlyPointList()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet#computeNextHourVal()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet$BagOfInfo#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet#getConfigEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.PingServlet#updateHourlyPointList()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet#getUserEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.PingServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet#updateDailyPointList()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet#computeNextTrend()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet#getStockEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.PingServlet#containsShareHolder()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet#resetBuysSells()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet#printDailyPointList()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet#doPost()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 2

Analyzing: com.binroot.stocks.PingServlet#clearHourlyPointList()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.PingServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.stocks.SellServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.SellServlet#getUserEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 2

Analyzing: com.binroot.stocks.SellServlet#getConfigEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 2

Analyzing: com.binroot.stocks.SellServlet#getStockEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 2

Analyzing: com.binroot.stocks.SellServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.stocks.SellServlet#doPost()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put() 1
[path] com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.PreparedQuery#asList() 1

Analyzing: com.binroot.stocks.SellServlet#updateUserShares()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.binroot.stocks.StockServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.StockServlet$BagOfInfo#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.StockServlet#getUserEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.StockServlet#getStockEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.StockServlet#doPost()
Distinct paths: 5
Paths with API calls: 4
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put() 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 3

Analyzing: com.binroot.stocks.StockServlet#getConfigEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.StockServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.stocks.StocksAppServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.StocksAppServlet#doGet()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.StocksAppServlet#doPost()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.UserServlet#getConfigEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.UserServlet#doPost()
Distinct paths: 33
Paths with API calls: 33
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 16
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 16
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.stocks.UserServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.binroot.stocks.UserServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.binroot.stocks.UserServlet#getUserEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.binroot.stocks.UserServlet#getStockEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

[largest] 16

----------------- PROJECT: WheelGo-navigator -----------------
Analyzing: cz.nuc.wheelgo.dijkstra.DijkstraAlgorithm#getDistance()
Distinct paths: 2
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.FindPathServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: cz.nuc.wheelgo.dijkstra.DijkstraAlgorithm#execute()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Graph#getEdges()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Vertex#setLongitude()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Vertex#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Edge#getManualInclineForTesting()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Edge#calculateWeightIncline()
Distinct paths: 6
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Graph#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigationTask#dist2()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigationTask#queryOverpassAPI()
Distinct paths: 16
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigationTask#distToSegmentSquared()
Distinct paths: 4
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.DijkstraAlgorithm#getMinimum()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.FindPathServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Edge#getDestination()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Vertex#getLongitude()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.FindPathServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: cz.nuc.wheelgo.NavigationTask#navigate()
Distinct paths: 5
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.DijkstraAlgorithm#isSettled()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigationTask#distToSegment()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.DijkstraAlgorithm#findMinimalDistances()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigationTask#generateCode()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.DijkstraAlgorithm#getPath()
Distinct paths: 2
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.DijkstraAlgorithm#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Edge#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.DijkstraAlgorithm#getShortestDistance()
Distinct paths: 2
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Vertex#equals()
Distinct paths: 7
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Edge#calculateWeight()
Distinct paths: 2
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigationTask#sqr()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Vertex#getLatitude()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.FindPathServlet#performPathFinding()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 2

Analyzing: cz.nuc.wheelgo.Util#persistEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: cz.nuc.wheelgo.dijkstra.DijkstraAlgorithm#getNeighbors()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Edge#getWeight()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Vertex#setLatitude()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.XMLOsmParser#parseMap()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigationNode#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Graph#getVertexes()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.dijkstra.Edge#getSource()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigatorService#navigate()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()->com.google.appengine.api.taskqueue.Queue#add() 2

Analyzing: cz.nuc.wheelgo.NavigatorService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigatorService#getPath()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#get() 1

Analyzing: cz.nuc.wheelgo.Util#getDatastoreServiceInstance()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigatorService#hello()
Distinct paths: 1
Paths with API calls: 0

Analyzing: cz.nuc.wheelgo.NavigatorService#createBackendTask()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()->com.google.appengine.api.taskqueue.Queue#add() 1

[largest] 2

----------------- PROJECT: app-AppEnginer -----------------
Analyzing: com.example.app.DeviceInfoEndpoint#updateDeviceInfo()
Distinct paths: 2
Paths with API calls: 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 1

Analyzing: com.example.app.DeviceInfoEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.example.app.DeviceInfoEndpoint#removeDeviceInfo()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

Analyzing: com.example.app.DeviceInfo#getDeviceRegistrationID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.example.app.DeviceInfoEndpoint#getDeviceInfo()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 1

Analyzing: com.example.app.DeviceInfoEndpoint#containsDeviceInfo()
Distinct paths: 2
Paths with API calls: 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 2

Analyzing: com.example.app.DeviceInfoEndpoint#listDeviceInfo()
Distinct paths: 12
Paths with API calls: 12
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 4

Analyzing: com.example.app.DeviceInfoEndpoint#insertDeviceInfo()
Distinct paths: 2
Paths with API calls: 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close() 1

Analyzing: com.example.app.DeviceInfo#jdoGetdeviceRegistrationID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.example.app.EMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.example.app.DeviceInfoEndpoint#getEntityManager()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager() 1

Analyzing: com.example.app.MessageEndpoint#getEntityManager()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager() 1

Analyzing: com.example.app.MessageEndpoint#listMessages()
Distinct paths: 12
Paths with API calls: 12
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->javax.persistence.EntityManager#close() 2

Analyzing: com.example.app.MessageEndpoint#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.example.app.MessageData#setMessage()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.example.app.DeviceInfo#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.example.app.MessageData#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.example.app.MessageData#jdoSetmessage()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.example.app.DeviceInfo#jdoSetdeviceRegistrationID()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.example.app.DeviceInfo#setDeviceRegistrationID()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.example.app.MessageData#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.example.app.MessageEndpoint#doSendViaGcm()
Distinct paths: 8
Paths with API calls: 4
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#close()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 2
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 2

Analyzing: com.example.app.MessageEndpoint#sendMessage()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close()->javax.persistence.EntityManagerFactory#createEntityManager()->com.google.appengine.api.datastore.Cursor#fromWebSafeString()->javax.persistence.Query#getResultList()->com.google.appengine.datanucleus.query.JPACursorHelper#getCursor()->com.google.appengine.api.datastore.Cursor#toWebSafeString()->javax.persistence.EntityManager#close() 1

Analyzing: com.example.app.MessageData#jdoSettimestamp()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.example.app.MessageData#setTimestamp()
Distinct paths: 1
Paths with API calls: 0

[largest] 4

----------------- PROJECT: ca-shellyphoto -----------------
Analyzing: info.berryworks.photoorder.Ca_photoorderServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.Ca_photoorderServlet#doGet()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.dao.Net#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletAddurl#doPost()
Distinct paths: 13
Paths with API calls: 13
[path] com.google.appengine.api.users.UserService#getCurrentUser() 13

Analyzing: info.berryworks.photoorder.dao.Net#getImages()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletAddurl#checkNull()
Distinct paths: 2
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.dao.Dao#addPOPhoto()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.dao.EMFService#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.model.POPhoto#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletAddurl#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.dao.Dao#removePOOrder()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.dao.Dao#listPOOrders()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList() 1

Analyzing: info.berryworks.photoorder.ServletClearOrders#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.model.POOrder#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletClearOrders#doGet()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList() 4
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5

Analyzing: info.berryworks.photoorder.model.POOrder#<init>()
Distinct paths: 9
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreateOrder#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreateOrder#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.ServletCreateOrder#checkNull()
Distinct paths: 2
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.dao.Dao#addPOOrder()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.ServletCreatePOAlbum#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.model.POAlbum#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreatePOAlbum#checkNull()
Distinct paths: 2
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreatePOAlbum#doPost()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 4
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5

Analyzing: info.berryworks.photoorder.dao.Dao#addPOAlbum()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.dao.Dao#addPOGroup()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.model.POGroup#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreatePOGroup#doPost()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 4

Analyzing: info.berryworks.photoorder.ServletCreatePOGroup#checkNull()
Distinct paths: 2
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreatePOGroup#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreatePOPhoto#doGet()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 4
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5

Analyzing: info.berryworks.photoorder.ServletCreatePOPhoto#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreatePOPhoto#checkNull()
Distinct paths: 2
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.dao.Dao#addPOUser()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.model.POUser#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreatePOUser#checkNull()
Distinct paths: 2
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreatePOUser#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreatePOUser#doPost()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 4

Analyzing: info.berryworks.photoorder.model.Todo#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreateTodo#checkNull()
Distinct paths: 2
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletCreateTodo#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.dao.Dao#add()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.ServletCreateTodo#doPost()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.ServletDpia#doPost()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList() 4
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5

Analyzing: info.berryworks.photoorder.model.POPhoto#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.dao.Dao#removePOPhoto()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.dao.Dao#getPOPhotos()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.Query#getResultList() 1

Analyzing: info.berryworks.photoorder.ServletDpia#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletRemoveOrder#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletRemoveOrder#doGet()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.users.UserService#getCurrentUser() 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.ServletRemoveOrderA#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletRemoveOrderA#doGet()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 4

Analyzing: info.berryworks.photoorder.ServletRemovePOAlbum#doGet()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 4

Analyzing: info.berryworks.photoorder.ServletRemovePOAlbum#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.dao.Dao#removePOAlbum()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.dao.Dao#removePOGroup()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.ServletRemovePOGroup#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletRemovePOGroup#doGet()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 4
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5

Analyzing: info.berryworks.photoorder.ServletRemovePOPhoto#doGet()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 4
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5

Analyzing: info.berryworks.photoorder.ServletRemovePOPhoto#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.dao.Dao#removePOUser()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.ServletRemovePOUser#doGet()
Distinct paths: 9
Paths with API calls: 9
[path] com.google.appengine.api.users.UserService#getCurrentUser() 5
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 4

Analyzing: info.berryworks.photoorder.ServletRemovePOUser#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.dao.Dao#remove()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

Analyzing: info.berryworks.photoorder.ServletRemoveTodo#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: info.berryworks.photoorder.ServletRemoveTodo#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#find()->javax.persistence.EntityManager#remove()->javax.persistence.EntityManager#close() 1

[largest] 13

----------------- PROJECT: eventplan -----------------
Analyzing: com.florianpaul.epn.mdl.ResourceItem#setText()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#setOwner()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#jdoSetdatatype()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Attendee#jdoSetevent()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Event#getTitle()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#jdoGetkey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#jdoGeteventTypeKeys()
Distinct paths: 9
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Event#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#jdoSetdescription()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#addResourceItem()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.EventplanServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#getKey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.srv.EMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#jdoGetresourceTypeKeys()
Distinct paths: 9
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#removeResourceType()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#jdoGetname()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#addEventType()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.EventplanServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.Query#getResultList()->javax.persistence.EntityManager#close() 1

Analyzing: com.florianpaul.epn.mdl.EventType#addEvent()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#getOwner()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#addResourceType()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Attendee#addResourceItem()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#jdoGeteventTypes()
Distinct paths: 9
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#jdoGetkey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Attendee#getResourceItemKeys()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Attendee#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#setDatatype()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#addEventType()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#setName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Event#jdoSettitle()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#getName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Attendee#jdoGetresourceItemKeys()
Distinct paths: 9
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Event#jdoGetattendees()
Distinct paths: 9
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#setName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#jdoSetowner()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#jdoSetname()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#jdoGetkey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#jdoSetname()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.EventplanServlet#persist()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#getCurrentUser()->javax.persistence.EntityManagerFactory#createEntityManager()->javax.persistence.EntityManager#persist()->javax.persistence.Query#getResultList()->javax.persistence.EntityManager#close() 1

Analyzing: com.florianpaul.epn.EventplanServlet#modelExample()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.users.UserService#getCurrentUser() 2

Analyzing: com.florianpaul.epn.mdl.Event#jdoSettype()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceItem#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceItem#jdoSettype()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#getEventTypes()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#jdoSetplan()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Event#jdoGettitle()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#jdoGetresourceItems()
Distinct paths: 9
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#jdoGetevents()
Distinct paths: 9
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#jdoGetowner()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Event#addAttendee()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#addResourceType()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#jdoSetplan()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#setDescription()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#jdoGetresourceTypes()
Distinct paths: 9
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Event#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Attendee#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Event#getAttendees()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceItem#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Event#setTitle()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#getKey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceType#removeEventType()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceItem#jdoSettext()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.Plan#getResourceTypes()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceItem#getKey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.ResourceItem#jdoGetkey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#getKey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.florianpaul.epn.mdl.EventType#addResourceTypes()
Distinct paths: 1
Paths with API calls: 0

[largest] 2

----------------- PROJECT: filmfleximdb -----------------
Analyzing: com.monksvaughan.filmflex.ContentProvider#getContent()
Distinct paths: 2
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.monksvaughan.filmflex.Film#getTitle()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.ContentProvider#createContent()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.monksvaughan.filmflex.Film#getLinkTitle()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.FilmflexReviewsServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.FilmflexReviewsServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.monksvaughan.filmflex.Film#html()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.Film#jdoGetimdbId()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.PMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.Film#jdoGetrating()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.ContentProvider#getAnalytics()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.Film#jdoGettitle()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.LaunchLoadListingServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.LaunchLoadListingServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.monksvaughan.filmflex.LoadListing#execute()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.monksvaughan.filmflex.LoadListing#getFilmListFromFF()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.ContentProvider#updateContentInCache()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.monksvaughan.filmflex.Film#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.Film#getImdbId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.Utils#getRating()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.LoadRating#execute()
Distinct paths: 18
Paths with API calls: 18
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 16
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 2

Analyzing: com.monksvaughan.filmflex.LoadRating#getImdbIdForFilm()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.Film#jdoSetrating()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.LoadRating#getImdbRatingForId()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.Utils#getId()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.Film#jdoSetimdbId()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.Film#setRating()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.LaunchLoadRatingServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.monksvaughan.filmflex.Film#setImdbId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.monksvaughan.filmflex.LaunchLoadRatingServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

[largest] 16

----------------- PROJECT: freemobilenetstat-gae -----------------
Analyzing: org.pixmob.freemobile.netstat.gae.web.v1.DeviceService#unregister()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.repo.DeviceException#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.repo.Device#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.repo.DeviceRepository#delete()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.repo.DeviceRepository#create()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.web.v1.DeviceService#register()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.repo.DeviceStat#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.web.v1.DailyDeviceStatService#storeStats()
Distinct paths: 10
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.repo.DeviceStatRepository#update()
Distinct paths: 4
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.repo.DeviceNotFoundException#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.web.v1.InfoService#isClientCompatible()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.web.v1.InfoService#checkAvailability()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.web.v1.InfoService#getAvailability()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.web.v1.InfoService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.repo.DeviceStatRepository#getAll()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.web.task.UpdateChartsTask#computeNetworkUsage()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.repo.ChartDataRepository#put()
Distinct paths: 3
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.repo.ChartData#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.web.task.UpdateChartsTask#updateCharts()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.pixmob.freemobile.netstat.gae.web.cron.CronServlet#doGet()
Distinct paths: 3
Paths with API calls: 1
[path] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()->com.google.appengine.api.taskqueue.Queue#add() 1

Analyzing: org.pixmob.freemobile.netstat.gae.web.cron.CronServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

[largest] 1

----------------- PROJECT: gae-event-logger -----------------
Analyzing: ca.sheepdoginc.eventlogging.EventLoggingServlet#doGet()
Distinct paths: 6
Paths with API calls: 0

Analyzing: ca.sheepdoginc.eventlogging.EventLoggingServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: ca.sheepdoginc.eventlogging.EventImager#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: ca.sheepdoginc.eventlogging.EventImager#doGet()
Distinct paths: 9
Paths with API calls: 0

[largest] 0

----------------- PROJECT: gae-getting-started -----------------
Analyzing: com.google.appengine.codelab.ContactServlet#doGet()
Distinct paths: 3
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.Util#deleteFromCache()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Util#findEntity()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.ContactServlet#doPost()
Distinct paths: 3
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.appengine.codelab.Util#listEntities()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 3

Analyzing: com.google.appengine.codelab.Util#deleteEntity()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: com.google.appengine.codelab.ContactServlet#createEntity()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.ContactServlet#doPut()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.ContactServlet#updateEntity()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.ContactServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Util#writeJSON()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Util#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Util#persistEntity()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.ContactServlet#doDelete()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.appengine.codelab.CustomerServlet#doPut()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.CustomerServlet#doGet()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 3

Analyzing: com.google.appengine.codelab.Customer#getSingleCustomer()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Util$1#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Util#listChildKeys()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.CustomerServlet#doPost()
Distinct paths: 3
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.memcache.MemcacheService#deleteAll()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.memcache.MemcacheService#deleteAll()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.appengine.codelab.BaseServlet#doGet()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Customer#createOrUpdateCustomer()
Distinct paths: 6562
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.CustomerServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.CustomerServlet#doDelete()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.memcache.MemcacheService#deleteAll()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.memcache.MemcacheService#deleteAll()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.appengine.codelab.BaseServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Customer#getAllCustomers()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.Customer#getCustomer()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.Item#getItem()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.Item#getAllItems()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.ItemServlet#doGet()
Distinct paths: 7
Paths with API calls: 5
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 5

Analyzing: com.google.appengine.codelab.Product#getProduct()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.ItemServlet#doPut()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Item#createOrUpdateItem()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Util#listChildren()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.Item#getItemsForProduct()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.Item#getSingleItem()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.ItemServlet#doPost()
Distinct paths: 3
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.appengine.codelab.ItemServlet#doDelete()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.google.appengine.codelab.ItemServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Order#getAllOrders()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.OrderServlet#doDelete()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.OrderServlet#doPost()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.OrderServlet#doGet()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 3

Analyzing: com.google.appengine.codelab.Order#createOrUpdateOrder()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Order#getAllOrdersForCustomer()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.OrderServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.OrderServlet#doPut()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.Product#createOrUpdateProduct()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.ProductServlet#doGet()
Distinct paths: 5
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 3

Analyzing: com.google.appengine.codelab.Product#getAllProducts()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.google.appengine.codelab.ProductServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.appengine.codelab.ProductServlet#doDelete()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.appengine.codelab.ProductServlet#doPost()
Distinct paths: 3
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.appengine.codelab.ProductServlet#doPut()
Distinct paths: 1
Paths with API calls: 0

[largest] 5

----------------- PROJECT: gae-jdo -----------------
Analyzing: com.giago.appengine.commons.servlet.AuthServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.servlet.AbstractBaseServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.servlet.AuthServlet#getAndPost()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.users.UserService#isUserLoggedIn() 2

Analyzing: com.giago.appengine.commons.servlet.AbstractBaseServlet#returnContent()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource$Builder#title()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource$Builder#type()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource#setLink()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource$Builder#init()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.FeedServlet#init()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource$Builder#build()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource$Builder#author()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource$Builder#description()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.GaeFeedItemSource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource#setType()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.FeedBuilder#build()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.FeedBuilder#<init>()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource$Builder#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.FeedServlet#getAndPost()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource#setDescription()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.FeedBuilder#setFeedItems()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.FeedServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource$Builder#modifiedDate()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.FeedBuilder#setFeedMetadata()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource#setTitle()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource$Builder#link()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource#setAuthor()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.feed.source.StaticFeedSource#setModifiedDate()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.xmpp.XmppServlet#handle()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.xmpp.XmppServlet#informClient()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.channel.ChannelService#sendMessage() 1

Analyzing: com.giago.appengine.commons.xmpp.XmppServlet#getRelevantPart()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.xmpp.XmppServlet#getFrom()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.xmpp.Presence#getFromJid() 1

Analyzing: com.giago.appengine.commons.xmpp.XmppServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.xmpp.XmppServlet#changePresence()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.xmpp.XMPPService#sendPresence() 1

Analyzing: com.giago.appengine.commons.xmpp.XmppServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.xmpp.XMPPService#parseMessage() 1

Analyzing: com.giago.appengine.commons.task.KeepAliveTask#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.taskqueue.QueueFactory#getQueue() 1

Analyzing: com.giago.appengine.commons.task.KeepAliveTask#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.taskqueue.QueueFactory#getQueue() 1

Analyzing: com.giago.appengine.commons.task.KeepAliveTask#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.giago.appengine.commons.task.KeepAliveTask#getAndPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.taskqueue.QueueFactory#getQueue() 1

[largest] 2

----------------- PROJECT: gae-webdav -----------------
Analyzing: com.googlecode.freewebdav.entities.WebdavFolder#setParent()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.HomeServlet#doPost()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.users.UserService#getCurrentUser() 2

Analyzing: com.googlecode.freewebdav.http.HomeServlet#doGet()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.users.UserService#getCurrentUser()->com.google.appengine.api.users.UserService#createLogoutURL() 2
[path] com.google.appengine.api.users.UserService#getCurrentUser() 1

Analyzing: com.googlecode.freewebdav.http.HomeServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavFolder#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavUser#setPassword()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavUser#getPassword()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavUser#setUsername()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavUser#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavUser#getUsername()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavUser#setUserId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.webdav.ResourceFactory#getUserKeyFromHost()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavFileData#getData()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavFile#getData()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.webdav.ResourceFactory#getFolder()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.DownloadServlet#doGet()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.DownloadServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavFile#getContentType()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.entities.WebdavFile#getName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.LoginServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.LoginServlet#doGet()
Distinct paths: 2
Paths with API calls: 1
[path] com.google.appengine.api.users.UserService#createLoginURL() 1

Analyzing: com.googlecode.freewebdav.http.WebdavServlet#inject()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.WebdavServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.WebdavServlet#response()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.WebdavServlet#service()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.WebdavServlet#rawRequest()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.WebdavUserSecurityManager#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.WebdavServlet#request()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.googlecode.freewebdav.http.WebdavServlet#rawResponse()
Distinct paths: 1
Paths with API calls: 0

[largest] 2

----------------- PROJECT: gcm-demo-appengine-maven -----------------
Analyzing: com.google.android.gcm.demo.server.HomeServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.HomeServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.android.gcm.demo.server.Datastore#getTotalDevices()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: com.google.android.gcm.demo.server.BaseServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.HomeServlet#doGet()
Distinct paths: 4
Paths with API calls: 4
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 4

Analyzing: com.google.android.gcm.demo.server.RegisterServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.android.gcm.demo.server.BaseServlet#setSuccess()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.Datastore#findDeviceByRegId()
Distinct paths: 4
Paths with API calls: 4
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 4

Analyzing: com.google.android.gcm.demo.server.Datastore#register()
Distinct paths: 4
Paths with API calls: 4
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList() 1

Analyzing: com.google.android.gcm.demo.server.BaseServlet#getParameter()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.BaseServlet#isEmptyOrNull()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.RegisterServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.Datastore#createMulticast()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: com.google.android.gcm.demo.server.SendAllMessagesServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.Datastore#getDevices()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: com.google.android.gcm.demo.server.SendAllMessagesServlet#doPost()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback()->com.google.appengine.api.taskqueue.QueueFactory#getQueue()->com.google.appengine.api.taskqueue.Queue#add() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback()->com.google.appengine.api.taskqueue.QueueFactory#getQueue() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.android.gcm.demo.server.SendMessageServlet#sendMulticastMessage()
Distinct paths: 12
Paths with API calls: 12
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 4
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 4
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 2

Analyzing: com.google.android.gcm.demo.server.SendMessageServlet#init()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.SendMessageServlet#doPost()
Distinct paths: 8
Paths with API calls: 4
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 2

Analyzing: com.google.android.gcm.demo.server.SendMessageServlet#newSender()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.Datastore#updateMulticast()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: com.google.android.gcm.demo.server.Datastore#updateRegistration()
Distinct paths: 4
Paths with API calls: 4
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.android.gcm.demo.server.Datastore#getMulticast()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: com.google.android.gcm.demo.server.SendMessageServlet#multicastDone()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.android.gcm.demo.server.Datastore#deleteMulticast()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: com.google.android.gcm.demo.server.Datastore#unregister()
Distinct paths: 4
Paths with API calls: 4
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.Transaction#commit() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: com.google.android.gcm.demo.server.SendMessageServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.SendMessageServlet#taskDone()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.SendMessageServlet#retryTask()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.SendMessageServlet#sendSingleMessage()
Distinct paths: 5
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

Analyzing: com.google.android.gcm.demo.server.UnregisterServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.google.android.gcm.demo.server.UnregisterServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1

[largest] 4

----------------- PROJECT: gptrans -----------------
Analyzing: net.premereur.gae.transport.service.admin.CleanQuoteRequestsResource#cleanQuoteRequests()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.admin.CleanQuoteRequestsResource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#getCustomerReference()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#getLatestShipmentTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestResource#removeQuoteRequest()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#getEarliestShipmentTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#jdoGetcallbackURL()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.common.ResourceBase#getRequestId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.common.ResourceBase#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestResource#getQuoteRequest()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#jdoGetcustomerReference()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#jdoGetearliestShipmentTime()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#getCallbackURL()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestResource#doInit()
Distinct paths: 2
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#jdoGetlatestShipmentTime()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestResource#toXml()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#getNumPackages()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestResource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestResourceBase#getRepository()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#getWeight()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#jdoGetnumPackages()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#jdoGetid()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.serialisation.XmlQuoteRequest#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestResourceBase#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#valueWithDefault()
Distinct paths: 2
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestResource#storeQuoteRequest()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#jdoGetweight()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteConverter#fromRepresentation()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.serialisation.XmlQuoteRequests#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteConverter#getFormDate()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteConverter#getFormInt()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteConverter#getFormFloat()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteConverter#getFormString()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestsResource#toXml()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestsResource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteConverter#parseDate()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestsResource#create()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuoteRequestsResource#getScheduleService()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#jdoGetpickupToTime()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#getPickupToTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#getValidity()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#jdoSetquotes()
Distinct paths: 4
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.ServiceLocator#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#jdoGetprice()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuotesResource#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#jdoGetcustomerReference()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#jdoGetvalidity()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#jdoGetid()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.serialisation.XmlQuotes#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#jdoGetpickupFromTime()
Distinct paths: 10
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#getQuotes()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.serialisation.XmlQuote#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#computeQuotes()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#getCustomerReference()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.quote.v1.QuotesResource#getQuotes()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#getPickupFromTime()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#computeQuotesIfNotAvailableYet()
Distinct paths: 2
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.ServiceLocator#getQuoteRequestRepository()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.QuoteRequest#jdoGetquotes()
Distinct paths: 9
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.domain.Quote#getPrice()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.task.MakeQuoteResource#computeOffers()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.task.MakeQuoteResource#getRepository()
Distinct paths: 1
Paths with API calls: 0

Analyzing: net.premereur.gae.transport.service.task.MakeQuoteResource#<init>()
Distinct paths: 1
Paths with API calls: 0

[largest] 0

----------------- PROJECT: hildy -----------------
Analyzing: com.appspot.hildy.servlets.BloggerServlet#doGet()
Distinct paths: 6
Paths with API calls: 5
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 3
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit() 1
[path] com.google.appengine.api.datastore.DatastoreService#get() 1

Analyzing: com.appspot.hildy.services.DropboxService#getFile()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.SyncService#slugFromFilePathName()
Distinct paths: 8
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.DropboxServiceException#QuotaExceeded()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.DropboxService#translateDropboxAPIError()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.PersistenceService#getBlogger()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#get() 1

Analyzing: com.appspot.hildy.model.Credentials#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.DropboxServiceException#TooManyRequests()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.model.Blogger#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.TemplateService#render()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.model.Entry#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.model.dropbox.DropboxDelta#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.SyncService#sync()
Distinct paths: 6
Paths with API calls: 6
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit() 3
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit() 3

Analyzing: com.appspot.hildy.services.DropboxService#getDelta()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.appspot.hildy.servlets.BloggerServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.model.MuDate#<init>()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.DropboxServiceException#BadOAuthRequest()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.DropboxServiceException#MustReauthenticate()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.DropboxService#newOAuthParameters()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.model.dropbox.DropboxFile#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.PersistenceService#getRecentEntries()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.appspot.hildy.servlets.EntriesServlet#doGet()
Distinct paths: 2
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#get() 1

Analyzing: com.appspot.hildy.services.PersistenceService#getEntry()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#get() 1

Analyzing: com.appspot.hildy.servlets.EntriesServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.servlets.FeedServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.model.Blog#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.servlets.FeedServlet#doGet()
Distinct paths: 4
Paths with API calls: 3
[path] com.google.appengine.api.datastore.DatastoreService#get() 1
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: com.appspot.hildy.servlets.RegisterServlet#doOAuthRegistration()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.memcache.MemcacheService#put()->com.google.appengine.api.memcache.MemcacheService#put() 2
[path] com.google.appengine.api.memcache.MemcacheService#put() 1

Analyzing: com.appspot.hildy.servlets.RegisterServlet#doOAuthCallback()
Distinct paths: 7
Paths with API calls: 4
[path] com.google.appengine.api.datastore.DatastoreService#put() 1
[path] com.google.appengine.api.memcache.MemcacheService#get() 2
[path] com.google.appengine.api.memcache.MemcacheService#get()->com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.appspot.hildy.servlets.RegisterServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.services.PersistenceService#putBlogger()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#put() 2

Analyzing: com.appspot.hildy.services.DropboxService#getAccount()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.appspot.hildy.servlets.RegisterServlet#doGet()
Distinct paths: 5
Paths with API calls: 4
[path] com.google.appengine.api.memcache.MemcacheService#put()->com.google.appengine.api.memcache.MemcacheService#put() 2
[path] com.google.appengine.api.memcache.MemcacheService#get()->com.google.appengine.api.datastore.DatastoreService#put() 2

Analyzing: com.appspot.hildy.model.MuDate#getDate()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.servlets.WelcomeServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.appspot.hildy.servlets.WelcomeServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 1

Analyzing: com.appspot.hildy.services.PersistenceService#getAllBloggers()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asList() 2

[largest] 3

----------------- PROJECT: insta4j -----------------
Analyzing: com.insta4j.instagram.exception.InstagramException#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.insta4j.instagram.exception.InstagramError#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.insta4j.instagram.http.URLFetchAPICaller#getData()
Distinct paths: 30
Paths with API calls: 24
[path] com.google.appengine.api.urlfetch.HTTPResponse#getContent() 24

Analyzing: com.insta4j.instagram.http.URLFetchAPICaller#postData()
Distinct paths: 8
Paths with API calls: 0

Analyzing: com.insta4j.instagram.http.URLFetchAPICaller#deleteData()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.urlfetch.URLFetchService#fetch()->com.google.appengine.api.urlfetch.HTTPResponse#getContent() 2

Analyzing: com.insta4j.instagram.http.URLFetchAPICaller#getResponse()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.insta4j.instagram.InstaProp#get()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.insta4j.instagram.http.URLFetchAPICaller#constructParams()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.insta4j.instagram.http.URLFetchAPICaller#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.insta4j.instagram.util.JSONToObjectTransformer#getError()
Distinct paths: 3
Paths with API calls: 0

[largest] 24

----------------- PROJECT: opensajux -----------------
Analyzing: com.opensajux.service.ApplicationService#getSiteInfo()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.Query#execute() 3

Analyzing: com.opensajux.service.ApplicationService#saveSiteInfo()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#makePersistent() 1

Analyzing: com.opensajux.service.ApplicationService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.BlogService#getBlogPosts()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.Query#execute() 3

Analyzing: com.opensajux.service.BlogService#getById()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById() 1

Analyzing: com.opensajux.service.BlogService#getCount()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.BlogService#getBlogPostCount()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.BlogService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.BlogService#getBlogs()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.Query#execute() 3

Analyzing: com.opensajux.service.BlogService#removeBlog()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#deletePersistent() 1

Analyzing: com.opensajux.service.BlogService#saveBlog()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#makePersistent() 2
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.MenuItemService#removeMenuItem()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.MenuItemService#getCount()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.MenuService#getMenuByName()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 3

Analyzing: com.opensajux.service.MenuItemService#saveMenuItem()
Distinct paths: 4
Paths with API calls: 4
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#makePersistent() 4

Analyzing: com.opensajux.service.MenuItemService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.MenuItemService#getMenuItems()
Distinct paths: 4
Paths with API calls: 4
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 3
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.MenuItemService#getById()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById() 1

Analyzing: com.opensajux.service.MenuService#removeMenu()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.MenuService#getById()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById() 1

Analyzing: com.opensajux.service.MenuService#saveMenu()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#makePersistent() 2

Analyzing: com.opensajux.service.MenuService#getCount()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.MenuService#getMenus()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.Query#execute() 3

Analyzing: com.opensajux.service.MenuService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.NewsService#getById()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById() 1

Analyzing: com.opensajux.service.NewsService#removeNews()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.NewsService#saveNews()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#makePersistent() 2

Analyzing: com.opensajux.service.NewsService#getNews()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.Query#execute() 3

Analyzing: com.opensajux.service.NewsService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.NewsService#getCount()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.PlusService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.PlusService#saveBlog()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 1
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#makePersistent() 2

Analyzing: com.opensajux.service.PlusService#removeBlog()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#deletePersistent() 1

Analyzing: com.opensajux.service.PortfolioService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.PortfolioService#getPortfolio()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.SiteLinkService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.opensajux.service.SiteLinkService#getById()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById() 1

Analyzing: com.opensajux.service.SiteLinkService#getLinks()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.Query#execute() 2

Analyzing: com.opensajux.service.SiteLinkService#saveSiteLink()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#makePersistent() 2
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.SiteLinkService#removeSiteLink()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#declareParameters()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#deletePersistent() 1

Analyzing: com.opensajux.service.SiteLinkService#getCount()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.TalkStreamService#getTalkStreams()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.Query#execute() 3

Analyzing: com.opensajux.service.TalkStreamService#getCount()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute() 1

Analyzing: com.opensajux.service.TalkStreamService#<init>()
Distinct paths: 1
Paths with API calls: 0

[largest] 4

----------------- PROJECT: spring-social-appengine -----------------
Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#setInterceptors()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#findConnections()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#getKind()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#getPrimaryConnection()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 2

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#createConnectionKeyName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#addConnection()
Distinct paths: 6
Paths with API calls: 6
[path] com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get() 6

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#findPrimaryConnection()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#getProviderId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#getConnection()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity() 2

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#removeConnections()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable()->com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#interceptingConnectionsTo()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#access$200()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository$ServiceProviderConnectionMapper#decrypt()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#updateConnection()
Distinct paths: 4
Paths with API calls: 4
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#put()->com.google.appengine.api.datastore.Transaction#commit() 2

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#removeConnection()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit()->com.google.appengine.api.datastore.Transaction#rollback() 1
[path] com.google.appengine.api.datastore.DatastoreService#beginTransaction()->com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.DatastoreService#delete()->com.google.appengine.api.datastore.Transaction#commit() 1

Analyzing: org.springframework.social.connect.appengine.DatastoreUtils#queryForList()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#findAllConnections()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository$ServiceProviderConnectionMapper#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.DatastoreUtils#queryForMap()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#access$100()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository$ServiceProviderConnectionMapper#mapEntity()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository$ServiceProviderConnectionMapper#mapConnectionData()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#addInterceptor()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository$1#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#encrypt()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#getParentKind()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineConnectionRepository#findConnectionsToUsers()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineUsersConnectionRepository#setConnectionSignUp()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineUsersConnectionRepository#findUserIdsWithConnection()
Distinct paths: 4
Paths with API calls: 4
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 4

Analyzing: org.springframework.social.connect.appengine.AppEngineUsersConnectionRepository#findUserIdsConnectedTo()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: org.springframework.social.connect.appengine.AppEngineUsersConnectionRepository#getKind()
Distinct paths: 2
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineUsersConnectionRepository#addInterceptor()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineUsersConnectionRepository#setInterceptors()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineUsersConnectionRepository$1#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineUsersConnectionRepository#setKindPrefix()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineUsersConnectionRepository#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: org.springframework.social.connect.appengine.AppEngineUsersConnectionRepository#createConnectionRepository()
Distinct paths: 2
Paths with API calls: 0

[largest] 6

----------------- PROJECT: sky -----------------
Analyzing: Cash.Pages.AccountEngine#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: Cash.Pages.AccountEngine#GetBankAccount()
Distinct paths: 1
Paths with API calls: 0

Analyzing: Cash.Pages.AccountEngine#doPost()
Distinct paths: 8
Paths with API calls: 0

Analyzing: Cash.Pages.AccountEngine#GetPostDataFromStream()
Distinct paths: 1
Paths with API calls: 0

Analyzing: Cash.Pages.AccountEngine#doLog()
Distinct paths: 1
Paths with API calls: 0

Analyzing: Cash.Pages.AccountEngine#doGet()
Distinct paths: 3
Paths with API calls: 0

Analyzing: Cash.Pages.AccountEngine#SendOutput()
Distinct paths: 1
Paths with API calls: 0

Analyzing: Cash.Pages.AccountEngine#CheckUserSession()
Distinct paths: 2
Paths with API calls: 0

Analyzing: Scripts.Pages.ScriptsEngine#CheckUserSession()
Distinct paths: 2
Paths with API calls: 0

Analyzing: Scripts.Pages.ScriptsEngine#doPost()
Distinct paths: 1
Paths with API calls: 0

Analyzing: Scripts.Pages.ScriptsEngine#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: Scripts.Pages.ScriptsEngine#SendOutput()
Distinct paths: 1
Paths with API calls: 0

Analyzing: Scripts.Pages.ScriptsEngine#doGet()
Distinct paths: 5
Paths with API calls: 0

Analyzing: Users.Pages.LoginUser#Login()
Distinct paths: 6
Paths with API calls: 0

Analyzing: Users.Pages.LoginUser#doGet()
Distinct paths: 5
Paths with API calls: 0

Analyzing: Users.Pages.LoginUser#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: Users.Pages.LoginUser#Register()
Distinct paths: 8
Paths with API calls: 0

Analyzing: Users.Pages.LoginUser#CheckLogin()
Distinct paths: 2
Paths with API calls: 0

Analyzing: Users.Pages.LoginUser#Logout()
Distinct paths: 1
Paths with API calls: 0

[largest] 0

----------------- PROJECT: Anywhere-2.0.0-App-Engine -----------------
Analyzing: com.jcolley.anywhere2.GAE.server.Serve#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.Serve#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.blobstore.BlobstoreService#serve() 1

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.Upload#doPost()
Distinct paths: 13
Paths with API calls: 13
[path] com.google.appengine.api.blobstore.BlobstoreService#getUploadedBlobs()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 8
[path] com.google.appengine.api.blobstore.BlobstoreService#getUploadedBlobs()->com.google.appengine.api.images.ImagesService#getServingUrl()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 4
[path] com.google.appengine.api.blobstore.BlobstoreService#getUploadedBlobs() 1

Analyzing: com.jcolley.anywhere2.GAE.server.jdo.PMF#get()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.Upload#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoSetblobKey()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoSettype()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGettype()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoSetlng()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#setBlobKey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.Upload2#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoSetlat()
Distinct paths: 4
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.Upload2#doPost()
Distinct paths: 4
Paths with API calls: 4
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 2
[path] com.google.appengine.api.images.ImagesService#getServingUrl()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 2

Analyzing: com.jcolley.anywhere2.GAE.client.SerialLatLng#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#getType()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.Upload2#drawCircleFromRadius()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#setPoints()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#setType()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.Upload3#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.Upload3#doPost()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.blobstore.BlobstoreService#getUploadedBlobs() 2

Analyzing: com.jcolley.anywhere2.GAE.server.GetUserList#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.LoginJDO#jdoIsDetached()
Distinct paths: 3
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.LoginJDO#jdoGetpassword()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.GetUserList#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.LoginJDO#getPassword()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGetlat()
Distinct paths: 9
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGetlng()
Distinct paths: 9
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.GetContent#pointInPolygon()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGetblobKey()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#getLng()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#getPointCount()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.GetContent#doPost()
Distinct paths: 4
Paths with API calls: 4
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 4

Analyzing: com.jcolley.anywhere2.GAE.server.GetContent#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#getBlobKey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#getLat()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.MobileBlob#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.MobileBlob#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.blobstore.BlobstoreService#createUploadUrl() 1

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#setId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.RpcServiceImpl#getContentInfo()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGety()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGetid()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#setX()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#setDescription()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.RpcServiceImpl$1#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.LoginJDO#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.RpcServiceImpl#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGetdate()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.shared.ContentInfo#setNumCollections()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.RpcServiceImpl#verifyUser()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 2

Analyzing: com.jcolley.anywhere2.GAE.shared.ContentInfo#setNumPieces()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#getListPoints()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.LoginJDO#setPassword()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#setAuthor()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.RpcServiceImpl#getAllContent()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoSetauthor()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#setAuthor()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.RpcServiceImpl#updateContentPiece()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jcolley.anywhere2.GAE.server.RpcServiceImpl#getAppInfo()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoSetdescription()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGetmobileFlag()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#getPoints()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.RpcServiceImpl#getBlobUploadUrl()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.blobstore.BlobstoreService#createUploadUrl() 1

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.LoginJDO#getUser()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#setDate()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#getAuthor()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.RpcServiceImpl#registerUser()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.LoginJDO#jdoSetuser()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#setDescription()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#setR()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#setBlobKey()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.LoginJDO#jdoGetuser()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.shared.ContentInfo#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#setType()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.LoginJDO#jdoSetpassword()
Distinct paths: 5
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGetx()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#getSerialObject()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGetauthor()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#getDescription()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.RpcServiceImpl#deleteContentPiece()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#deletePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGetdescription()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#setY()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPieceJDO#jdoGetr()
Distinct paths: 10
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#setMobileFlag()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.LoginJDO#setUser()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#getType()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.client.dataclass.ContentPiece#getId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.VarifyUser#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.jcolley.anywhere2.GAE.server.VarifyUser#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 1

[largest] 8

----------------- PROJECT: App-Engine-Java-Mapper-API-demos -----------------
Analyzing: com.ikai.mapperdemo.servlets.AddCommentServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.ikai.mapperdemo.servlets.AddCommentServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#get() 1

Analyzing: com.ikai.mapperdemo.servlets.AddCommentServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#put() 1

Analyzing: com.ikai.mapperdemo.servlets.AddCommentServlet#escapeCommentHtml()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.ikai.mapperdemo.servlets.ServeBlobServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.blobstore.BlobstoreService#serve() 1

Analyzing: com.ikai.mapperdemo.servlets.ServeBlobServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.ikai.mapperdemo.servlets.SuccessfulUploadServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.ikai.mapperdemo.servlets.SuccessfulUploadServlet#doGet()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.ikai.mapperdemo.servlets.UploadBlobServlet#doPost()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.blobstore.BlobstoreService#getUploadedBlobs() 2

Analyzing: com.ikai.mapperdemo.servlets.UploadBlobServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.ikai.mapperdemo.servlets.ViewCommentsServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#get()->com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.ikai.mapperdemo.servlets.ViewCommentsServlet#displayComments()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asIterable() 1

Analyzing: com.ikai.mapperdemo.servlets.ViewCommentsServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.ikai.mapperdemo.servlets.ViewCommentsServlet#displayTotalWordCount()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.DatastoreService#get() 1

Analyzing: com.ikai.mapperdemo.servlets.WordCountCompletedCallbackServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.ikai.mapperdemo.servlets.WordCountCompletedCallbackServlet#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.tools.mapreduce.MapReduceState#getMapReduceStateFromJobID()->com.google.appengine.tools.mapreduce.MapReduceState#getCounters()->com.google.appengine.api.datastore.DatastoreService#put() 1

[largest] 2

----------------- PROJECT: DateEngine -----------------
Analyzing: com.dateengine.controllers.BrowseServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.Query#closeAll() 1

Analyzing: com.dateengine.controllers.BrowseServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.dateengine.controllers.HomeServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.dateengine.controllers.HomeServlet#doGet()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.dateengine.controllers.MessageServlet#doPost()
Distinct paths: 2
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.dateengine.controllers.MessageServlet#doGet()
Distinct paths: 3
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.Query#execute()->javax.jdo.Query#closeAll() 1

Analyzing: com.dateengine.controllers.MessageServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.dateengine.controllers.MessageServlet#doNewMessage()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.dateengine.controllers.MessageServlet#doSendMessage()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.dateengine.controllers.MessageServlet#doInbox()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.Query#execute()->javax.jdo.Query#closeAll() 1

Analyzing: com.dateengine.controllers.PhotoServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.dateengine.controllers.PhotoServlet#doGet()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.PersistenceManager#getObjectById() 3

Analyzing: com.dateengine.controllers.PhotoServlet#getDataFromInputStream()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.dateengine.controllers.PhotoServlet#processUpload()
Distinct paths: 3
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 2

Analyzing: com.dateengine.controllers.PhotoServlet#doPost()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.dateengine.controllers.ProfileServlet#doGet()
Distinct paths: 4
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.dateengine.controllers.ProfileServlet#doViewProfile()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: com.dateengine.controllers.ProfileServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.dateengine.controllers.ProfileServlet#doEditProfile()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.dateengine.controllers.ProfileServlet#doViewMyProfile()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.dateengine.controllers.ProfileServlet#doSaveProfile()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 2

Analyzing: com.dateengine.controllers.ProfileServlet#doPost()
Distinct paths: 2
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

[largest] 3

----------------- PROJECT: EmployeeDirectory -----------------
Analyzing: com.mindstorm.employeesdirectory.search.SearchIndexManager#indexDocument()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.search.SearchService#getIndex()->com.google.appengine.api.search.Index#put() 1

Analyzing: com.mindstorm.employeesdirectory.servlets.AddEmployeeServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.servlets.AddEmployeeServlet#doGet()
Distinct paths: 2
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.utils.ImportEmployeesIntoIndex#processEmployees()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.search.SearchIndexManager#deleteDocumentFromIndex()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.search.SearchService#getIndex()->com.google.appengine.api.search.Index#delete() 1

Analyzing: com.mindstorm.employeesdirectory.entities.Employee#setFirstName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.services.EmployeesDirectoryIndexService#doPost()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.entities.Employee#setLastName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.services.EmployeesDirectoryIndexService#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.entities.Employee#setPreferredFullName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.entities.Employee#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.services.EmployeesDirectoryIndexService#getSuccessMessage()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.services.EmployeesDirectoryIndexService#doGet()
Distinct paths: 3
Paths with API calls: 3
[path] com.google.appengine.api.search.SearchService#getIndex()->com.google.appengine.api.search.Index#search() 3

Analyzing: com.mindstorm.employeesdirectory.entities.Employee#setRegion()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.services.EmployeesDirectoryIndexService#doDelete()
Distinct paths: 3
Paths with API calls: 1
[path] com.google.appengine.api.search.SearchService#getIndex()->com.google.appengine.api.search.Index#delete() 1

Analyzing: com.mindstorm.employeesdirectory.entities.Employee#setEmployeeCode()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.entities.Employee#setPhoneNumber()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.search.SearchIndexManager#retrieveDocuments()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.search.SearchService#getIndex()->com.google.appengine.api.search.Index#search() 1

Analyzing: com.mindstorm.employeesdirectory.services.EmployeesDirectoryIndexService#doPut()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.entities.Employee#setUserId()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.entities.Employee#setJobTitleName()
Distinct paths: 1
Paths with API calls: 0

Analyzing: com.mindstorm.employeesdirectory.entities.Employee#setEmailAddress()
Distinct paths: 1
Paths with API calls: 0

[largest] 3

----------------- PROJECT: Intrade-Archive -----------------
Analyzing: intrade.scripts.FetchMarketOverview#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.FetchMarketOverview#doGet()
Distinct paths: 8
Paths with API calls: 8
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue() 8

Analyzing: intrade.scripts.ProcessContractTrades#doGet()
Distinct paths: 3
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.ProcessContractTrades#fetchContractTrades()
Distinct paths: 4
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessContractTrades#parseContractTradeCSV()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessContractTrades#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessContractTrades#storeTradesfile()
Distinct paths: 4
Paths with API calls: 4
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 4

Analyzing: intrade.scripts.ProcessContractTrades#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessContractTrades#fetchTradesForContract()
Distinct paths: 3
Paths with API calls: 3
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.ProcessContractTrades#print()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessEventClass#lastRetrieved_eventclass()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.ProcessEventClass#storeEventClass()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessEventClass#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessEventClass#doGet()
Distinct paths: 30
Paths with API calls: 26
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 16
[path] javax.jdo.PersistenceManager#close() 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 8

Analyzing: intrade.scripts.ProcessEventClass#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessEventClass#print()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessEventClass#time_threshold()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.StoreClosingPrices#print()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.StoreClosingPrices#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.StoreClosingPrices#doGet()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.StoreTrades#doGet()
Distinct paths: 2
Paths with API calls: 2
[path] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()->javax.jdo.Query#execute()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.StoreTrades#print()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.StoreTrades#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessContractClosingPrices#fetchClosingPricesForContract()
Distinct paths: 17
Paths with API calls: 17
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 16
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessContractClosingPrices#parseContractClosingPriceCSV()
Distinct paths: 2
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessContractClosingPrices#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessContractClosingPrices#fetchContractClosingPricesCSV()
Distinct paths: 6
Paths with API calls: 4
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 4

Analyzing: intrade.scripts.ProcessContractClosingPrices#storeCSVfile()
Distinct paths: 4
Paths with API calls: 4
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 4

Analyzing: intrade.scripts.ProcessContractClosingPrices#print()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessContractClosingPrices#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessContractClosingPrices#doGet()
Distinct paths: 7
Paths with API calls: 4
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 4

Analyzing: intrade.scripts.ProcessEvent#parseContract()
Distinct paths: 4
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessEvent#print()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessEvent#storeEvent()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessEvent#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessEvent#doGet()
Distinct paths: 30
Paths with API calls: 26
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 8
[path] javax.jdo.PersistenceManager#close() 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 16

Analyzing: intrade.scripts.ProcessEvent#time_threshold()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessEvent#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessEvent#storeContracts()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessEvent#lastRetrieved_event()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.ProcessEvent#updateStoredContract()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessEventGroup#doGet()
Distinct paths: 36
Paths with API calls: 28
[path] javax.jdo.PersistenceManager#close() 4
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 8
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 16

Analyzing: intrade.scripts.ProcessEventGroup#time_threshold()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessEventGroup#print()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.ProcessEventGroup#lastRetrieved_group()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.ProcessEventGroup#doPost()
Distinct paths: 1
Paths with API calls: 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessEventGroup#storeEventGroup()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.ProcessEventGroup#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.StoreContracts#doGet()
Distinct paths: 120
Paths with API calls: 104
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 64
[path] javax.jdo.PersistenceManager#close() 8
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#close() 32

Analyzing: intrade.scripts.StoreContracts#storeEventGroups()
Distinct paths: 5
Paths with API calls: 4
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.StoreContracts#parseContract()
Distinct paths: 4
Paths with API calls: 0

Analyzing: intrade.scripts.StoreContracts#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.StoreContracts#lastRetrieved_eventclass()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.StoreContracts#storeEventClasses()
Distinct paths: 5
Paths with API calls: 4
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.StoreContracts#lastRetrieved_event()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.StoreContracts#time_threshold()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.StoreContracts#storeEvents()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.StoreContracts#print()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.StoreContracts#updateStoredContract()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.StoreContracts#lastRetrieved_group()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 2

Analyzing: intrade.scripts.StoreContracts#storeContracts()
Distinct paths: 2
Paths with API calls: 2
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#makePersistent()->javax.jdo.PersistenceManager#close() 1
[path] javax.jdo.PersistenceManager#getObjectById()->javax.jdo.PersistenceManager#close() 1

Analyzing: intrade.scripts.TruncateServlet#<init>()
Distinct paths: 1
Paths with API calls: 0

Analyzing: intrade.scripts.TruncateServlet#doGet()
Distinct paths: 1
Paths with API calls: 1
[path] com.google.appengine.api.datastore.PreparedQuery#asList()->com.google.appengine.api.datastore.DatastoreService#delete() 1

