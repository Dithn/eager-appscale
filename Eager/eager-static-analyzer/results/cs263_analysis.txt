----------------- PROJECT: aacalfa -----------------

Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: javax.servlet.ServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobInfoFactory is a phantom class!
Warning: javax.servlet.ServletOutputStream is a phantom class!
Warning: com.google.appengine.api.users.User is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreService is a phantom class!
Warning: com.google.appengine.api.users.UserService is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: com.google.appengine.api.images.ImagesServiceFactory is a phantom class!
Warning: com.google.appengine.api.images.ImagesService is a phantom class!
Warning: javax.servlet.RequestDispatcher is a phantom class!
Warning: com.google.appengine.api.images.ImagesService$OutputEncoding is a phantom class!
Warning: javax.servlet.ServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions$Builder is a phantom class!
Warning: com.google.appengine.api.users.UserServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobKey is a phantom class!
Warning: com.google.appengine.api.images.Composite is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.images.Composite$Anchor is a phantom class!
Warning: com.google.appengine.api.images.Image is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobInfo is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: cs263aacalfaproject.cs263aacalfaproject.Pair#<init>()
=================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263aacalfaproject.cs263aacalfaproject.Pair#getR()
===============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263aacalfaproject.cs263aacalfaproject.Serve#readImageData()
=========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 1
API calls in loops: 
  [loop] $b5 = l1 cmp 0L [Nesting Level: 1] : 1
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#getYCoord()
===============================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263aacalfaproject.cs263aacalfaproject.BoardServlet#deleteSelectedMarker()
=======================================================================================
Distinct paths through the code: 1
API calls in paths: [ 3 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#getXCoord()
  cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#getYCoord()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#getXCoord()
===============================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263aacalfaproject.cs263aacalfaproject.Pair#getL()
===============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263aacalfaproject.cs263aacalfaproject.BoardServlet#getUSerAttList()
=================================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#<init>()
  cs263aacalfaproject.cs263aacalfaproject.Pair#<init>()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: cs263aacalfaproject.cs263aacalfaproject.BoardServlet#doGet()
========================================================================
Distinct paths through the code: 22
API calls in paths: [ 16 12 12 12 12 12 9 12 9 12 9 15 11 11 11 11 11 8 11 8 11 8 ]
Memory (heap) allocations in paths: [ 9 7 7 7 7 7 6 7 6 7 6 9 7 7 7 7 7 6 7 6 7 6 ]
Loops: 2
API calls in loops: 
  [loop] $z3 = interfaceinvoke r23.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
  [loop] $z8 = interfaceinvoke r91.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 4
Called user-defined methods (unique): 
  cs263aacalfaproject.cs263aacalfaproject.Serve#readImageData()
  cs263aacalfaproject.cs263aacalfaproject.BoardServlet#getUSerAttList()
  cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#<init>()
  cs263aacalfaproject.cs263aacalfaproject.Pair#<init>()
  cs263aacalfaproject.cs263aacalfaproject.BoardServlet#setUSerAttList()
  cs263aacalfaproject.cs263aacalfaproject.Pair#getL()
  cs263aacalfaproject.cs263aacalfaproject.Pair#getR()
  cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#getXCoord()
  cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#getYCoord()
  cs263aacalfaproject.cs263aacalfaproject.BoardServlet#deleteSelectedMarker()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.users.UserService#createLoginURL()
  [cloud] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [cloud] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [cloud] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asList()
  [cloud] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [cloud] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [cloud] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [cloud] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [cloud] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [cloud] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [cloud] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [cloud] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.users.UserService#createLoginURL()
  [path0] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path0] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path0] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path0] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [path0] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path0] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.users.UserService#createLoginURL()
  [path1] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path1] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path1] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path1] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [path1] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.users.UserService#getCurrentUser()
  [path2] com.google.appengine.api.users.UserService#createLoginURL()
  [path2] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path2] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path2] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path2] com.google.appengine.api.users.UserService#getCurrentUser()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path2] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [path2] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path2] com.google.appengine.api.users.UserService#getCurrentUser()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path3] com.google.appengine.api.users.UserService#getCurrentUser()
  [path3] com.google.appengine.api.users.UserService#createLoginURL()
  [path3] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path3] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path3] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path3] com.google.appengine.api.users.UserService#getCurrentUser()
  [path3] com.google.appengine.api.datastore.DatastoreService#get()
  [path3] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path3] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [path3] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path3] com.google.appengine.api.users.UserService#getCurrentUser()
  [path3] com.google.appengine.api.datastore.DatastoreService#get()
  [path4] com.google.appengine.api.users.UserService#getCurrentUser()
  [path4] com.google.appengine.api.users.UserService#createLoginURL()
  [path4] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path4] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path4] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path4] com.google.appengine.api.users.UserService#getCurrentUser()
  [path4] com.google.appengine.api.datastore.DatastoreService#get()
  [path4] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path4] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [path4] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path4] com.google.appengine.api.users.UserService#getCurrentUser()
  [path4] com.google.appengine.api.datastore.DatastoreService#get()
  [path5] com.google.appengine.api.users.UserService#getCurrentUser()
  [path5] com.google.appengine.api.users.UserService#createLoginURL()
  [path5] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path5] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path5] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path5] com.google.appengine.api.users.UserService#getCurrentUser()
  [path5] com.google.appengine.api.datastore.DatastoreService#get()
  [path5] com.google.appengine.api.users.UserService#getCurrentUser()
  [path5] com.google.appengine.api.datastore.DatastoreService#get()
  [path5] com.google.appengine.api.datastore.DatastoreService#put()
  [path5] com.google.appengine.api.users.UserService#getCurrentUser()
  [path5] com.google.appengine.api.datastore.DatastoreService#get()
  [path6] com.google.appengine.api.users.UserService#getCurrentUser()
  [path6] com.google.appengine.api.users.UserService#createLoginURL()
  [path6] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path6] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path6] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path6] com.google.appengine.api.users.UserService#getCurrentUser()
  [path6] com.google.appengine.api.datastore.DatastoreService#get()
  [path6] com.google.appengine.api.users.UserService#getCurrentUser()
  [path6] com.google.appengine.api.datastore.DatastoreService#get()
  [path7] com.google.appengine.api.users.UserService#getCurrentUser()
  [path7] com.google.appengine.api.users.UserService#createLoginURL()
  [path7] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path7] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path7] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path7] com.google.appengine.api.users.UserService#getCurrentUser()
  [path7] com.google.appengine.api.datastore.DatastoreService#get()
  [path7] com.google.appengine.api.users.UserService#getCurrentUser()
  [path7] com.google.appengine.api.datastore.DatastoreService#get()
  [path7] com.google.appengine.api.datastore.DatastoreService#put()
  [path7] com.google.appengine.api.users.UserService#getCurrentUser()
  [path7] com.google.appengine.api.datastore.DatastoreService#get()
  [path8] com.google.appengine.api.users.UserService#getCurrentUser()
  [path8] com.google.appengine.api.users.UserService#createLoginURL()
  [path8] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path8] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path8] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path8] com.google.appengine.api.users.UserService#getCurrentUser()
  [path8] com.google.appengine.api.datastore.DatastoreService#get()
  [path8] com.google.appengine.api.users.UserService#getCurrentUser()
  [path8] com.google.appengine.api.datastore.DatastoreService#get()
  [path9] com.google.appengine.api.users.UserService#getCurrentUser()
  [path9] com.google.appengine.api.users.UserService#createLoginURL()
  [path9] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path9] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path9] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path9] com.google.appengine.api.users.UserService#getCurrentUser()
  [path9] com.google.appengine.api.datastore.DatastoreService#get()
  [path9] com.google.appengine.api.users.UserService#getCurrentUser()
  [path9] com.google.appengine.api.datastore.DatastoreService#get()
  [path9] com.google.appengine.api.datastore.DatastoreService#put()
  [path9] com.google.appengine.api.users.UserService#getCurrentUser()
  [path9] com.google.appengine.api.datastore.DatastoreService#get()
  [path10] com.google.appengine.api.users.UserService#getCurrentUser()
  [path10] com.google.appengine.api.users.UserService#createLoginURL()
  [path10] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path10] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path10] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path10] com.google.appengine.api.users.UserService#getCurrentUser()
  [path10] com.google.appengine.api.datastore.DatastoreService#get()
  [path10] com.google.appengine.api.users.UserService#getCurrentUser()
  [path10] com.google.appengine.api.datastore.DatastoreService#get()
  [path11] com.google.appengine.api.users.UserService#getCurrentUser()
  [path11] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path11] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path11] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path11] com.google.appengine.api.users.UserService#getCurrentUser()
  [path11] com.google.appengine.api.datastore.DatastoreService#get()
  [path11] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path11] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [path11] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path11] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path11] com.google.appengine.api.users.UserService#getCurrentUser()
  [path11] com.google.appengine.api.datastore.DatastoreService#get()
  [path11] com.google.appengine.api.datastore.DatastoreService#put()
  [path11] com.google.appengine.api.users.UserService#getCurrentUser()
  [path11] com.google.appengine.api.datastore.DatastoreService#get()
  [path12] com.google.appengine.api.users.UserService#getCurrentUser()
  [path12] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path12] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path12] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path12] com.google.appengine.api.users.UserService#getCurrentUser()
  [path12] com.google.appengine.api.datastore.DatastoreService#get()
  [path12] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path12] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [path12] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path12] com.google.appengine.api.users.UserService#getCurrentUser()
  [path12] com.google.appengine.api.datastore.DatastoreService#get()
  [path13] com.google.appengine.api.users.UserService#getCurrentUser()
  [path13] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path13] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path13] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path13] com.google.appengine.api.users.UserService#getCurrentUser()
  [path13] com.google.appengine.api.datastore.DatastoreService#get()
  [path13] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path13] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [path13] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path13] com.google.appengine.api.users.UserService#getCurrentUser()
  [path13] com.google.appengine.api.datastore.DatastoreService#get()
  [path14] com.google.appengine.api.users.UserService#getCurrentUser()
  [path14] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path14] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path14] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path14] com.google.appengine.api.users.UserService#getCurrentUser()
  [path14] com.google.appengine.api.datastore.DatastoreService#get()
  [path14] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path14] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [path14] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path14] com.google.appengine.api.users.UserService#getCurrentUser()
  [path14] com.google.appengine.api.datastore.DatastoreService#get()
  [path15] com.google.appengine.api.users.UserService#getCurrentUser()
  [path15] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path15] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path15] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path15] com.google.appengine.api.users.UserService#getCurrentUser()
  [path15] com.google.appengine.api.datastore.DatastoreService#get()
  [path15] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path15] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
  [path15] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path15] com.google.appengine.api.users.UserService#getCurrentUser()
  [path15] com.google.appengine.api.datastore.DatastoreService#get()
  [path16] com.google.appengine.api.users.UserService#getCurrentUser()
  [path16] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path16] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path16] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path16] com.google.appengine.api.users.UserService#getCurrentUser()
  [path16] com.google.appengine.api.datastore.DatastoreService#get()
  [path16] com.google.appengine.api.users.UserService#getCurrentUser()
  [path16] com.google.appengine.api.datastore.DatastoreService#get()
  [path16] com.google.appengine.api.datastore.DatastoreService#put()
  [path16] com.google.appengine.api.users.UserService#getCurrentUser()
  [path16] com.google.appengine.api.datastore.DatastoreService#get()
  [path17] com.google.appengine.api.users.UserService#getCurrentUser()
  [path17] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path17] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path17] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path17] com.google.appengine.api.users.UserService#getCurrentUser()
  [path17] com.google.appengine.api.datastore.DatastoreService#get()
  [path17] com.google.appengine.api.users.UserService#getCurrentUser()
  [path17] com.google.appengine.api.datastore.DatastoreService#get()
  [path18] com.google.appengine.api.users.UserService#getCurrentUser()
  [path18] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path18] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path18] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path18] com.google.appengine.api.users.UserService#getCurrentUser()
  [path18] com.google.appengine.api.datastore.DatastoreService#get()
  [path18] com.google.appengine.api.users.UserService#getCurrentUser()
  [path18] com.google.appengine.api.datastore.DatastoreService#get()
  [path18] com.google.appengine.api.datastore.DatastoreService#put()
  [path18] com.google.appengine.api.users.UserService#getCurrentUser()
  [path18] com.google.appengine.api.datastore.DatastoreService#get()
  [path19] com.google.appengine.api.users.UserService#getCurrentUser()
  [path19] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path19] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path19] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path19] com.google.appengine.api.users.UserService#getCurrentUser()
  [path19] com.google.appengine.api.datastore.DatastoreService#get()
  [path19] com.google.appengine.api.users.UserService#getCurrentUser()
  [path19] com.google.appengine.api.datastore.DatastoreService#get()
  [path20] com.google.appengine.api.users.UserService#getCurrentUser()
  [path20] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path20] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path20] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path20] com.google.appengine.api.users.UserService#getCurrentUser()
  [path20] com.google.appengine.api.datastore.DatastoreService#get()
  [path20] com.google.appengine.api.users.UserService#getCurrentUser()
  [path20] com.google.appengine.api.datastore.DatastoreService#get()
  [path20] com.google.appengine.api.datastore.DatastoreService#put()
  [path20] com.google.appengine.api.users.UserService#getCurrentUser()
  [path20] com.google.appengine.api.datastore.DatastoreService#get()
  [path21] com.google.appengine.api.users.UserService#getCurrentUser()
  [path21] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path21] com.google.appengine.api.images.ImagesServiceFactory#makeImage()
  [path21] com.google.appengine.api.images.ImagesServiceFactory#makeComposite()
  [path21] com.google.appengine.api.users.UserService#getCurrentUser()
  [path21] com.google.appengine.api.datastore.DatastoreService#get()
  [path21] com.google.appengine.api.users.UserService#getCurrentUser()
  [path21] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: cs263aacalfaproject.cs263aacalfaproject.BoardServlet#doPost()
=========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263aacalfaproject.cs263aacalfaproject.BoardServlet#setUSerAttList()
=================================================================================
Distinct paths through the code: 2
API calls in paths: [ 3 3 ]
Memory (heap) allocations in paths: [ 0 0 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  cs263aacalfaproject.cs263aacalfaproject.Pair#getL()
  cs263aacalfaproject.cs263aacalfaproject.Pair#getR()
  cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#getXCoord()
  cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#getYCoord()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: cs263aacalfaproject.cs263aacalfaproject.ImageCoordinate#<init>()
============================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263aacalfaproject.cs263aacalfaproject.BoardServlet#<init>()
=========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

----------------- PROJECT: adabra -----------------

Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.gson.JsonSyntaxException is a phantom class!
Warning: com.google.appengine.api.taskqueue.QueueFactory is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskHandle is a phantom class!
Warning: com.google.gson.Gson is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.taskqueue.Queue is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions$Builder is a phantom class!
Warning: javax.ws.rs.core.Response is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory$Builder is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.PathParam is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: javax.ws.rs.core.Response$Status is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.GeoPt is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: javax.ws.rs.Consumes is a phantom class!
Warning: javax.ws.rs.core.Response$ResponseBuilder is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: cs263project.cs263project.Validator#isValidCityName()
=================================================================
Distinct paths through the code: 3
API calls in paths: [ 0 0 0 ]
Memory (heap) allocations in paths: [ 0 0 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] -- No API Calls --

Analyzing: cs263project.cs263project.Validator#isValidLongitude()
==================================================================
Distinct paths through the code: 3
API calls in paths: [ 0 0 0 ]
Memory (heap) allocations in paths: [ 0 0 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] -- No API Calls --

Analyzing: cs263project.cs263project.Validator#isValidName()
=============================================================
Distinct paths through the code: 3
API calls in paths: [ 0 0 0 ]
Memory (heap) allocations in paths: [ 0 0 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] -- No API Calls --

Analyzing: cs263project.cs263project.Validator#isValidLatitude()
=================================================================
Distinct paths through the code: 3
API calls in paths: [ 0 0 0 ]
Memory (heap) allocations in paths: [ 0 0 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] -- No API Calls --

Analyzing: cs263project.cs263project.RoomRestApi#<init>()
==========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263project.cs263project.RoomRestApi#getRoomInCityWithName()
=========================================================================
Distinct paths through the code: 6
API calls in paths: [ 2 3 1 2 3 1 ]
Memory (heap) allocations in paths: [ 5 6 3 4 5 2 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [cloud] com.google.appengine.api.memcache.MemcacheService#put()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path1] com.google.appengine.api.memcache.MemcacheService#put()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path3] com.google.appengine.api.memcache.MemcacheService#get()
  [path3] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path4] com.google.appengine.api.memcache.MemcacheService#get()
  [path4] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path4] com.google.appengine.api.memcache.MemcacheService#put()
  [path5] com.google.appengine.api.memcache.MemcacheService#get()

Analyzing: cs263project.cs263project.RoomRestApi#createNewRoomInCity()
=======================================================================
Distinct paths through the code: 6
API calls in paths: [ 0 0 1 3 0 0 ]
Memory (heap) allocations in paths: [ 1 1 3 4 1 1 ]
Loops: 0
Called user-defined methods (unique): 
  cs263project.cs263project.Validator#isValidName()
  cs263project.cs263project.Validator#isValidCityName()
  cs263project.cs263project.Validator#isValidLatitude()
  cs263project.cs263project.Validator#isValidLongitude()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [cloud] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [cloud] com.google.appengine.api.taskqueue.Queue#add()
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path3] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path3] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [path3] com.google.appengine.api.taskqueue.Queue#add()
  [path4] -- No API Calls --
  [path5] -- No API Calls --

Analyzing: cs263project.cs263project.RoomRestApi#getRoomsInCity()
==================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asList()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asList()

----------------- PROJECT: divya-sambasivan -----------------

Warning: com.google.appengine.api.taskqueue.TaskOptions$Builder is a phantom class!
Warning: javax.ws.rs.PUT is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: javax.ws.rs.WebApplicationException is a phantom class!
Warning: javax.ws.rs.PathParam is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions$Method is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions is a phantom class!
Warning: com.google.appengine.api.taskqueue.QueueFactory is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskHandle is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: com.google.appengine.api.taskqueue.Queue is a phantom class!
Warning: javax.ws.rs.Consumes is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: javax.ws.rs.DELETE is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.datastore.Query$SortDirection is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.Query$CompositeFilter is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.Query$CompositeFilterOperator is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: javax.ws.rs.core.Response is a phantom class!
Warning: javax.ws.rs.core.Response$Status is a phantom class!
Warning: javax.ws.rs.core.Response$ResponseBuilder is a phantom class!
Warning: com.google.appengine.api.memcache.Expiration is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: javax.ws.rs.core.GenericEntity is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#setStartTimeMinute()
====================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#setEndTimeHour()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#<init>()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureResource#getLecture()
========================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureDao#getLecture()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.Entity#getParent()

Analyzing: com.ucsb.cs.rtsystems.validation.LectureValidator#<init>()
======================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.LectureDao#deleteLecture()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#setLectureDate()
========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.LectureDao#updateLecture()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.Lecture#getID()
  com.ucsb.cs.rtsystems.model.Lecture#getSubjectCode()
  com.ucsb.cs.rtsystems.model.Lecture#getStartTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#getStartTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#getEndTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#getEndTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#getDayOfWeek()
  com.ucsb.cs.rtsystems.model.Lecture#getLat()
  com.ucsb.cs.rtsystems.model.Lecture#getLon()
  com.ucsb.cs.rtsystems.model.Lecture#getTutor()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#setSubjectCode()
========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#setLat()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#setSubjectCode()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.LectureDao#getLecture()
=============================================================
Distinct paths through the code: 2
API calls in paths: [ 2 1 ]
Memory (heap) allocations in paths: [ 1 0 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.Lecture#<init>()
  com.ucsb.cs.rtsystems.model.Lecture#setID()
  com.ucsb.cs.rtsystems.model.Lecture#setStartTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#setStartTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#setEndTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#setEndTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#setDayOfWeek()
  com.ucsb.cs.rtsystems.model.Lecture#setLat()
  com.ucsb.cs.rtsystems.model.Lecture#setLon()
  com.ucsb.cs.rtsystems.model.Lecture#setTutor()
  com.ucsb.cs.rtsystems.model.Lecture#setSubjectCode()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.Entity#getParent()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureResource#createLecture()
===========================================================================
Distinct paths through the code: 2
API calls in paths: [ 0 1 ]
Memory (heap) allocations in paths: [ 4 3 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.validation.LectureValidator#<init>()
  com.ucsb.cs.rtsystems.validation.LectureValidator#validate()
  com.ucsb.cs.rtsystems.exception.BadRequestException#<init>()
  com.ucsb.cs.rtsystems.dao.LectureDao#addLecture()
API call traces: 
  [path0] -- No API Calls --
  [path1] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureResource#deleteLecture()
===========================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 7 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#getLectureInstances()
  com.ucsb.cs.rtsystems.model.LectureInstance#getID()
  com.ucsb.cs.rtsystems.dao.LectureDao#deleteLecture()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.taskqueue.Queue#add()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()

Analyzing: com.ucsb.cs.rtsystems.dao.LectureDao#<init>()
=========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.SubjectDao#<init>()
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#setEndTimeMinute()
==================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#setID()
=======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#setStartTimeHour()
==================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.LectureInstanceDao#<init>()
=================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureDao#<init>()
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#getLat()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#setDayOfWeek()
==============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#getStartTimeHour()
==================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.exception.BadRequestException#<init>()
========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.exception.BadRequestException$1#<init>()
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureResource#getLectures()
=========================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureDao#getAllLectures()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#getStartTimeMinute()
====================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#getID()
=======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#setLon()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.LectureDao#addLecture()
=============================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.Lecture#getSubjectCode()
  com.ucsb.cs.rtsystems.model.Lecture#getStartTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#getStartTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#getEndTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#getEndTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#getDayOfWeek()
  com.ucsb.cs.rtsystems.model.Lecture#getLat()
  com.ucsb.cs.rtsystems.model.Lecture#getLon()
  com.ucsb.cs.rtsystems.model.Lecture#getTutor()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#setLectureId()
======================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#getDayOfWeek()
==============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#setTutor()
==========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#setID()
===============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureResource#<init>()
====================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 5 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureDao#<init>()
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#<init>()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
API call traces: 
  [path0] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#getLon()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#<init>()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.exception.BadRequestException$1#<init>()
==========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.validation.LectureValidator#validate()
========================================================================
Distinct paths through the code: 972
API calls in paths
Memory (heap) allocations in paths
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.Lecture#getDayOfWeek()
  com.ucsb.cs.rtsystems.model.Lecture#getStartTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#getStartTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#getEndTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#getEndTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#getSubjectCode()
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] -- No API Calls --
  [path3] -- No API Calls --
  [path4] -- No API Calls --
  [path5] -- No API Calls --
  [path6] -- No API Calls --
  [path7] -- No API Calls --
  [path8] -- No API Calls --
  [path9] -- No API Calls --
  [path10] -- No API Calls --
  [path11] -- No API Calls --
  [path12] -- No API Calls --
  [path13] -- No API Calls --
  [path14] -- No API Calls --
  [path15] -- No API Calls --
  [path16] -- No API Calls --
  [path17] -- No API Calls --
  [path18] -- No API Calls --
  [path19] -- No API Calls --
  [path20] -- No API Calls --
  [path21] -- No API Calls --
  [path22] -- No API Calls --
  [path23] -- No API Calls --
  [path24] -- No API Calls --
  [path25] -- No API Calls --
  [path26] -- No API Calls --
  [path27] -- No API Calls --
  [path28] -- No API Calls --
  [path29] -- No API Calls --
  [path30] -- No API Calls --
  [path31] -- No API Calls --
  [path32] -- No API Calls --
  [path33] -- No API Calls --
  [path34] -- No API Calls --
  [path35] -- No API Calls --
  [path36] -- No API Calls --
  [path37] -- No API Calls --
  [path38] -- No API Calls --
  [path39] -- No API Calls --
  [path40] -- No API Calls --
  [path41] -- No API Calls --
  [path42] -- No API Calls --
  [path43] -- No API Calls --
  [path44] -- No API Calls --
  [path45] -- No API Calls --
  [path46] -- No API Calls --
  [path47] -- No API Calls --
  [path48] -- No API Calls --
  [path49] -- No API Calls --
  [path50] -- No API Calls --
  [path51] -- No API Calls --
  [path52] -- No API Calls --
  [path53] -- No API Calls --
  [path54] -- No API Calls --
  [path55] -- No API Calls --
  [path56] -- No API Calls --
  [path57] -- No API Calls --
  [path58] -- No API Calls --
  [path59] -- No API Calls --
  [path60] -- No API Calls --
  [path61] -- No API Calls --
  [path62] -- No API Calls --
  [path63] -- No API Calls --
  [path64] -- No API Calls --
  [path65] -- No API Calls --
  [path66] -- No API Calls --
  [path67] -- No API Calls --
  [path68] -- No API Calls --
  [path69] -- No API Calls --
  [path70] -- No API Calls --
  [path71] -- No API Calls --
  [path72] -- No API Calls --
  [path73] -- No API Calls --
  [path74] -- No API Calls --
  [path75] -- No API Calls --
  [path76] -- No API Calls --
  [path77] -- No API Calls --
  [path78] -- No API Calls --
  [path79] -- No API Calls --
  [path80] -- No API Calls --
  [path81] -- No API Calls --
  [path82] -- No API Calls --
  [path83] -- No API Calls --
  [path84] -- No API Calls --
  [path85] -- No API Calls --
  [path86] -- No API Calls --
  [path87] -- No API Calls --
  [path88] -- No API Calls --
  [path89] -- No API Calls --
  [path90] -- No API Calls --
  [path91] -- No API Calls --
  [path92] -- No API Calls --
  [path93] -- No API Calls --
  [path94] -- No API Calls --
  [path95] -- No API Calls --
  [path96] -- No API Calls --
  [path97] -- No API Calls --
  [path98] -- No API Calls --
  [path99] -- No API Calls --
  [path100] -- No API Calls --
  [path101] -- No API Calls --
  [path102] -- No API Calls --
  [path103] -- No API Calls --
  [path104] -- No API Calls --
  [path105] -- No API Calls --
  [path106] -- No API Calls --
  [path107] -- No API Calls --
  [path108] -- No API Calls --
  [path109] -- No API Calls --
  [path110] -- No API Calls --
  [path111] -- No API Calls --
  [path112] -- No API Calls --
  [path113] -- No API Calls --
  [path114] -- No API Calls --
  [path115] -- No API Calls --
  [path116] -- No API Calls --
  [path117] -- No API Calls --
  [path118] -- No API Calls --
  [path119] -- No API Calls --
  [path120] -- No API Calls --
  [path121] -- No API Calls --
  [path122] -- No API Calls --
  [path123] -- No API Calls --
  [path124] -- No API Calls --
  [path125] -- No API Calls --
  [path126] -- No API Calls --
  [path127] -- No API Calls --
  [path128] -- No API Calls --
  [path129] -- No API Calls --
  [path130] -- No API Calls --
  [path131] -- No API Calls --
  [path132] -- No API Calls --
  [path133] -- No API Calls --
  [path134] -- No API Calls --
  [path135] -- No API Calls --
  [path136] -- No API Calls --
  [path137] -- No API Calls --
  [path138] -- No API Calls --
  [path139] -- No API Calls --
  [path140] -- No API Calls --
  [path141] -- No API Calls --
  [path142] -- No API Calls --
  [path143] -- No API Calls --
  [path144] -- No API Calls --
  [path145] -- No API Calls --
  [path146] -- No API Calls --
  [path147] -- No API Calls --
  [path148] -- No API Calls --
  [path149] -- No API Calls --
  [path150] -- No API Calls --
  [path151] -- No API Calls --
  [path152] -- No API Calls --
  [path153] -- No API Calls --
  [path154] -- No API Calls --
  [path155] -- No API Calls --
  [path156] -- No API Calls --
  [path157] -- No API Calls --
  [path158] -- No API Calls --
  [path159] -- No API Calls --
  [path160] -- No API Calls --
  [path161] -- No API Calls --
  [path162] -- No API Calls --
  [path163] -- No API Calls --
  [path164] -- No API Calls --
  [path165] -- No API Calls --
  [path166] -- No API Calls --
  [path167] -- No API Calls --
  [path168] -- No API Calls --
  [path169] -- No API Calls --
  [path170] -- No API Calls --
  [path171] -- No API Calls --
  [path172] -- No API Calls --
  [path173] -- No API Calls --
  [path174] -- No API Calls --
  [path175] -- No API Calls --
  [path176] -- No API Calls --
  [path177] -- No API Calls --
  [path178] -- No API Calls --
  [path179] -- No API Calls --
  [path180] -- No API Calls --
  [path181] -- No API Calls --
  [path182] -- No API Calls --
  [path183] -- No API Calls --
  [path184] -- No API Calls --
  [path185] -- No API Calls --
  [path186] -- No API Calls --
  [path187] -- No API Calls --
  [path188] -- No API Calls --
  [path189] -- No API Calls --
  [path190] -- No API Calls --
  [path191] -- No API Calls --
  [path192] -- No API Calls --
  [path193] -- No API Calls --
  [path194] -- No API Calls --
  [path195] -- No API Calls --
  [path196] -- No API Calls --
  [path197] -- No API Calls --
  [path198] -- No API Calls --
  [path199] -- No API Calls --
  [path200] -- No API Calls --
  [path201] -- No API Calls --
  [path202] -- No API Calls --
  [path203] -- No API Calls --
  [path204] -- No API Calls --
  [path205] -- No API Calls --
  [path206] -- No API Calls --
  [path207] -- No API Calls --
  [path208] -- No API Calls --
  [path209] -- No API Calls --
  [path210] -- No API Calls --
  [path211] -- No API Calls --
  [path212] -- No API Calls --
  [path213] -- No API Calls --
  [path214] -- No API Calls --
  [path215] -- No API Calls --
  [path216] -- No API Calls --
  [path217] -- No API Calls --
  [path218] -- No API Calls --
  [path219] -- No API Calls --
  [path220] -- No API Calls --
  [path221] -- No API Calls --
  [path222] -- No API Calls --
  [path223] -- No API Calls --
  [path224] -- No API Calls --
  [path225] -- No API Calls --
  [path226] -- No API Calls --
  [path227] -- No API Calls --
  [path228] -- No API Calls --
  [path229] -- No API Calls --
  [path230] -- No API Calls --
  [path231] -- No API Calls --
  [path232] -- No API Calls --
  [path233] -- No API Calls --
  [path234] -- No API Calls --
  [path235] -- No API Calls --
  [path236] -- No API Calls --
  [path237] -- No API Calls --
  [path238] -- No API Calls --
  [path239] -- No API Calls --
  [path240] -- No API Calls --
  [path241] -- No API Calls --
  [path242] -- No API Calls --
  [path243] -- No API Calls --
  [path244] -- No API Calls --
  [path245] -- No API Calls --
  [path246] -- No API Calls --
  [path247] -- No API Calls --
  [path248] -- No API Calls --
  [path249] -- No API Calls --
  [path250] -- No API Calls --
  [path251] -- No API Calls --
  [path252] -- No API Calls --
  [path253] -- No API Calls --
  [path254] -- No API Calls --
  [path255] -- No API Calls --
  [path256] -- No API Calls --
  [path257] -- No API Calls --
  [path258] -- No API Calls --
  [path259] -- No API Calls --
  [path260] -- No API Calls --
  [path261] -- No API Calls --
  [path262] -- No API Calls --
  [path263] -- No API Calls --
  [path264] -- No API Calls --
  [path265] -- No API Calls --
  [path266] -- No API Calls --
  [path267] -- No API Calls --
  [path268] -- No API Calls --
  [path269] -- No API Calls --
  [path270] -- No API Calls --
  [path271] -- No API Calls --
  [path272] -- No API Calls --
  [path273] -- No API Calls --
  [path274] -- No API Calls --
  [path275] -- No API Calls --
  [path276] -- No API Calls --
  [path277] -- No API Calls --
  [path278] -- No API Calls --
  [path279] -- No API Calls --
  [path280] -- No API Calls --
  [path281] -- No API Calls --
  [path282] -- No API Calls --
  [path283] -- No API Calls --
  [path284] -- No API Calls --
  [path285] -- No API Calls --
  [path286] -- No API Calls --
  [path287] -- No API Calls --
  [path288] -- No API Calls --
  [path289] -- No API Calls --
  [path290] -- No API Calls --
  [path291] -- No API Calls --
  [path292] -- No API Calls --
  [path293] -- No API Calls --
  [path294] -- No API Calls --
  [path295] -- No API Calls --
  [path296] -- No API Calls --
  [path297] -- No API Calls --
  [path298] -- No API Calls --
  [path299] -- No API Calls --
  [path300] -- No API Calls --
  [path301] -- No API Calls --
  [path302] -- No API Calls --
  [path303] -- No API Calls --
  [path304] -- No API Calls --
  [path305] -- No API Calls --
  [path306] -- No API Calls --
  [path307] -- No API Calls --
  [path308] -- No API Calls --
  [path309] -- No API Calls --
  [path310] -- No API Calls --
  [path311] -- No API Calls --
  [path312] -- No API Calls --
  [path313] -- No API Calls --
  [path314] -- No API Calls --
  [path315] -- No API Calls --
  [path316] -- No API Calls --
  [path317] -- No API Calls --
  [path318] -- No API Calls --
  [path319] -- No API Calls --
  [path320] -- No API Calls --
  [path321] -- No API Calls --
  [path322] -- No API Calls --
  [path323] -- No API Calls --
  [path324] -- No API Calls --
  [path325] -- No API Calls --
  [path326] -- No API Calls --
  [path327] -- No API Calls --
  [path328] -- No API Calls --
  [path329] -- No API Calls --
  [path330] -- No API Calls --
  [path331] -- No API Calls --
  [path332] -- No API Calls --
  [path333] -- No API Calls --
  [path334] -- No API Calls --
  [path335] -- No API Calls --
  [path336] -- No API Calls --
  [path337] -- No API Calls --
  [path338] -- No API Calls --
  [path339] -- No API Calls --
  [path340] -- No API Calls --
  [path341] -- No API Calls --
  [path342] -- No API Calls --
  [path343] -- No API Calls --
  [path344] -- No API Calls --
  [path345] -- No API Calls --
  [path346] -- No API Calls --
  [path347] -- No API Calls --
  [path348] -- No API Calls --
  [path349] -- No API Calls --
  [path350] -- No API Calls --
  [path351] -- No API Calls --
  [path352] -- No API Calls --
  [path353] -- No API Calls --
  [path354] -- No API Calls --
  [path355] -- No API Calls --
  [path356] -- No API Calls --
  [path357] -- No API Calls --
  [path358] -- No API Calls --
  [path359] -- No API Calls --
  [path360] -- No API Calls --
  [path361] -- No API Calls --
  [path362] -- No API Calls --
  [path363] -- No API Calls --
  [path364] -- No API Calls --
  [path365] -- No API Calls --
  [path366] -- No API Calls --
  [path367] -- No API Calls --
  [path368] -- No API Calls --
  [path369] -- No API Calls --
  [path370] -- No API Calls --
  [path371] -- No API Calls --
  [path372] -- No API Calls --
  [path373] -- No API Calls --
  [path374] -- No API Calls --
  [path375] -- No API Calls --
  [path376] -- No API Calls --
  [path377] -- No API Calls --
  [path378] -- No API Calls --
  [path379] -- No API Calls --
  [path380] -- No API Calls --
  [path381] -- No API Calls --
  [path382] -- No API Calls --
  [path383] -- No API Calls --
  [path384] -- No API Calls --
  [path385] -- No API Calls --
  [path386] -- No API Calls --
  [path387] -- No API Calls --
  [path388] -- No API Calls --
  [path389] -- No API Calls --
  [path390] -- No API Calls --
  [path391] -- No API Calls --
  [path392] -- No API Calls --
  [path393] -- No API Calls --
  [path394] -- No API Calls --
  [path395] -- No API Calls --
  [path396] -- No API Calls --
  [path397] -- No API Calls --
  [path398] -- No API Calls --
  [path399] -- No API Calls --
  [path400] -- No API Calls --
  [path401] -- No API Calls --
  [path402] -- No API Calls --
  [path403] -- No API Calls --
  [path404] -- No API Calls --
  [path405] -- No API Calls --
  [path406] -- No API Calls --
  [path407] -- No API Calls --
  [path408] -- No API Calls --
  [path409] -- No API Calls --
  [path410] -- No API Calls --
  [path411] -- No API Calls --
  [path412] -- No API Calls --
  [path413] -- No API Calls --
  [path414] -- No API Calls --
  [path415] -- No API Calls --
  [path416] -- No API Calls --
  [path417] -- No API Calls --
  [path418] -- No API Calls --
  [path419] -- No API Calls --
  [path420] -- No API Calls --
  [path421] -- No API Calls --
  [path422] -- No API Calls --
  [path423] -- No API Calls --
  [path424] -- No API Calls --
  [path425] -- No API Calls --
  [path426] -- No API Calls --
  [path427] -- No API Calls --
  [path428] -- No API Calls --
  [path429] -- No API Calls --
  [path430] -- No API Calls --
  [path431] -- No API Calls --
  [path432] -- No API Calls --
  [path433] -- No API Calls --
  [path434] -- No API Calls --
  [path435] -- No API Calls --
  [path436] -- No API Calls --
  [path437] -- No API Calls --
  [path438] -- No API Calls --
  [path439] -- No API Calls --
  [path440] -- No API Calls --
  [path441] -- No API Calls --
  [path442] -- No API Calls --
  [path443] -- No API Calls --
  [path444] -- No API Calls --
  [path445] -- No API Calls --
  [path446] -- No API Calls --
  [path447] -- No API Calls --
  [path448] -- No API Calls --
  [path449] -- No API Calls --
  [path450] -- No API Calls --
  [path451] -- No API Calls --
  [path452] -- No API Calls --
  [path453] -- No API Calls --
  [path454] -- No API Calls --
  [path455] -- No API Calls --
  [path456] -- No API Calls --
  [path457] -- No API Calls --
  [path458] -- No API Calls --
  [path459] -- No API Calls --
  [path460] -- No API Calls --
  [path461] -- No API Calls --
  [path462] -- No API Calls --
  [path463] -- No API Calls --
  [path464] -- No API Calls --
  [path465] -- No API Calls --
  [path466] -- No API Calls --
  [path467] -- No API Calls --
  [path468] -- No API Calls --
  [path469] -- No API Calls --
  [path470] -- No API Calls --
  [path471] -- No API Calls --
  [path472] -- No API Calls --
  [path473] -- No API Calls --
  [path474] -- No API Calls --
  [path475] -- No API Calls --
  [path476] -- No API Calls --
  [path477] -- No API Calls --
  [path478] -- No API Calls --
  [path479] -- No API Calls --
  [path480] -- No API Calls --
  [path481] -- No API Calls --
  [path482] -- No API Calls --
  [path483] -- No API Calls --
  [path484] -- No API Calls --
  [path485] -- No API Calls --
  [path486] -- No API Calls --
  [path487] -- No API Calls --
  [path488] -- No API Calls --
  [path489] -- No API Calls --
  [path490] -- No API Calls --
  [path491] -- No API Calls --
  [path492] -- No API Calls --
  [path493] -- No API Calls --
  [path494] -- No API Calls --
  [path495] -- No API Calls --
  [path496] -- No API Calls --
  [path497] -- No API Calls --
  [path498] -- No API Calls --
  [path499] -- No API Calls --
  [path500] -- No API Calls --
  [path501] -- No API Calls --
  [path502] -- No API Calls --
  [path503] -- No API Calls --
  [path504] -- No API Calls --
  [path505] -- No API Calls --
  [path506] -- No API Calls --
  [path507] -- No API Calls --
  [path508] -- No API Calls --
  [path509] -- No API Calls --
  [path510] -- No API Calls --
  [path511] -- No API Calls --
  [path512] -- No API Calls --
  [path513] -- No API Calls --
  [path514] -- No API Calls --
  [path515] -- No API Calls --
  [path516] -- No API Calls --
  [path517] -- No API Calls --
  [path518] -- No API Calls --
  [path519] -- No API Calls --
  [path520] -- No API Calls --
  [path521] -- No API Calls --
  [path522] -- No API Calls --
  [path523] -- No API Calls --
  [path524] -- No API Calls --
  [path525] -- No API Calls --
  [path526] -- No API Calls --
  [path527] -- No API Calls --
  [path528] -- No API Calls --
  [path529] -- No API Calls --
  [path530] -- No API Calls --
  [path531] -- No API Calls --
  [path532] -- No API Calls --
  [path533] -- No API Calls --
  [path534] -- No API Calls --
  [path535] -- No API Calls --
  [path536] -- No API Calls --
  [path537] -- No API Calls --
  [path538] -- No API Calls --
  [path539] -- No API Calls --
  [path540] -- No API Calls --
  [path541] -- No API Calls --
  [path542] -- No API Calls --
  [path543] -- No API Calls --
  [path544] -- No API Calls --
  [path545] -- No API Calls --
  [path546] -- No API Calls --
  [path547] -- No API Calls --
  [path548] -- No API Calls --
  [path549] -- No API Calls --
  [path550] -- No API Calls --
  [path551] -- No API Calls --
  [path552] -- No API Calls --
  [path553] -- No API Calls --
  [path554] -- No API Calls --
  [path555] -- No API Calls --
  [path556] -- No API Calls --
  [path557] -- No API Calls --
  [path558] -- No API Calls --
  [path559] -- No API Calls --
  [path560] -- No API Calls --
  [path561] -- No API Calls --
  [path562] -- No API Calls --
  [path563] -- No API Calls --
  [path564] -- No API Calls --
  [path565] -- No API Calls --
  [path566] -- No API Calls --
  [path567] -- No API Calls --
  [path568] -- No API Calls --
  [path569] -- No API Calls --
  [path570] -- No API Calls --
  [path571] -- No API Calls --
  [path572] -- No API Calls --
  [path573] -- No API Calls --
  [path574] -- No API Calls --
  [path575] -- No API Calls --
  [path576] -- No API Calls --
  [path577] -- No API Calls --
  [path578] -- No API Calls --
  [path579] -- No API Calls --
  [path580] -- No API Calls --
  [path581] -- No API Calls --
  [path582] -- No API Calls --
  [path583] -- No API Calls --
  [path584] -- No API Calls --
  [path585] -- No API Calls --
  [path586] -- No API Calls --
  [path587] -- No API Calls --
  [path588] -- No API Calls --
  [path589] -- No API Calls --
  [path590] -- No API Calls --
  [path591] -- No API Calls --
  [path592] -- No API Calls --
  [path593] -- No API Calls --
  [path594] -- No API Calls --
  [path595] -- No API Calls --
  [path596] -- No API Calls --
  [path597] -- No API Calls --
  [path598] -- No API Calls --
  [path599] -- No API Calls --
  [path600] -- No API Calls --
  [path601] -- No API Calls --
  [path602] -- No API Calls --
  [path603] -- No API Calls --
  [path604] -- No API Calls --
  [path605] -- No API Calls --
  [path606] -- No API Calls --
  [path607] -- No API Calls --
  [path608] -- No API Calls --
  [path609] -- No API Calls --
  [path610] -- No API Calls --
  [path611] -- No API Calls --
  [path612] -- No API Calls --
  [path613] -- No API Calls --
  [path614] -- No API Calls --
  [path615] -- No API Calls --
  [path616] -- No API Calls --
  [path617] -- No API Calls --
  [path618] -- No API Calls --
  [path619] -- No API Calls --
  [path620] -- No API Calls --
  [path621] -- No API Calls --
  [path622] -- No API Calls --
  [path623] -- No API Calls --
  [path624] -- No API Calls --
  [path625] -- No API Calls --
  [path626] -- No API Calls --
  [path627] -- No API Calls --
  [path628] -- No API Calls --
  [path629] -- No API Calls --
  [path630] -- No API Calls --
  [path631] -- No API Calls --
  [path632] -- No API Calls --
  [path633] -- No API Calls --
  [path634] -- No API Calls --
  [path635] -- No API Calls --
  [path636] -- No API Calls --
  [path637] -- No API Calls --
  [path638] -- No API Calls --
  [path639] -- No API Calls --
  [path640] -- No API Calls --
  [path641] -- No API Calls --
  [path642] -- No API Calls --
  [path643] -- No API Calls --
  [path644] -- No API Calls --
  [path645] -- No API Calls --
  [path646] -- No API Calls --
  [path647] -- No API Calls --
  [path648] -- No API Calls --
  [path649] -- No API Calls --
  [path650] -- No API Calls --
  [path651] -- No API Calls --
  [path652] -- No API Calls --
  [path653] -- No API Calls --
  [path654] -- No API Calls --
  [path655] -- No API Calls --
  [path656] -- No API Calls --
  [path657] -- No API Calls --
  [path658] -- No API Calls --
  [path659] -- No API Calls --
  [path660] -- No API Calls --
  [path661] -- No API Calls --
  [path662] -- No API Calls --
  [path663] -- No API Calls --
  [path664] -- No API Calls --
  [path665] -- No API Calls --
  [path666] -- No API Calls --
  [path667] -- No API Calls --
  [path668] -- No API Calls --
  [path669] -- No API Calls --
  [path670] -- No API Calls --
  [path671] -- No API Calls --
  [path672] -- No API Calls --
  [path673] -- No API Calls --
  [path674] -- No API Calls --
  [path675] -- No API Calls --
  [path676] -- No API Calls --
  [path677] -- No API Calls --
  [path678] -- No API Calls --
  [path679] -- No API Calls --
  [path680] -- No API Calls --
  [path681] -- No API Calls --
  [path682] -- No API Calls --
  [path683] -- No API Calls --
  [path684] -- No API Calls --
  [path685] -- No API Calls --
  [path686] -- No API Calls --
  [path687] -- No API Calls --
  [path688] -- No API Calls --
  [path689] -- No API Calls --
  [path690] -- No API Calls --
  [path691] -- No API Calls --
  [path692] -- No API Calls --
  [path693] -- No API Calls --
  [path694] -- No API Calls --
  [path695] -- No API Calls --
  [path696] -- No API Calls --
  [path697] -- No API Calls --
  [path698] -- No API Calls --
  [path699] -- No API Calls --
  [path700] -- No API Calls --
  [path701] -- No API Calls --
  [path702] -- No API Calls --
  [path703] -- No API Calls --
  [path704] -- No API Calls --
  [path705] -- No API Calls --
  [path706] -- No API Calls --
  [path707] -- No API Calls --
  [path708] -- No API Calls --
  [path709] -- No API Calls --
  [path710] -- No API Calls --
  [path711] -- No API Calls --
  [path712] -- No API Calls --
  [path713] -- No API Calls --
  [path714] -- No API Calls --
  [path715] -- No API Calls --
  [path716] -- No API Calls --
  [path717] -- No API Calls --
  [path718] -- No API Calls --
  [path719] -- No API Calls --
  [path720] -- No API Calls --
  [path721] -- No API Calls --
  [path722] -- No API Calls --
  [path723] -- No API Calls --
  [path724] -- No API Calls --
  [path725] -- No API Calls --
  [path726] -- No API Calls --
  [path727] -- No API Calls --
  [path728] -- No API Calls --
  [path729] -- No API Calls --
  [path730] -- No API Calls --
  [path731] -- No API Calls --
  [path732] -- No API Calls --
  [path733] -- No API Calls --
  [path734] -- No API Calls --
  [path735] -- No API Calls --
  [path736] -- No API Calls --
  [path737] -- No API Calls --
  [path738] -- No API Calls --
  [path739] -- No API Calls --
  [path740] -- No API Calls --
  [path741] -- No API Calls --
  [path742] -- No API Calls --
  [path743] -- No API Calls --
  [path744] -- No API Calls --
  [path745] -- No API Calls --
  [path746] -- No API Calls --
  [path747] -- No API Calls --
  [path748] -- No API Calls --
  [path749] -- No API Calls --
  [path750] -- No API Calls --
  [path751] -- No API Calls --
  [path752] -- No API Calls --
  [path753] -- No API Calls --
  [path754] -- No API Calls --
  [path755] -- No API Calls --
  [path756] -- No API Calls --
  [path757] -- No API Calls --
  [path758] -- No API Calls --
  [path759] -- No API Calls --
  [path760] -- No API Calls --
  [path761] -- No API Calls --
  [path762] -- No API Calls --
  [path763] -- No API Calls --
  [path764] -- No API Calls --
  [path765] -- No API Calls --
  [path766] -- No API Calls --
  [path767] -- No API Calls --
  [path768] -- No API Calls --
  [path769] -- No API Calls --
  [path770] -- No API Calls --
  [path771] -- No API Calls --
  [path772] -- No API Calls --
  [path773] -- No API Calls --
  [path774] -- No API Calls --
  [path775] -- No API Calls --
  [path776] -- No API Calls --
  [path777] -- No API Calls --
  [path778] -- No API Calls --
  [path779] -- No API Calls --
  [path780] -- No API Calls --
  [path781] -- No API Calls --
  [path782] -- No API Calls --
  [path783] -- No API Calls --
  [path784] -- No API Calls --
  [path785] -- No API Calls --
  [path786] -- No API Calls --
  [path787] -- No API Calls --
  [path788] -- No API Calls --
  [path789] -- No API Calls --
  [path790] -- No API Calls --
  [path791] -- No API Calls --
  [path792] -- No API Calls --
  [path793] -- No API Calls --
  [path794] -- No API Calls --
  [path795] -- No API Calls --
  [path796] -- No API Calls --
  [path797] -- No API Calls --
  [path798] -- No API Calls --
  [path799] -- No API Calls --
  [path800] -- No API Calls --
  [path801] -- No API Calls --
  [path802] -- No API Calls --
  [path803] -- No API Calls --
  [path804] -- No API Calls --
  [path805] -- No API Calls --
  [path806] -- No API Calls --
  [path807] -- No API Calls --
  [path808] -- No API Calls --
  [path809] -- No API Calls --
  [path810] -- No API Calls --
  [path811] -- No API Calls --
  [path812] -- No API Calls --
  [path813] -- No API Calls --
  [path814] -- No API Calls --
  [path815] -- No API Calls --
  [path816] -- No API Calls --
  [path817] -- No API Calls --
  [path818] -- No API Calls --
  [path819] -- No API Calls --
  [path820] -- No API Calls --
  [path821] -- No API Calls --
  [path822] -- No API Calls --
  [path823] -- No API Calls --
  [path824] -- No API Calls --
  [path825] -- No API Calls --
  [path826] -- No API Calls --
  [path827] -- No API Calls --
  [path828] -- No API Calls --
  [path829] -- No API Calls --
  [path830] -- No API Calls --
  [path831] -- No API Calls --
  [path832] -- No API Calls --
  [path833] -- No API Calls --
  [path834] -- No API Calls --
  [path835] -- No API Calls --
  [path836] -- No API Calls --
  [path837] -- No API Calls --
  [path838] -- No API Calls --
  [path839] -- No API Calls --
  [path840] -- No API Calls --
  [path841] -- No API Calls --
  [path842] -- No API Calls --
  [path843] -- No API Calls --
  [path844] -- No API Calls --
  [path845] -- No API Calls --
  [path846] -- No API Calls --
  [path847] -- No API Calls --
  [path848] -- No API Calls --
  [path849] -- No API Calls --
  [path850] -- No API Calls --
  [path851] -- No API Calls --
  [path852] -- No API Calls --
  [path853] -- No API Calls --
  [path854] -- No API Calls --
  [path855] -- No API Calls --
  [path856] -- No API Calls --
  [path857] -- No API Calls --
  [path858] -- No API Calls --
  [path859] -- No API Calls --
  [path860] -- No API Calls --
  [path861] -- No API Calls --
  [path862] -- No API Calls --
  [path863] -- No API Calls --
  [path864] -- No API Calls --
  [path865] -- No API Calls --
  [path866] -- No API Calls --
  [path867] -- No API Calls --
  [path868] -- No API Calls --
  [path869] -- No API Calls --
  [path870] -- No API Calls --
  [path871] -- No API Calls --
  [path872] -- No API Calls --
  [path873] -- No API Calls --
  [path874] -- No API Calls --
  [path875] -- No API Calls --
  [path876] -- No API Calls --
  [path877] -- No API Calls --
  [path878] -- No API Calls --
  [path879] -- No API Calls --
  [path880] -- No API Calls --
  [path881] -- No API Calls --
  [path882] -- No API Calls --
  [path883] -- No API Calls --
  [path884] -- No API Calls --
  [path885] -- No API Calls --
  [path886] -- No API Calls --
  [path887] -- No API Calls --
  [path888] -- No API Calls --
  [path889] -- No API Calls --
  [path890] -- No API Calls --
  [path891] -- No API Calls --
  [path892] -- No API Calls --
  [path893] -- No API Calls --
  [path894] -- No API Calls --
  [path895] -- No API Calls --
  [path896] -- No API Calls --
  [path897] -- No API Calls --
  [path898] -- No API Calls --
  [path899] -- No API Calls --
  [path900] -- No API Calls --
  [path901] -- No API Calls --
  [path902] -- No API Calls --
  [path903] -- No API Calls --
  [path904] -- No API Calls --
  [path905] -- No API Calls --
  [path906] -- No API Calls --
  [path907] -- No API Calls --
  [path908] -- No API Calls --
  [path909] -- No API Calls --
  [path910] -- No API Calls --
  [path911] -- No API Calls --
  [path912] -- No API Calls --
  [path913] -- No API Calls --
  [path914] -- No API Calls --
  [path915] -- No API Calls --
  [path916] -- No API Calls --
  [path917] -- No API Calls --
  [path918] -- No API Calls --
  [path919] -- No API Calls --
  [path920] -- No API Calls --
  [path921] -- No API Calls --
  [path922] -- No API Calls --
  [path923] -- No API Calls --
  [path924] -- No API Calls --
  [path925] -- No API Calls --
  [path926] -- No API Calls --
  [path927] -- No API Calls --
  [path928] -- No API Calls --
  [path929] -- No API Calls --
  [path930] -- No API Calls --
  [path931] -- No API Calls --
  [path932] -- No API Calls --
  [path933] -- No API Calls --
  [path934] -- No API Calls --
  [path935] -- No API Calls --
  [path936] -- No API Calls --
  [path937] -- No API Calls --
  [path938] -- No API Calls --
  [path939] -- No API Calls --
  [path940] -- No API Calls --
  [path941] -- No API Calls --
  [path942] -- No API Calls --
  [path943] -- No API Calls --
  [path944] -- No API Calls --
  [path945] -- No API Calls --
  [path946] -- No API Calls --
  [path947] -- No API Calls --
  [path948] -- No API Calls --
  [path949] -- No API Calls --
  [path950] -- No API Calls --
  [path951] -- No API Calls --
  [path952] -- No API Calls --
  [path953] -- No API Calls --
  [path954] -- No API Calls --
  [path955] -- No API Calls --
  [path956] -- No API Calls --
  [path957] -- No API Calls --
  [path958] -- No API Calls --
  [path959] -- No API Calls --
  [path960] -- No API Calls --
  [path961] -- No API Calls --
  [path962] -- No API Calls --
  [path963] -- No API Calls --
  [path964] -- No API Calls --
  [path965] -- No API Calls --
  [path966] -- No API Calls --
  [path967] -- No API Calls --
  [path968] -- No API Calls --
  [path969] -- No API Calls --
  [path970] -- No API Calls --
  [path971] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#getEndTimeMinute()
==================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#getID()
===============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureResource#updateLecture()
===========================================================================
Distinct paths through the code: 2
API calls in paths: [ 0 2 ]
Memory (heap) allocations in paths: [ 4 2 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.validation.LectureValidator#<init>()
  com.ucsb.cs.rtsystems.validation.LectureValidator#validate()
  com.ucsb.cs.rtsystems.exception.BadRequestException#<init>()
  com.ucsb.cs.rtsystems.dao.LectureDao#updateLecture()
API call traces: 
  [path0] -- No API Calls --
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.dao.LectureDao#getAllLectures()
=================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 2
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.Lecture#<init>()
  com.ucsb.cs.rtsystems.model.Lecture#setID()
  com.ucsb.cs.rtsystems.model.Lecture#setSubjectCode()
  com.ucsb.cs.rtsystems.model.Lecture#setStartTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#setStartTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#setEndTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#setEndTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#setDayOfWeek()
  com.ucsb.cs.rtsystems.model.Lecture#setLat()
  com.ucsb.cs.rtsystems.model.Lecture#setLon()
  com.ucsb.cs.rtsystems.model.Lecture#setTutor()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: com.ucsb.cs.rtsystems.dao.LectureInstanceDao#getLectureInstances()
==============================================================================
Distinct paths through the code: 2
API calls in paths: [ 1 1 ]
Memory (heap) allocations in paths: [ 6 4 ]
Loops: 1
API calls in loops: 
  [loop] $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 2
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.LectureInstance#<init>()
  com.ucsb.cs.rtsystems.model.LectureInstance#setID()
  com.ucsb.cs.rtsystems.model.LectureInstance#setLectureId()
  com.ucsb.cs.rtsystems.model.LectureInstance#setSubjectCode()
  com.ucsb.cs.rtsystems.model.LectureInstance#setStudentId()
  com.ucsb.cs.rtsystems.model.LectureInstance#setLectureDate()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#getTutor()
==========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#setStudentId()
======================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#getSubjectCode()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Lecture#getEndTimeHour()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.SubjectDao#<init>()
=========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
Warning: javax.ws.rs.PUT is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: javax.ws.rs.WebApplicationException is a phantom class!
Warning: javax.ws.rs.PathParam is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: javax.ws.rs.Consumes is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: javax.ws.rs.DELETE is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.datastore.Query$SortDirection is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.Query$CompositeFilter is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.Query$CompositeFilterOperator is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: javax.ws.rs.core.Response is a phantom class!
Warning: javax.ws.rs.core.Response$Status is a phantom class!
Warning: javax.ws.rs.core.Response$ResponseBuilder is a phantom class!
Warning: com.google.appengine.api.memcache.Expiration is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: javax.ws.rs.core.GenericEntity is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.ucsb.cs.rtsystems.model.User#setPictureUrl()
============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.LectureInstanceDao#getLectureInstance()
=============================================================================
Distinct paths through the code: 2
API calls in paths: [ 3 1 ]
Memory (heap) allocations in paths: [ 2 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.LectureInstance#<init>()
  com.ucsb.cs.rtsystems.model.LectureInstance#setID()
  com.ucsb.cs.rtsystems.model.LectureInstance#setLectureId()
  com.ucsb.cs.rtsystems.model.LectureInstance#setSubjectCode()
  com.ucsb.cs.rtsystems.model.LectureInstance#setStudentId()
  com.ucsb.cs.rtsystems.model.LectureInstance#setLectureDate()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.Entity#getParent()
  [path0] com.google.appengine.api.datastore.Entity#getParent()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: com.ucsb.cs.rtsystems.validation.LectureInstanceValidator#<init>()
==============================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.UserDao#<init>()
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.User#<init>()
=====================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.UserDao#isUser()
======================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.UserDao#getUser()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureInstanceResource#createLectureInstance()
===========================================================================================
Distinct paths through the code: 2
API calls in paths: [ 1 2 ]
Memory (heap) allocations in paths: [ 6 7 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.validation.LectureInstanceValidator#<init>()
  com.ucsb.cs.rtsystems.validation.LectureInstanceValidator#validate()
  com.ucsb.cs.rtsystems.exception.BadRequestException#<init>()
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#addLectureInstance()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#getSubjectCode()
========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#getLectureId()
======================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.User#setPhoneNumber()
=============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.UserDao#<init>()
======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.User#setFirstName()
===========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureInstanceResource#getLectureInstance()
========================================================================================
Distinct paths through the code: 1
API calls in paths: [ 3 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#getLectureInstance()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.Entity#getParent()
  [path0] com.google.appengine.api.datastore.Entity#getParent()

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureInstanceResource#getLectureInstances()
=========================================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 6 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#getLectureInstances()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: com.ucsb.cs.rtsystems.model.User#setLastName()
==========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.LectureInstanceDao#addLectureInstance()
=============================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.LectureInstance#getSubjectCode()
  com.ucsb.cs.rtsystems.model.LectureInstance#getLectureId()
  com.ucsb.cs.rtsystems.model.LectureInstance#getStudentId()
  com.ucsb.cs.rtsystems.model.LectureInstance#getLectureDate()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.dao.UserDao#getUser()
=======================================================
Distinct paths through the code: 2
API calls in paths: [ 1 1 ]
Memory (heap) allocations in paths: [ 1 0 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.User#<init>()
  com.ucsb.cs.rtsystems.model.User#setID()
  com.ucsb.cs.rtsystems.model.User#setFirstName()
  com.ucsb.cs.rtsystems.model.User#setLastName()
  com.ucsb.cs.rtsystems.model.User#setEmail()
  com.ucsb.cs.rtsystems.model.User#setPictureUrl()
  com.ucsb.cs.rtsystems.model.User#setPhoneNumber()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureInstanceResource#<init>()
============================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#<init>()
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureInstanceResource#updateLecture()
===================================================================================
Distinct paths through the code: 2
API calls in paths: [ 1 3 ]
Memory (heap) allocations in paths: [ 6 5 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.validation.LectureInstanceValidator#<init>()
  com.ucsb.cs.rtsystems.validation.LectureInstanceValidator#validate()
  com.ucsb.cs.rtsystems.exception.BadRequestException#<init>()
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#updateLectureInstance()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.contoller.LectureInstanceResource#deleteLectureInstance()
===========================================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#deleteLectureInstance()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()

Analyzing: com.ucsb.cs.rtsystems.dao.LectureInstanceDao#updateLectureInstance()
================================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.LectureInstance#getSubjectCode()
  com.ucsb.cs.rtsystems.model.LectureInstance#getLectureId()
  com.ucsb.cs.rtsystems.model.LectureInstance#getID()
  com.ucsb.cs.rtsystems.model.LectureInstance#getStudentId()
  com.ucsb.cs.rtsystems.model.LectureInstance#getLectureDate()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.validation.LectureInstanceValidator#validate()
================================================================================
Distinct paths through the code: 4
API calls in paths: [ 1 1 1 1 ]
Memory (heap) allocations in paths: [ 2 2 2 2 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.LectureInstance#getLectureId()
  com.ucsb.cs.rtsystems.model.LectureInstance#getStudentId()
  com.ucsb.cs.rtsystems.dao.UserDao#isUser()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path3] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: com.ucsb.cs.rtsystems.model.User#setEmail()
=======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.LectureInstanceDao#deleteLectureInstance()
================================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()

Analyzing: com.ucsb.cs.rtsystems.model.User#setID()
====================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#getLectureDate()
========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstance#getStudentId()
======================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
Warning: com.google.appengine.api.taskqueue.TaskOptions$Builder is a phantom class!
Warning: javax.ws.rs.PUT is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: javax.ws.rs.DefaultValue is a phantom class!
Warning: javax.ws.rs.WebApplicationException is a phantom class!
Warning: javax.ws.rs.PathParam is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions$Method is a phantom class!
Warning: javax.ws.rs.QueryParam is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions is a phantom class!
Warning: com.google.appengine.api.taskqueue.QueueFactory is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskHandle is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: com.google.appengine.api.taskqueue.Queue is a phantom class!
Warning: javax.ws.rs.Consumes is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: javax.ws.rs.DELETE is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: com.google.appengine.api.memcache.Expiration is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.ucsb.cs.rtsystems.model.Subject#getDescription()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.SubjectDao#getSubject()
=============================================================
Distinct paths through the code: 2
API calls in paths: [ 1 1 ]
Memory (heap) allocations in paths: [ 1 0 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.Subject#<init>()
  com.ucsb.cs.rtsystems.model.Subject#setCode()
  com.ucsb.cs.rtsystems.model.Subject#setName()
  com.ucsb.cs.rtsystems.model.Subject#setDescription()
  com.ucsb.cs.rtsystems.model.Subject#setImageUrl()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: com.ucsb.cs.rtsystems.model.Subject#setName()
=========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.SubjectResource#updateSubject()
===========================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.SubjectDao#updateSubject()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.dao.SubjectDao#deleteSubject()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()

Analyzing: com.ucsb.cs.rtsystems.contoller.SubjectResource#createSubject()
===========================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.SubjectDao#addSubject()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.dao.SubjectDao#addSubject()
=============================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.Subject#getCode()
  com.ucsb.cs.rtsystems.model.Subject#getName()
  com.ucsb.cs.rtsystems.model.Subject#getDescription()
  com.ucsb.cs.rtsystems.model.Subject#getImageUrl()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.model.Subject#setCode()
=========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Subject#<init>()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.SubjectDao#updateSubject()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.Subject#getCode()
  com.ucsb.cs.rtsystems.model.Subject#getName()
  com.ucsb.cs.rtsystems.model.Subject#getDescription()
  com.ucsb.cs.rtsystems.model.Subject#getImageUrl()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.contoller.SubjectResource#getSubjects()
=========================================================================
Distinct paths through the code: 1
API calls in paths: [ 3 ]
Memory (heap) allocations in paths: [ 6 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.SubjectDao#getAllSubjects()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [path0] com.google.appengine.api.memcache.MemcacheService#put()

Analyzing: com.ucsb.cs.rtsystems.contoller.SubjectResource#getSubject()
========================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.SubjectDao#getSubject()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: com.ucsb.cs.rtsystems.model.Subject#getName()
=========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.SubjectDao#getAllSubjects()
=================================================================
Distinct paths through the code: 3
API calls in paths: [ 3 1 3 ]
Memory (heap) allocations in paths: [ 2 1 2 ]
Loops: 1
API calls in loops: 
  [loop] $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.Subject#<init>()
  com.ucsb.cs.rtsystems.model.Subject#setCode()
  com.ucsb.cs.rtsystems.model.Subject#setName()
  com.ucsb.cs.rtsystems.model.Subject#setDescription()
  com.ucsb.cs.rtsystems.model.Subject#setImageUrl()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [cloud] com.google.appengine.api.memcache.MemcacheService#put()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [path0] com.google.appengine.api.memcache.MemcacheService#put()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [path2] com.google.appengine.api.memcache.MemcacheService#put()

Analyzing: com.ucsb.cs.rtsystems.model.Subject#setDescription()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.SubjectResource#deleteSubject()
===========================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureDao#getAllLectures()
  com.ucsb.cs.rtsystems.model.Lecture#getID()
  com.ucsb.cs.rtsystems.dao.SubjectDao#deleteSubject()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.taskqueue.Queue#add()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()

Analyzing: com.ucsb.cs.rtsystems.contoller.SubjectResource#<init>()
====================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.SubjectDao#<init>()
  com.ucsb.cs.rtsystems.dao.LectureDao#<init>()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
API call traces: 
  [path0] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()

Analyzing: com.ucsb.cs.rtsystems.model.Subject#setImageUrl()
=============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Subject#getCode()
=========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.Subject#getImageUrl()
=============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
Warning: javax.ws.rs.PUT is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: javax.ws.rs.WebApplicationException is a phantom class!
Warning: javax.ws.rs.PathParam is a phantom class!
Warning: javax.ws.rs.QueryParam is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: javax.ws.rs.Consumes is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: javax.ws.rs.DELETE is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: javax.ws.rs.core.Response is a phantom class!
Warning: javax.ws.rs.core.Response$Status is a phantom class!
Warning: javax.ws.rs.core.Response$ResponseBuilder is a phantom class!
Warning: javax.ws.rs.core.GenericEntity is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.ucsb.cs.rtsystems.dao.UserDao#addUser()
=======================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.User#getID()
  com.ucsb.cs.rtsystems.model.User#getFirstName()
  com.ucsb.cs.rtsystems.model.User#getLastName()
  com.ucsb.cs.rtsystems.model.User#getEmail()
  com.ucsb.cs.rtsystems.model.User#getPictureUrl()
  com.ucsb.cs.rtsystems.model.User#getPhoneNumber()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.dao.UserDao#deleteUser()
==========================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()

Analyzing: com.ucsb.cs.rtsystems.contoller.UserResource#getUserByEmail()
=========================================================================
Distinct paths through the code: 2
API calls in paths: [ 1 1 ]
Memory (heap) allocations in paths: [ 4 3 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.UserDao#getUserByEmail()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()

Analyzing: com.ucsb.cs.rtsystems.dao.UserDao#updateUser()
==========================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.User#getID()
  com.ucsb.cs.rtsystems.model.User#getFirstName()
  com.ucsb.cs.rtsystems.model.User#getLastName()
  com.ucsb.cs.rtsystems.model.User#getEmail()
  com.ucsb.cs.rtsystems.model.User#getPictureUrl()
  com.ucsb.cs.rtsystems.model.User#getPhoneNumber()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.contoller.UserResource#<init>()
=================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.UserDao#<init>()
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.UserResource#createUser()
=====================================================================
Distinct paths through the code: 2
API calls in paths: [ 0 1 ]
Memory (heap) allocations in paths: [ 4 3 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.validation.UserValidator#<init>()
  com.ucsb.cs.rtsystems.validation.UserValidator#validate()
  com.ucsb.cs.rtsystems.exception.BadRequestException#<init>()
  com.ucsb.cs.rtsystems.dao.UserDao#addUser()
API call traces: 
  [path0] -- No API Calls --
  [path1] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.model.User#getFirstName()
===========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.UserDao#getUserByEmail()
==============================================================
Distinct paths through the code: 2
API calls in paths: [ 1 1 ]
Memory (heap) allocations in paths: [ 3 2 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.User#<init>()
  com.ucsb.cs.rtsystems.model.User#setID()
  com.ucsb.cs.rtsystems.model.User#setFirstName()
  com.ucsb.cs.rtsystems.model.User#setLastName()
  com.ucsb.cs.rtsystems.model.User#setEmail()
  com.ucsb.cs.rtsystems.model.User#setPictureUrl()
  com.ucsb.cs.rtsystems.model.User#setPhoneNumber()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()

Analyzing: com.ucsb.cs.rtsystems.model.User#getPictureUrl()
============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.User#getLastName()
==========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.validation.UserValidator#<init>()
===================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.validation.UserValidator#validate()
=====================================================================
Distinct paths through the code: 18
API calls in paths: [ 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 ]
Memory (heap) allocations in paths: [ 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.User#getEmail()
  com.ucsb.cs.rtsystems.model.User#getPhoneNumber()
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] -- No API Calls --
  [path3] -- No API Calls --
  [path4] -- No API Calls --
  [path5] -- No API Calls --
  [path6] -- No API Calls --
  [path7] -- No API Calls --
  [path8] -- No API Calls --
  [path9] -- No API Calls --
  [path10] -- No API Calls --
  [path11] -- No API Calls --
  [path12] -- No API Calls --
  [path13] -- No API Calls --
  [path14] -- No API Calls --
  [path15] -- No API Calls --
  [path16] -- No API Calls --
  [path17] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.User#getPhoneNumber()
=============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.UserResource#deleteUser()
=====================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.UserDao#deleteUser()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()

Analyzing: com.ucsb.cs.rtsystems.contoller.UserResource#getUser()
==================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.UserDao#getUser()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: com.ucsb.cs.rtsystems.model.User#getID()
====================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.UserResource#updateUser()
=====================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.UserDao#updateUser()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: com.ucsb.cs.rtsystems.model.User#getEmail()
=======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: javax.ws.rs.WebApplicationException is a phantom class!
Warning: javax.ws.rs.QueryParam is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.datastore.Query$SortDirection is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.Query$CompositeFilter is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.Query$CompositeFilterOperator is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: com.google.appengine.api.memcache.Expiration is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstanceResult#setLectureInstance()
==================================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstanceResult#<init>()
======================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstanceResult#setStudent()
==========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.Search#getLectureInstances()
========================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 10 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 3
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.UserDao#getUserByEmail()
  com.ucsb.cs.rtsystems.model.User#getID()
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#getLectureInstancesByStudent()
  com.ucsb.cs.rtsystems.model.LectureInstanceResult#<init>()
  com.ucsb.cs.rtsystems.model.LectureInstanceResult#setLectureInstance()
  com.ucsb.cs.rtsystems.model.LectureInstance#getSubjectCode()
  com.ucsb.cs.rtsystems.model.LectureInstance#getLectureId()
  com.ucsb.cs.rtsystems.dao.LectureDao#getLecture()
  com.ucsb.cs.rtsystems.model.Lecture#getTutor()
  com.ucsb.cs.rtsystems.dao.UserDao#getUser()
  com.ucsb.cs.rtsystems.model.LectureInstanceResult#setLecture()
  com.ucsb.cs.rtsystems.model.LectureInstanceResult#setTutor()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: com.ucsb.cs.rtsystems.model.LectureResult#setLecture()
==================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstanceResult#setLecture()
==========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.LectureDao#getLecturesByTutor()
=====================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r8.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 2
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.Lecture#<init>()
  com.ucsb.cs.rtsystems.model.Lecture#setID()
  com.ucsb.cs.rtsystems.model.Lecture#setSubjectCode()
  com.ucsb.cs.rtsystems.model.Lecture#setStartTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#setStartTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#setEndTimeHour()
  com.ucsb.cs.rtsystems.model.Lecture#setEndTimeMinute()
  com.ucsb.cs.rtsystems.model.Lecture#setDayOfWeek()
  com.ucsb.cs.rtsystems.model.Lecture#setLat()
  com.ucsb.cs.rtsystems.model.Lecture#setLon()
  com.ucsb.cs.rtsystems.model.Lecture#setTutor()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: com.ucsb.cs.rtsystems.model.LectureInstanceResult#setTutor()
========================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.Search#<init>()
===========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 7 ]
Loops: 0
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#<init>()
  com.ucsb.cs.rtsystems.dao.LectureDao#<init>()
  com.ucsb.cs.rtsystems.dao.UserDao#<init>()
  com.ucsb.cs.rtsystems.dao.SubjectDao#<init>()
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.dao.LectureInstanceDao#getLectureInstancesByStudent()
=======================================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 6 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 2
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.model.LectureInstance#<init>()
  com.ucsb.cs.rtsystems.model.LectureInstance#setID()
  com.ucsb.cs.rtsystems.model.LectureInstance#setLectureId()
  com.ucsb.cs.rtsystems.model.LectureInstance#setSubjectCode()
  com.ucsb.cs.rtsystems.model.LectureInstance#setStudentId()
  com.ucsb.cs.rtsystems.model.LectureInstance#setLectureDate()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
  [cloud] com.google.appengine.api.datastore.Entity#getParent()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: com.ucsb.cs.rtsystems.contoller.Search#getLectures()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.LectureDao#getAllLectures()
  com.ucsb.cs.rtsystems.model.LectureResult#<init>()
  com.ucsb.cs.rtsystems.model.Lecture#getTutor()
  com.ucsb.cs.rtsystems.dao.UserDao#getUser()
  com.ucsb.cs.rtsystems.model.LectureResult#setLecture()
  com.ucsb.cs.rtsystems.model.LectureResult#setTutor()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: com.ucsb.cs.rtsystems.contoller.Search#getLectureInstancesForTutor()
================================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 7 ]
Loops: 2
API calls in loops: 
  [loop] $z1 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 2] : 1
  [loop] $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.UserDao#getUserByEmail()
  com.ucsb.cs.rtsystems.model.User#getID()
  com.ucsb.cs.rtsystems.dao.LectureDao#getLecturesByTutor()
  com.ucsb.cs.rtsystems.model.Lecture#getSubjectCode()
  com.ucsb.cs.rtsystems.model.Lecture#getID()
  com.ucsb.cs.rtsystems.dao.LectureInstanceDao#getLectureInstances()
  com.ucsb.cs.rtsystems.model.LectureInstanceResult#<init>()
  com.ucsb.cs.rtsystems.model.LectureInstanceResult#setLecture()
  com.ucsb.cs.rtsystems.model.LectureInstanceResult#setLectureInstance()
  com.ucsb.cs.rtsystems.model.LectureInstance#getStudentId()
  com.ucsb.cs.rtsystems.dao.UserDao#getUser()
  com.ucsb.cs.rtsystems.model.LectureInstanceResult#setStudent()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: com.ucsb.cs.rtsystems.model.LectureResult#setSubject()
==================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureResult#<init>()
==============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.model.LectureResult#setTutor()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.ucsb.cs.rtsystems.contoller.Search#getLecturesForTutor()
========================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 7 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
Called user-defined methods (unique): 
  com.ucsb.cs.rtsystems.dao.UserDao#getUserByEmail()
  com.ucsb.cs.rtsystems.model.User#getID()
  com.ucsb.cs.rtsystems.dao.LectureDao#getLecturesByTutor()
  com.ucsb.cs.rtsystems.model.LectureResult#<init>()
  com.ucsb.cs.rtsystems.model.Lecture#getSubjectCode()
  com.ucsb.cs.rtsystems.dao.SubjectDao#getSubject()
  com.ucsb.cs.rtsystems.model.LectureResult#setLecture()
  com.ucsb.cs.rtsystems.model.LectureResult#setSubject()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

----------------- PROJECT: fenghuo -----------------

Warning: javax.servlet.http.HttpSession is a phantom class!
Warning: javax.ws.rs.core.Context is a phantom class!
Warning: org.json.simple.JSONObject is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: javax.ws.rs.PathParam is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: org.json.simple.JSONValue is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: cs263.cs263.Service#Login()
=======================================
Distinct paths through the code: 2
API calls in paths: [ 3 3 ]
Memory (heap) allocations in paths: [ 5 5 ]
Loops: 0
Called user-defined methods (unique): 
  cs263.cs263.Login#passwordMatch()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: cs263.cs263.User#<init>()
=====================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263.cs263.Service#GetUser()
=========================================
Distinct paths through the code: 1
API calls in paths: [ 3 ]
Memory (heap) allocations in paths: [ 4 ]
Loops: 0
Called user-defined methods (unique): 
  cs263.cs263.UserServices#Get()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: cs263.cs263.User#clone()
====================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263.cs263.UserServices#Add()
==========================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  cs263.cs263.User#Add()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: cs263.cs263.Service#AddUser()
=========================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  cs263.cs263.UserServices#Add()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: cs263.cs263.User#Get()
==================================
Distinct paths through the code: 3
API calls in paths: [ 1 2 3 ]
Memory (heap) allocations in paths: [ 1 1 3 ]
Loops: 0
Called user-defined methods (unique): 
  cs263.cs263.User#<init>()
  cs263.cs263.User#clone()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: cs263.cs263.Service#GetSession()
============================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263.cs263.Service#<init>()
========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263.cs263.Login#passwordMatch()
=============================================
Distinct paths through the code: 1
API calls in paths: [ 3 ]
Memory (heap) allocations in paths: [ 5 ]
Loops: 0
Called user-defined methods (unique): 
  cs263.cs263.UserServices#Get()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: cs263.cs263.UserServices#Get()
==========================================
Distinct paths through the code: 1
API calls in paths: [ 3 ]
Memory (heap) allocations in paths: [ 4 ]
Loops: 0
Called user-defined methods (unique): 
  cs263.cs263.User#Get()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: cs263.cs263.Service#SetSession()
============================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: cs263.cs263.User#Add()
==================================
Distinct paths through the code: 2
API calls in paths: [ 1 2 ]
Memory (heap) allocations in paths: [ 1 1 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()

----------------- PROJECT: gregparsons -----------------

Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: javax.ws.rs.PathParam is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: com.google.appengine.api.search.Field$Builder is a phantom class!
Warning: com.google.appengine.api.search.GeoPoint is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions is a phantom class!
Warning: com.google.appengine.api.search.DateUtil is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.search.GetResponse is a phantom class!
Warning: com.google.gson.Gson is a phantom class!
Warning: com.google.appengine.api.search.Query$Builder is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.search.SearchServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.search.SearchService is a phantom class!
Warning: com.google.appengine.api.search.SortExpression$SortDirection is a phantom class!
Warning: com.google.appengine.api.datastore.Query$SortDirection is a phantom class!
Warning: com.google.appengine.api.search.IndexSpec is a phantom class!
Warning: com.google.appengine.api.search.OperationResult is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.search.SortExpression is a phantom class!
Warning: com.google.appengine.api.search.PutResponse is a phantom class!
Warning: com.google.appengine.api.search.StatusCode is a phantom class!
Warning: com.google.appengine.api.search.Document is a phantom class!
Warning: com.google.appengine.api.search.PutException is a phantom class!
Warning: com.google.appengine.api.search.IndexSpec$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Transaction is a phantom class!
Warning: com.google.appengine.api.search.GetRequest is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.search.GetRequest$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.TransactionOptions is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: com.google.appengine.api.search.Index is a phantom class!
Warning: com.google.appengine.api.search.SortOptions is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: com.google.appengine.api.search.QueryOptions$Builder is a phantom class!
Warning: com.google.appengine.api.search.SortOptions$Builder is a phantom class!
Warning: com.google.appengine.api.search.SortExpression$Builder is a phantom class!
Warning: com.google.appengine.api.search.Field is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService$IdentifiableValue is a phantom class!
Warning: com.google.appengine.api.search.QueryOptions is a phantom class!
Warning: com.google.appengine.api.datastore.TransactionOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.search.ScoredDocument is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.search.Results is a phantom class!
Warning: com.google.appengine.api.search.Document$Builder is a phantom class!
Warning: com.google.appengine.api.search.Query is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.swimr.mappt.datastore.GpDatastore#deleteEntirePositionIndex()
=============================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.swimr.mappt.API.GpAssetHistoryController#<init>()
=================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.swimr.mappt.datastore.GpPositionObject#<init>()
===============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.swimr.mappt.datastore.GpDatastore#fetchHistoricalPositionReportsFromTextSearchIndexForAssetId()
===============================================================================================================
Distinct paths through the code: 2
API calls in paths: [ 2 2 ]
Memory (heap) allocations in paths: [ 3 2 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  com.swimr.mappt.datastore.GpPositionObject#<init>()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.search.SearchService#getIndex()
  [cloud] com.google.appengine.api.search.Index#search()
API call traces: 
  [path0] com.google.appengine.api.search.SearchService#getIndex()
  [path0] com.google.appengine.api.search.Index#search()
  [path1] com.google.appengine.api.search.SearchService#getIndex()
  [path1] com.google.appengine.api.search.Index#search()

Analyzing: com.swimr.mappt.API.GpAssetHistoryController#deleteIndex()
======================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
Called user-defined methods (unique): 
  com.swimr.mappt.datastore.GpDatastore#deleteEntirePositionIndex()
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.swimr.mappt.API.GpAssetHistoryController#getAssetHistoryById()
==============================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 5 ]
Loops: 0
Called user-defined methods (unique): 
  com.swimr.mappt.datastore.GpDatastore#fetchHistoricalPositionReportsFromTextSearchIndexForAssetId()
API call traces: 
  [path0] com.google.appengine.api.search.SearchService#getIndex()
  [path0] com.google.appengine.api.search.Index#search()
Warning: javax.ws.rs.core.Response is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.channel.ChannelFailureException is a phantom class!
Warning: javax.servlet.http.HttpSession is a phantom class!
Warning: javax.ws.rs.core.Context is a phantom class!
Warning: com.google.appengine.api.channel.ChannelServiceFactory is a phantom class!
Warning: javax.ws.rs.core.Response$ResponseBuilder is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: com.google.appengine.api.channel.ChannelService is a phantom class!
Warning: com.google.appengine.api.channel.ChannelMessage is a phantom class!
Warning: com.google.gson.Gson is a phantom class!
Warning: com.google.appengine.api.search.Field$Builder is a phantom class!
Warning: com.google.appengine.api.search.GeoPoint is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions is a phantom class!
Warning: com.google.appengine.api.search.DateUtil is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.search.GetResponse is a phantom class!
Warning: com.google.appengine.api.search.Query$Builder is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.search.SearchServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.search.SearchService is a phantom class!
Warning: com.google.appengine.api.search.SortExpression$SortDirection is a phantom class!
Warning: com.google.appengine.api.datastore.Query$SortDirection is a phantom class!
Warning: com.google.appengine.api.search.IndexSpec is a phantom class!
Warning: com.google.appengine.api.search.OperationResult is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.search.SortExpression is a phantom class!
Warning: com.google.appengine.api.search.PutResponse is a phantom class!
Warning: com.google.appengine.api.search.StatusCode is a phantom class!
Warning: com.google.appengine.api.search.Document is a phantom class!
Warning: com.google.appengine.api.search.PutException is a phantom class!
Warning: com.google.appengine.api.search.IndexSpec$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Transaction is a phantom class!
Warning: com.google.appengine.api.search.GetRequest is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.search.GetRequest$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.TransactionOptions is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: com.google.appengine.api.search.Index is a phantom class!
Warning: com.google.appengine.api.search.SortOptions is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: com.google.appengine.api.search.QueryOptions$Builder is a phantom class!
Warning: com.google.appengine.api.search.SortOptions$Builder is a phantom class!
Warning: com.google.appengine.api.search.SortExpression$Builder is a phantom class!
Warning: com.google.appengine.api.search.Field is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService$IdentifiableValue is a phantom class!
Warning: com.google.appengine.api.search.QueryOptions is a phantom class!
Warning: com.google.appengine.api.datastore.TransactionOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.search.ScoredDocument is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.search.Results is a phantom class!
Warning: com.google.appengine.api.search.Document$Builder is a phantom class!
Warning: com.google.appengine.api.search.Query is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.swimr.mappt.API.GpBroadcasterController#broadcastMessageFromUserToAllSubscribers()
==================================================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called user-defined methods (unique): 
  com.swimr.mappt.API.GpMessageCenter#sendBroadcastTextMessage()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()

Analyzing: com.swimr.mappt.API.GpMessageCenter#sendBroadcastTextMessage()
==========================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
Called user-defined methods (unique): 
  com.swimr.mappt.API.GpMessageObject#<init>()
  com.swimr.mappt.API.GpMessageCenter#sendBroadcastWithContainer()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()

Analyzing: com.swimr.mappt.API.GpBroadcasterController#openBroadcastHandler()
==============================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.channel.ChannelService#createChannel()
API call traces: 
  [path0] com.google.appengine.api.channel.ChannelService#createChannel()

Analyzing: com.swimr.mappt.API.GpMessageCenter#sendBroadcastWithContainer()
============================================================================
Distinct paths through the code: 3
API calls in paths: [ 1 1 0 ]
Memory (heap) allocations in paths: [ 0 0 0 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
Called user-defined methods (unique): 
  com.swimr.mappt.datastore.GpDatastore#getConnectedChannelIds()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.channel.ChannelService#sendMessage()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] -- No API Calls --

Analyzing: com.swimr.mappt.datastore.GpDatastore#getConnectedChannelIds()
==========================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()

Analyzing: com.swimr.mappt.API.GpMessageObject#<init>()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.swimr.mappt.API.GpBroadcasterController#<init>()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

----------------- PROJECT: gvikas -----------------

Warning: com.google.appengine.api.datastore.Query$SortDirection is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.gson.Gson is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: cs263project.cs263project.ChallengesRestAPI#getAllChallenges()
==========================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asList()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asList()

Analyzing: cs263project.cs263project.ChallengesRestAPI#<init>()
================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Query$SortDirection is a phantom class!
Warning: com.google.appengine.api.images.ImagesServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.images.ImagesService is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: enqueue.ChallengesServlet#belongPosttoUser()
========================================================
Distinct paths through the code: 2
API calls in paths: [ 1 1 ]
Memory (heap) allocations in paths: [ 2 2 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asList()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asList()

Analyzing: enqueue.ChallengesServlet#<init>()
==============================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: enqueue.ChallengesServlet#doPut()
=============================================
Distinct paths through the code: 3
API calls in paths: [ 0 1 0 ]
Memory (heap) allocations in paths: [ 0 2 0 ]
Loops: 1
API calls in loops: 
  [loop] $z1 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 2
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asList()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] -- No API Calls --
  [path1] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path2] -- No API Calls --

Analyzing: enqueue.ChallengesServlet#reDirectToHomepage()
==========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions$Builder is a phantom class!
Warning: org.jsoup.safety.Whitelist is a phantom class!
Warning: org.apache.commons.lang3.RandomStringUtils is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.users.UserServiceFactory is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobKey is a phantom class!
Warning: com.google.appengine.api.taskqueue.QueueFactory is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskHandle is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreServiceFactory is a phantom class!
Warning: org.jsoup.Jsoup is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.taskqueue.Queue is a phantom class!
Warning: com.google.appengine.api.users.User is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreService is a phantom class!
Warning: com.google.appengine.api.users.UserService is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: enqueue.EnqueueServlet#<init>()
===========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: enqueue.EnqueueServlet#doPost()
===========================================
Distinct paths through the code: 4
API calls in paths: [ 1 4 4 1 ]
Memory (heap) allocations in paths: [ 0 2 2 0 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.blobstore.BlobstoreService#getUploadedBlobs()
  [cloud] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [cloud] com.google.appengine.api.taskqueue.Queue#add()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.blobstore.BlobstoreService#getUploadedBlobs()
  [path1] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [path1] com.google.appengine.api.taskqueue.Queue#add()
  [path2] com.google.appengine.api.users.UserService#getCurrentUser()
  [path2] com.google.appengine.api.blobstore.BlobstoreService#getUploadedBlobs()
  [path2] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [path2] com.google.appengine.api.taskqueue.Queue#add()
  [path3] com.google.appengine.api.users.UserService#getCurrentUser()

----------------- PROJECT: henrievk -----------------

Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: MyGAEApp.project.HostSupprServlet#doPost()
======================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: MyGAEApp.project.HostSupprServlet#<init>()
======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobKey is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreService is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: MyGAEApp.project.SupprServlet#<init>()
==================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: MyGAEApp.project.SupprServlet#doGet()
=================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asList()
  [cloud] com.google.appengine.api.blobstore.BlobstoreService#serve()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asList()

----------------- PROJECT: johannesolier -----------------

Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.users.User is a phantom class!
Warning: com.google.appengine.api.users.UserServiceFactory is a phantom class!
Warning: com.google.appengine.api.users.UserService is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.johannes.maps.AddFriendServlet#<init>()
=======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.johannes.maps.AddFriendServlet#doPost()
=======================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.users.UserServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.users.User is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: com.google.appengine.api.users.UserService is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.johannes.maps.SendInviteServlet#doPost()
========================================================
Distinct paths through the code: 2
API calls in paths: [ 4 5 ]
Memory (heap) allocations in paths: [ 1 1 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#put()
  [cloud] com.google.appengine.api.memcache.MemcacheService#delete()
  [cloud] com.google.appengine.api.memcache.MemcacheService#put()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.memcache.MemcacheService#put()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#delete()
  [path1] com.google.appengine.api.memcache.MemcacheService#put()

Analyzing: com.johannes.maps.SendInviteServlet#<init>()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.users.UserServiceFactory is a phantom class!
Warning: javax.servlet.http.HttpSession is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.users.User is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: com.google.appengine.api.users.UserService is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.johannes.maps.StartTrackingServlet#<init>()
===========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.johannes.maps.StartTrackingServlet#doPost()
===========================================================
Distinct paths through the code: 1
API calls in paths: [ 4 ]
Memory (heap) allocations in paths: [ 4 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.users.UserServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: javax.servlet.http.HttpSession is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.users.User is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: com.google.appengine.api.users.UserService is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.johannes.maps.UpdateLocationServlet#doPost()
============================================================
Distinct paths through the code: 3
API calls in paths: [ 4 4 1 ]
Memory (heap) allocations in paths: [ 5 4 2 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path1] com.google.appengine.api.datastore.DatastoreService#delete()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()
  [path2] com.google.appengine.api.users.UserService#getCurrentUser()

Analyzing: com.johannes.maps.UpdateLocationServlet#<init>()
============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

----------------- PROJECT: jolting -----------------

Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.gson.Gson is a phantom class!
Warning: javax.servlet.ServletInputStream is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: project.CreateDescriptionPointCloud#<init>()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: project.CreateDescriptionPointCloud#doPost()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobInfoFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: javax.servlet.ServletOutputStream is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreService is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobKey is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobInfo is a phantom class!
Warning: com.google.appengine.api.datastore.Blob is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: project.GetPCD#getFieldstr()
========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 1
API calls in loops: 
  [loop] if i1 >= i0 goto return r3 [Nesting Level: 1] : 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: project.GetPCD#<init>()
===================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: project.GetPCD#doGet()
==================================
Distinct paths through the code: 4
API calls in paths: [ 1 3 3 3 ]
Memory (heap) allocations in paths: [ 2 19 20 19 ]
Loops: 2
API calls in loops: 
  [loop] if i20 >= i3 goto virtualinvoke r14.<javax.servlet.ServletOutputStream: void flush()>() [Nesting Level: 1] : 1
  [loop] $i10 = interfaceinvoke r13.<java.util.List: int size()>() [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  project.PointCloud2#<init>()
  project.PointField#<init>()
  project.GetPCD#getFieldstr()
  project.GetPCD#getSizeStr()
  project.GetPCD#getTypeStr()
  project.GetPCD#getCountStr()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asList()
  [cloud] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [cloud] com.google.appengine.api.blobstore.BlobstoreService#fetchData()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path1] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path2] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path2] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path2] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()
  [path3] com.google.appengine.api.datastore.PreparedQuery#asSingleEntity()
  [path3] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path3] com.google.appengine.api.blobstore.BlobInfoFactory#loadBlobInfo()

Analyzing: project.PointCloud2#<init>()
========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: project.GetPCD#getTypeStr()
=======================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 1
API calls in loops: 
  [loop] if i1 >= i0 goto return r3 [Nesting Level: 1] : 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: project.PointField#<init>()
=======================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: project.GetPCD#getSizeStr()
=======================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 1
API calls in loops: 
  [loop] if i1 >= i0 goto return r3 [Nesting Level: 1] : 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: project.GetPCD#getCountStr()
========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 1
API calls in loops: 
  [loop] if i1 >= i0 goto return r3 [Nesting Level: 1] : 0
API call traces: 
  [path0] -- No API Calls --
Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.gson.Gson is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.repackaged.com.google.common.collect.Iterables is a phantom class!
Warning: javax.servlet.ServletOutputStream is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: project.GetPointClouds#doGet()
==========================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: project.GetPointClouds#<init>()
===========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

----------------- PROJECT: lawtonnichols -----------------

Warning: javax.ws.rs.core.Response is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: com.google.appengine.api.files.AppEngineFile is a phantom class!
Warning: com.google.appengine.api.files.FileWriteChannel is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: com.google.appengine.api.files.FileServiceFactory is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobKey is a phantom class!
Warning: org.glassfish.jersey.internal.util.Base64 is a phantom class!
Warning: javax.ws.rs.FormParam is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.files.FileService is a phantom class!
Warning: javax.ws.rs.core.Response$ResponseBuilder is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreService is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskHandle is a phantom class!
Warning: com.google.appengine.api.taskqueue.QueueFactory is a phantom class!
Warning: com.google.appengine.api.images.ServingUrlOptions is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.taskqueue.Queue is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions$Builder is a phantom class!
Warning: com.google.appengine.api.images.ImagesServiceFactory is a phantom class!
Warning: com.google.appengine.api.images.ImagesService is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.images.ServingUrlOptions$Builder is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: edu.ucsb.cs.lawtonnichols.rest.REST#getAllTiles()
=============================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 1
API calls in loops: 
  [loop] if i0 > 9 goto $r17 = new java.lang.StringBuilder [Nesting Level: 1] : 4
Called user-defined methods (unique): 
  edu.ucsb.cs.lawtonnichols.NineTiles#IncrementPageViewCount()
  edu.ucsb.cs.lawtonnichols.NineTiles#GetImageForTile()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: edu.ucsb.cs.lawtonnichols.NineTiles#GetImageForTile()
=================================================================
Distinct paths through the code: 5
API calls in paths: [ 3 3 4 1 2 ]
Memory (heap) allocations in paths: [ 3 3 4 1 2 ]
Loops: 0
Called user-defined methods (unique): 
  edu.ucsb.cs.lawtonnichols.NineTiles#GetMainEntity()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#put()
  [cloud] com.google.appengine.api.images.ImagesService#getServingUrl()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.memcache.MemcacheService#put()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#put()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.memcache.MemcacheService#put()
  [path2] com.google.appengine.api.images.ImagesService#getServingUrl()
  [path3] com.google.appengine.api.memcache.MemcacheService#get()
  [path4] com.google.appengine.api.memcache.MemcacheService#get()
  [path4] com.google.appengine.api.images.ImagesService#getServingUrl()

Analyzing: edu.ucsb.cs.lawtonnichols.NineTiles#IncrementPageViewCount()
========================================================================
Distinct paths through the code: 2
API calls in paths: [ 2 2 ]
Memory (heap) allocations in paths: [ 2 1 ]
Loops: 0
Called user-defined methods (unique): 
  edu.ucsb.cs.lawtonnichols.NineTiles#GetMainEntity()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: edu.ucsb.cs.lawtonnichols.NineTiles#AddImageToTaskQueue()
=====================================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [cloud] com.google.appengine.api.taskqueue.Queue#add()
API call traces: 
  [path0] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [path0] com.google.appengine.api.taskqueue.Queue#add()

Analyzing: edu.ucsb.cs.lawtonnichols.rest.REST#downvote()
==========================================================
Distinct paths through the code: 3
API calls in paths: [ 4 0 0 ]
Memory (heap) allocations in paths: [ 7 2 2 ]
Loops: 0
Called user-defined methods (unique): 
  edu.ucsb.cs.lawtonnichols.NineTiles#TryToPopFront()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
  [path0] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [path0] com.google.appengine.api.taskqueue.Queue#add()
  [path1] -- No API Calls --
  [path2] -- No API Calls --

Analyzing: edu.ucsb.cs.lawtonnichols.NineTiles#GetMainEntity()
===============================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: edu.ucsb.cs.lawtonnichols.rest.REST#<init>()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: edu.ucsb.cs.lawtonnichols.rest.REST#test()
======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: edu.ucsb.cs.lawtonnichols.rest.REST#postImage()
===========================================================
Distinct paths through the code: 6
API calls in paths: [ 0 7 5 5 5 5 ]
Memory (heap) allocations in paths: [ 1 3 1 1 1 1 ]
Loops: 0
Called user-defined methods (unique): 
  edu.ucsb.cs.lawtonnichols.NineTiles#AddImageToTaskQueue()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.files.FileService#createNewBlobFile()
  [cloud] com.google.appengine.api.files.FileService#openWriteChannel()
  [cloud] com.google.appengine.api.files.FileWriteChannel#write()
  [cloud] com.google.appengine.api.files.FileWriteChannel#closeFinally()
  [cloud] com.google.appengine.api.files.FileService#getBlobKey()
API call traces: 
  [path0] -- No API Calls --
  [path1] com.google.appengine.api.files.FileService#createNewBlobFile()
  [path1] com.google.appengine.api.files.FileService#openWriteChannel()
  [path1] com.google.appengine.api.files.FileWriteChannel#write()
  [path1] com.google.appengine.api.files.FileWriteChannel#closeFinally()
  [path1] com.google.appengine.api.files.FileService#getBlobKey()
  [path1] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [path1] com.google.appengine.api.taskqueue.Queue#add()
  [path2] com.google.appengine.api.files.FileService#createNewBlobFile()
  [path2] com.google.appengine.api.files.FileService#openWriteChannel()
  [path2] com.google.appengine.api.files.FileWriteChannel#write()
  [path2] com.google.appengine.api.files.FileWriteChannel#closeFinally()
  [path2] com.google.appengine.api.files.FileService#getBlobKey()
  [path3] com.google.appengine.api.files.FileService#createNewBlobFile()
  [path3] com.google.appengine.api.files.FileService#openWriteChannel()
  [path3] com.google.appengine.api.files.FileWriteChannel#write()
  [path3] com.google.appengine.api.files.FileWriteChannel#closeFinally()
  [path3] com.google.appengine.api.files.FileService#getBlobKey()
  [path4] com.google.appengine.api.files.FileService#createNewBlobFile()
  [path4] com.google.appengine.api.files.FileService#openWriteChannel()
  [path4] com.google.appengine.api.files.FileWriteChannel#write()
  [path4] com.google.appengine.api.files.FileWriteChannel#closeFinally()
  [path4] com.google.appengine.api.files.FileService#getBlobKey()
  [path5] com.google.appengine.api.files.FileService#createNewBlobFile()
  [path5] com.google.appengine.api.files.FileService#openWriteChannel()
  [path5] com.google.appengine.api.files.FileWriteChannel#write()
  [path5] com.google.appengine.api.files.FileWriteChannel#closeFinally()
  [path5] com.google.appengine.api.files.FileService#getBlobKey()

Analyzing: edu.ucsb.cs.lawtonnichols.NineTiles#TryToPopFront()
===============================================================
Distinct paths through the code: 3
API calls in paths: [ 4 2 4 ]
Memory (heap) allocations in paths: [ 5 4 4 ]
Loops: 0
Called user-defined methods (unique): 
  edu.ucsb.cs.lawtonnichols.NineTiles#GetMainEntity()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
  [cloud] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [cloud] com.google.appengine.api.taskqueue.Queue#add()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
  [path0] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [path0] com.google.appengine.api.taskqueue.Queue#add()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#put()
  [path2] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [path2] com.google.appengine.api.taskqueue.Queue#add()

Analyzing: edu.ucsb.cs.lawtonnichols.rest.REST#posttest()
==========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

----------------- PROJECT: lgrinta -----------------

Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: com.google.appengine.demos.guestbook.ListQuestions#<init>()
=======================================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: com.google.appengine.demos.guestbook.ListQuestions#doGet()
======================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  com.google.appengine.api.datastore.DatastoreServiceFactory#getDatastoreService()
  com.google.appengine.api.datastore.Query#<init>()
  com.google.appengine.api.datastore.DatastoreService#prepare()
  com.google.appengine.api.datastore.Entity#getKey()
  com.google.appengine.api.datastore.Key#toString()
  com.google.appengine.api.datastore.Entity#getProperty()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

----------------- PROJECT: machiry -----------------

Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreServiceFactory is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreService is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: test1.assign1.Cserve#<init>()
=========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: test1.assign1.Cserve#doGet()
========================================
Distinct paths through the code: 3
API calls in paths: [ 1 1 0 ]
Memory (heap) allocations in paths: [ 0 2 0 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] -- No API Calls --

----------------- PROJECT: polpak -----------------

Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.memcache.Expiration is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.gson.Gson is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: javax.servlet.http.HttpSession is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.datastore.Query$SortDirection is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: questor.QuestServlet#doGet()
========================================
Distinct paths through the code: 3
API calls in paths: [ 0 4 2 ]
Memory (heap) allocations in paths: [ 0 6 4 ]
Loops: 0
Called user-defined methods (unique): 
  questor.User#fromEmailAddress()
  questor.QuestServlet#doList()
  questor.QuestServlet#doShow()
API call traces: 
  [path0] -- No API Calls --
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path1] com.google.appengine.api.memcache.MemcacheService#put()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: questor.Quest#getQuestKey()
=======================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.User#getUserKey()
=====================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#updateStore()
=======================================
Distinct paths through the code: 3
API calls in paths: [ 0 2 2 ]
Memory (heap) allocations in paths: [ 1 0 0 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] -- No API Calls --
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: questor.Quest#fromJSON()
====================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#getAvailableForUser()
===============================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called user-defined methods (unique): 
  questor.User#getUserKey()
  questor.Quest#fromEntities()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asList()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asList()

Analyzing: questor.Quest#setCompleted()
========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.User#<init>()
=================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#setDescription()
==========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.User#fromEmailAddress()
===========================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  questor.User#fromEntity()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: questor.Quest#isCompleted()
=======================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.User#setExperiencePoints()
==============================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.QuestServlet#doPut()
========================================
Distinct paths through the code: 14
API calls in paths: [ 0 2 2 4 8 4 4 4 2 2 6 2 2 2 ]
Memory (heap) allocations in paths: [ 0 3 5 6 7 6 6 6 5 5 6 5 5 5 ]
Loops: 1
API calls in loops: 
  [loop] $r19 = virtualinvoke r6.<java.io.BufferedReader: java.lang.String readLine()>() [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  questor.User#fromEmailAddress()
  questor.Quest#fromKey()
  questor.Quest#fromJSON()
  questor.Quest#getQuesterKey()
  questor.User#getUserKey()
  questor.Quest#setQuesterKey()
  questor.Quest#updateStore()
  questor.Quest#isCompleted()
  questor.Quest#isAccepted()
  questor.Quest#setCompleted()
  questor.User#getExperiencePoints()
  questor.Quest#getReward()
  questor.User#setExperiencePoints()
  questor.User#updateStore()
API call traces: 
  [path0] -- No API Calls --
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path3] com.google.appengine.api.datastore.DatastoreService#get()
  [path3] com.google.appengine.api.datastore.DatastoreService#get()
  [path3] com.google.appengine.api.datastore.DatastoreService#get()
  [path3] com.google.appengine.api.datastore.DatastoreService#put()
  [path4] com.google.appengine.api.datastore.DatastoreService#get()
  [path4] com.google.appengine.api.datastore.DatastoreService#get()
  [path4] com.google.appengine.api.datastore.DatastoreService#get()
  [path4] com.google.appengine.api.datastore.DatastoreService#put()
  [path4] com.google.appengine.api.datastore.DatastoreService#get()
  [path4] com.google.appengine.api.datastore.DatastoreService#put()
  [path4] com.google.appengine.api.datastore.DatastoreService#get()
  [path4] com.google.appengine.api.datastore.DatastoreService#put()
  [path5] com.google.appengine.api.datastore.DatastoreService#get()
  [path5] com.google.appengine.api.datastore.DatastoreService#get()
  [path5] com.google.appengine.api.datastore.DatastoreService#get()
  [path5] com.google.appengine.api.datastore.DatastoreService#put()
  [path6] com.google.appengine.api.datastore.DatastoreService#get()
  [path6] com.google.appengine.api.datastore.DatastoreService#get()
  [path6] com.google.appengine.api.datastore.DatastoreService#get()
  [path6] com.google.appengine.api.datastore.DatastoreService#put()
  [path7] com.google.appengine.api.datastore.DatastoreService#get()
  [path7] com.google.appengine.api.datastore.DatastoreService#get()
  [path7] com.google.appengine.api.datastore.DatastoreService#get()
  [path7] com.google.appengine.api.datastore.DatastoreService#put()
  [path8] com.google.appengine.api.datastore.DatastoreService#get()
  [path8] com.google.appengine.api.datastore.DatastoreService#get()
  [path9] com.google.appengine.api.datastore.DatastoreService#get()
  [path9] com.google.appengine.api.datastore.DatastoreService#get()
  [path10] com.google.appengine.api.datastore.DatastoreService#get()
  [path10] com.google.appengine.api.datastore.DatastoreService#get()
  [path10] com.google.appengine.api.datastore.DatastoreService#get()
  [path10] com.google.appengine.api.datastore.DatastoreService#put()
  [path10] com.google.appengine.api.datastore.DatastoreService#get()
  [path10] com.google.appengine.api.datastore.DatastoreService#put()
  [path11] com.google.appengine.api.datastore.DatastoreService#get()
  [path11] com.google.appengine.api.datastore.DatastoreService#get()
  [path12] com.google.appengine.api.datastore.DatastoreService#get()
  [path12] com.google.appengine.api.datastore.DatastoreService#get()
  [path13] com.google.appengine.api.datastore.DatastoreService#get()
  [path13] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: questor.Quest#fromEntities()
========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  questor.Quest#<init>()
  questor.Quest#setTitle()
  questor.Quest#setDescription()
  questor.Quest#setExpiration()
  questor.Quest#setQuestKey()
  questor.Quest#setReward()
  questor.Quest#setCompleted()
  questor.Quest#setQuesterKey()
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#setExpiration()
=========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#toJson()
==================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#setReward()
=====================================
Distinct paths through the code: 2
API calls in paths: [ 0 0 ]
Memory (heap) allocations in paths: [ 1 0 ]
Loops: 0
Called user-defined methods (unique): 
  questor.Quest$ValueError#<init>()
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --

Analyzing: questor.Quest#fromKey()
===================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
Called user-defined methods (unique): 
  questor.Quest#fromEntity()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: questor.QuestServlet#doList()
=========================================
Distinct paths through the code: 2
API calls in paths: [ 3 1 ]
Memory (heap) allocations in paths: [ 5 1 ]
Loops: 0
Called user-defined methods (unique): 
  questor.User#getUserKey()
  questor.Quest#getAvailableForUser()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#put()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path0] com.google.appengine.api.memcache.MemcacheService#put()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()

Analyzing: questor.QuestServlet#<init>()
=========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.User#getExperiencePoints()
==============================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#getReward()
=====================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#fromEntity()
======================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
Called user-defined methods (unique): 
  questor.Quest#fromEntities()
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.User#setFirstName()
=======================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#<init>()
==================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.User#setLastName()
======================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#setQuesterKey()
=========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.User#fromEntity()
=====================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  questor.User#<init>()
  questor.User#setFirstName()
  questor.User#setLastName()
  questor.User#setExperiencePoints()
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.QuestServlet#doShow()
=========================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called user-defined methods (unique): 
  questor.Quest#fromKey()
  questor.Quest#toJson()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: questor.Quest#setTitle()
====================================
Distinct paths through the code: 3
API calls in paths: [ 0 0 0 ]
Memory (heap) allocations in paths: [ 1 0 1 ]
Loops: 0
Called user-defined methods (unique): 
  questor.Quest$ValueError#<init>()
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] -- No API Calls --

Analyzing: questor.User#updateStore()
======================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
Called user-defined methods (unique): 
  questor.User#getUserKey()
  questor.User#getExperiencePoints()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: questor.Quest$ValueError#<init>()
=============================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#getDescription()
==========================================
Distinct paths through the code: 3
API calls in paths: [ 0 0 0 ]
Memory (heap) allocations in paths: [ 1 0 1 ]
Loops: 0
Called user-defined methods (unique): 
  questor.Quest$ValueError#<init>()
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] -- No API Calls --

Analyzing: questor.Quest#getQuesterKey()
=========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#setQuestKey()
=======================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.Quest#getTitle()
====================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: questor.QuestServlet#doPost()
=========================================
Distinct paths through the code: 4
API calls in paths: [ 0 1 1 3 ]
Memory (heap) allocations in paths: [ 0 1 1 9 ]
Loops: 1
API calls in loops: 
  [loop] $r17 = virtualinvoke r15.<java.io.BufferedReader: java.lang.String readLine()>() [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  questor.User#fromEmailAddress()
  questor.Quest#fromJSON()
  questor.Quest#getTitle()
  questor.Quest#getDescription()
  questor.Quest#getReward()
  questor.Quest#<init>()
  questor.Quest#getQuestKey()
API call traces: 
  [path0] -- No API Calls --
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path3] com.google.appengine.api.datastore.DatastoreService#get()
  [path3] com.google.appengine.api.datastore.DatastoreService#put()
  [path3] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: questor.Quest#isAccepted()
======================================
Distinct paths through the code: 2
API calls in paths: [ 0 0 ]
Memory (heap) allocations in paths: [ 0 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --

----------------- PROJECT: shayon -----------------

Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.servlet.http.Cookie is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: org.apache.commons.lang.StringEscapeUtils is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: com.google.appengine.api.channel.ChannelServiceFactory is a phantom class!
Warning: com.google.appengine.api.channel.ChannelService is a phantom class!
Warning: com.google.appengine.api.channel.ChannelMessage is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: WorldChat.WorldChat.ChatServlet#doPost()
====================================================
Distinct paths through the code: 4
API calls in paths: [ 0 0 0 0 ]
Memory (heap) allocations in paths: [ 2 2 2 2 ]
Loops: 0
Called user-defined methods (unique): 
  WorldChat.WorldChat.ChatIdGen#getClientId()
  WorldChat.WorldChat.ChatManager#sendMessage()
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] -- No API Calls --
  [path3] -- No API Calls --

Analyzing: WorldChat.WorldChat.ChatServlet#<init>()
====================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: WorldChat.WorldChat.ChatManager#addToHistory()
==========================================================
Distinct paths through the code: 3
API calls in paths: [ 0 0 0 ]
Memory (heap) allocations in paths: [ 0 1 1 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --
  [path1] -- No API Calls --
  [path2] -- No API Calls --

Analyzing: WorldChat.WorldChat.ChatServlet#doGet()
===================================================
Distinct paths through the code: 6
API calls in paths: [ 2 2 6 6 6 6 ]
Memory (heap) allocations in paths: [ 0 0 7 7 7 7 ]
Loops: 1
API calls in loops: 
  [loop] $i1 = lengthof r6 [Nesting Level: 1] : 0
Called user-defined methods (unique): 
  WorldChat.WorldChat.ChatManager#removeSub()
  WorldChat.WorldChat.ChatManager#addSub()
  WorldChat.WorldChat.ChatIdGen#generateIdAndCreateChannel()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] com.google.appengine.api.channel.ChannelService#createChannel()
  [path2] com.google.appengine.api.datastore.DatastoreService#put()
  [path2] com.google.appengine.api.memcache.MemcacheService#put()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path3] com.google.appengine.api.memcache.MemcacheService#get()
  [path3] com.google.appengine.api.channel.ChannelService#createChannel()
  [path3] com.google.appengine.api.datastore.DatastoreService#put()
  [path3] com.google.appengine.api.memcache.MemcacheService#put()
  [path3] com.google.appengine.api.memcache.MemcacheService#get()
  [path3] com.google.appengine.api.datastore.DatastoreService#get()
  [path4] com.google.appengine.api.memcache.MemcacheService#get()
  [path4] com.google.appengine.api.channel.ChannelService#createChannel()
  [path4] com.google.appengine.api.datastore.DatastoreService#put()
  [path4] com.google.appengine.api.memcache.MemcacheService#put()
  [path4] com.google.appengine.api.memcache.MemcacheService#get()
  [path4] com.google.appengine.api.memcache.MemcacheService#get()
  [path5] com.google.appengine.api.memcache.MemcacheService#get()
  [path5] com.google.appengine.api.channel.ChannelService#createChannel()
  [path5] com.google.appengine.api.datastore.DatastoreService#put()
  [path5] com.google.appengine.api.memcache.MemcacheService#put()
  [path5] com.google.appengine.api.memcache.MemcacheService#get()
  [path5] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: WorldChat.WorldChat.ChatManager#removeSub()
=======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: WorldChat.WorldChat.ChatIdGen#generateIdAndCreateChannel()
======================================================================
Distinct paths through the code: 3
API calls in paths: [ 0 4 4 ]
Memory (heap) allocations in paths: [ 0 5 6 ]
Loops: 1
API calls in loops: 
  [loop] $r22 = interfaceinvoke r5.<com.google.appengine.api.memcache.MemcacheService: java.lang.Object get(java.lang.Object)>(r6) [Nesting Level: 1] : 2
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.channel.ChannelService#createChannel()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
  [cloud] com.google.appengine.api.memcache.MemcacheService#put()
API call traces: 
  [path0] -- No API Calls --
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.channel.ChannelService#createChannel()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()
  [path1] com.google.appengine.api.memcache.MemcacheService#put()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] com.google.appengine.api.channel.ChannelService#createChannel()
  [path2] com.google.appengine.api.datastore.DatastoreService#put()
  [path2] com.google.appengine.api.memcache.MemcacheService#put()

Analyzing: WorldChat.WorldChat.ChatManager#addSub()
====================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: WorldChat.WorldChat.ChatManager#sendMessage()
=========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
Called user-defined methods (unique): 
  WorldChat.WorldChat.ChatManager#addToHistory()
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.channel.ChannelService#sendMessage()
API call traces: 
  [path0] -- No API Calls --

Analyzing: WorldChat.WorldChat.ChatIdGen#getClientId()
=======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 1
API calls in loops: 
  [loop] if r1 == null goto return r2 [Nesting Level: 1] : 0
API call traces: 
  [path0] -- No API Calls --
Warning: javax.servlet.http.HttpServlet is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions$Builder is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskOptions is a phantom class!
Warning: org.apache.commons.lang.StringEscapeUtils is a phantom class!
Warning: com.google.appengine.api.taskqueue.TaskHandle is a phantom class!
Warning: com.google.appengine.api.taskqueue.QueueFactory is a phantom class!
Warning: com.google.gson.Gson is a phantom class!
Warning: javax.servlet.http.HttpServletResponse is a phantom class!
Warning: com.google.appengine.api.taskqueue.Queue is a phantom class!
Warning: javax.servlet.ServletException is a phantom class!
Warning: com.google.appengine.api.channel.ChannelServiceFactory is a phantom class!
Warning: com.google.appengine.api.channel.ChannelMessage is a phantom class!
Warning: com.google.appengine.api.channel.ChannelService is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: WorldChat.WorldChat.ChatManager#getChatHistory()
============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: WorldChat.WorldChat.InteractServlet#<init>()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: WorldChat.WorldChat.InteractServlet#doGet()
=======================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called user-defined methods (unique): 
  WorldChat.WorldChat.ChatManager#getChatHistory()
API call traces: 
  [path0] -- No API Calls --

Analyzing: WorldChat.WorldChat.InteractServlet#doPost()
========================================================
Distinct paths through the code: 1
API calls in paths: [ 2 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [cloud] com.google.appengine.api.taskqueue.Queue#add()
API call traces: 
  [path0] com.google.appengine.api.taskqueue.QueueFactory#getDefaultQueue()
  [path0] com.google.appengine.api.taskqueue.Queue#add()

----------------- PROJECT: sivapalan -----------------

Warning: vs.cs263project.VideoPostJerseyRestService is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Warning: vs.cs263project.servlets.VoteServlet is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!
Warning: vs.cs263project.servlets.SectionDescriptionServlet is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

----------------- PROJECT: svae -----------------

Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.gson.Gson is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: javax.ws.rs.Produces is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: api.Statistics#<init>()
===================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: api.Statistics#getSearchStatisticsJson()
====================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: api.Statistics#getSearchStatisticsPlain()
=====================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 1 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()

----------------- PROJECT: varks -----------------

Warning: org.json.simple.JSONObject is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions is a phantom class!
Warning: org.json.simple.JSONArray is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: com.google.appengine.api.datastore.FetchOptions$Builder is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: test1.test1.TestJersey#getPostRates()
=================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 5 ]
Loops: 1
API calls in loops: 
  [loop] $r13 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>() [Nesting Level: 1] : 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: test1.test1.TestJersey#getRates_mem()
=================================================
Distinct paths through the code: 2
API calls in paths: [ 1 1 ]
Memory (heap) allocations in paths: [ 0 0 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
API call traces: 
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()

Analyzing: test1.test1.TestJersey#<init>()
===========================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: test1.test1.TestJersey#getPostUsers()
=================================================
Distinct paths through the code: 2
API calls in paths: [ 1 1 ]
Memory (heap) allocations in paths: [ 4 4 ]
Loops: 1
API calls in loops: 
  [loop] $i3 = interfaceinvoke r6.<java.util.List: int size()>() [Nesting Level: 1] : 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asList()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asList()

Analyzing: test1.test1.TestJersey#getUsers()
=============================================
Distinct paths through the code: 2
API calls in paths: [ 1 1 ]
Memory (heap) allocations in paths: [ 4 4 ]
Loops: 1
API calls in loops: 
  [loop] $i3 = interfaceinvoke r6.<java.util.List: int size()>() [Nesting Level: 1] : 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asList()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asList()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asList()

Analyzing: test1.test1.TestJersey#getRates()
=============================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 5 ]
Loops: 1
API calls in loops: 
  [loop] $r13 = virtualinvoke r5.<java.io.BufferedReader: java.lang.String readLine()>() [Nesting Level: 1] : 0
API call traces: 
  [path0] -- No API Calls --

----------------- PROJECT: victorzakhary -----------------

Warning: ResourceAllocator.Allocator.AllocationRequest is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

----------------- PROJECT: yanhongju -----------------

Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: javax.ws.rs.core.Context is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: travelplanapp.travelplanapp.ActivityWorker#createActivity()
=======================================================================
Distinct paths through the code: 3
API calls in paths: [ 5 4 3 ]
Memory (heap) allocations in paths: [ 3 3 3 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#put()
  [cloud] com.google.appengine.api.memcache.MemcacheService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.memcache.MemcacheService#put()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#put()
  [path2] com.google.appengine.api.datastore.DatastoreService#put()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] com.google.appengine.api.memcache.MemcacheService#put()

Analyzing: travelplanapp.travelplanapp.ActivityWorker#<init>()
===============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: travelplanapp.travelplanapp.ActivityWorker#deleteActivity()
=======================================================================
Distinct paths through the code: 5
API calls in paths: [ 4 4 4 4 2 ]
Memory (heap) allocations in paths: [ 1 1 1 1 1 ]
Loops: 1
API calls in loops: 
  [loop] if i1 >= i0 goto $i2 = virtualinvoke r10.<java.lang.String: int length()>() [Nesting Level: 1] : 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#get()
  [cloud] com.google.appengine.api.memcache.MemcacheService#put()
  [cloud] com.google.appengine.api.memcache.MemcacheService#delete()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.memcache.MemcacheService#get()
  [path0] com.google.appengine.api.memcache.MemcacheService#put()
  [path1] com.google.appengine.api.datastore.DatastoreService#delete()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#get()
  [path1] com.google.appengine.api.memcache.MemcacheService#delete()
  [path2] com.google.appengine.api.datastore.DatastoreService#delete()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] com.google.appengine.api.memcache.MemcacheService#get()
  [path2] com.google.appengine.api.memcache.MemcacheService#put()
  [path3] com.google.appengine.api.datastore.DatastoreService#delete()
  [path3] com.google.appengine.api.memcache.MemcacheService#get()
  [path3] com.google.appengine.api.memcache.MemcacheService#get()
  [path3] com.google.appengine.api.memcache.MemcacheService#delete()
  [path4] com.google.appengine.api.datastore.DatastoreService#delete()
  [path4] com.google.appengine.api.memcache.MemcacheService#get()
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterOperator is a phantom class!
Warning: com.google.appengine.api.users.User is a phantom class!
Warning: com.google.appengine.api.users.UserService is a phantom class!
Warning: com.google.appengine.api.images.ImagesServiceFactory is a phantom class!
Warning: com.google.appengine.api.images.ImagesService is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: com.google.appengine.api.datastore.Query$Filter is a phantom class!
Warning: javax.ws.rs.PathParam is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.users.UserServiceFactory is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobKey is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Query$FilterPredicate is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: travelplanapp.travelplanapp.AlbumServer#<init>()
============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: travelplanapp.travelplanapp.AlbumServer#getAllAlbums()
==================================================================
Distinct paths through the code: 2
API calls in paths: [ 2 2 ]
Memory (heap) allocations in paths: [ 3 3 ]
Loops: 2
API calls in loops: 
  [loop] $i1 = interfaceinvoke r12.<java.util.List: int size()>() [Nesting Level: 2] : 1
  [loop] $z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [cloud] com.google.appengine.api.images.ImagesService#getServingUrl()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.datastore.PreparedQuery#asIterable()

Analyzing: travelplanapp.travelplanapp.AlbumServer#getGallery()
================================================================
Distinct paths through the code: 2
API calls in paths: [ 2 2 ]
Memory (heap) allocations in paths: [ 2 3 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.images.ImagesService#getServingUrl()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: com.google.appengine.api.datastore.Transaction is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobKey is a phantom class!
Warning: javax.ws.rs.core.Context is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.blobstore.BlobstoreService is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: travelplanapp.travelplanapp.AlbumWorker#<init>()
============================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: travelplanapp.travelplanapp.AlbumWorker#createAlbum()
=================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: travelplanapp.travelplanapp.AlbumWorker#deletePhoto()
=================================================================
Distinct paths through the code: 2
API calls in paths: [ 3 3 ]
Memory (heap) allocations in paths: [ 3 3 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
  [cloud] com.google.appengine.api.blobstore.BlobstoreService#delete()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
  [path0] com.google.appengine.api.blobstore.BlobstoreService#delete()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()
  [path1] com.google.appengine.api.blobstore.BlobstoreService#delete()

Analyzing: travelplanapp.travelplanapp.AlbumWorker#upload()
============================================================
Distinct paths through the code: 4
API calls in paths: [ 5 4 5 4 ]
Memory (heap) allocations in paths: [ 2 2 1 1 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#beginTransaction()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
  [cloud] com.google.appengine.api.datastore.Transaction#commit()
  [cloud] com.google.appengine.api.datastore.Transaction#rollback()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#beginTransaction()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path0] com.google.appengine.api.datastore.DatastoreService#put()
  [path0] com.google.appengine.api.datastore.Transaction#commit()
  [path0] com.google.appengine.api.datastore.Transaction#rollback()
  [path1] com.google.appengine.api.datastore.DatastoreService#beginTransaction()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.datastore.DatastoreService#put()
  [path1] com.google.appengine.api.datastore.Transaction#commit()
  [path2] com.google.appengine.api.datastore.DatastoreService#beginTransaction()
  [path2] com.google.appengine.api.datastore.DatastoreService#get()
  [path2] com.google.appengine.api.datastore.DatastoreService#put()
  [path2] com.google.appengine.api.datastore.Transaction#commit()
  [path2] com.google.appengine.api.datastore.Transaction#rollback()
  [path3] com.google.appengine.api.datastore.DatastoreService#beginTransaction()
  [path3] com.google.appengine.api.datastore.DatastoreService#get()
  [path3] com.google.appengine.api.datastore.DatastoreService#put()
  [path3] com.google.appengine.api.datastore.Transaction#commit()

Analyzing: travelplanapp.travelplanapp.AlbumWorker#deleteAlbum()
=================================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: com.google.appengine.api.datastore.EntityNotFoundException is a phantom class!
Warning: javax.ws.rs.GET is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: javax.ws.rs.PathParam is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: com.google.appengine.api.users.User is a phantom class!
Warning: com.google.appengine.api.users.UserServiceFactory is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.users.UserService is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: travelplanapp.travelplanapp.CheckForm#checkPlan()
=============================================================
Distinct paths through the code: 2
API calls in paths: [ 2 2 ]
Memory (heap) allocations in paths: [ 0 0 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()

Analyzing: travelplanapp.travelplanapp.CheckForm#<init>()
==========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: travelplanapp.travelplanapp.CheckForm#checkAlbum()
==============================================================
Distinct paths through the code: 2
API calls in paths: [ 2 2 ]
Memory (heap) allocations in paths: [ 1 1 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.users.UserService#getCurrentUser()
  [cloud] com.google.appengine.api.datastore.DatastoreService#get()
API call traces: 
  [path0] com.google.appengine.api.users.UserService#getCurrentUser()
  [path0] com.google.appengine.api.datastore.DatastoreService#get()
  [path1] com.google.appengine.api.users.UserService#getCurrentUser()
  [path1] com.google.appengine.api.datastore.DatastoreService#get()
Warning: com.google.appengine.api.datastore.Entity is a phantom class!
Warning: javax.ws.rs.Path is a phantom class!
Warning: javax.ws.rs.POST is a phantom class!
Warning: com.google.appengine.api.datastore.Key is a phantom class!
Warning: javax.servlet.http.HttpServletRequest is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandlers is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreService is a phantom class!
Warning: com.google.appengine.api.memcache.ErrorHandler is a phantom class!
Warning: com.google.appengine.api.datastore.KeyFactory is a phantom class!
Warning: javax.ws.rs.core.Context is a phantom class!
Warning: com.google.appengine.api.datastore.PreparedQuery is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheService is a phantom class!
Warning: com.google.appengine.api.datastore.Query is a phantom class!
Warning: com.google.appengine.api.datastore.DatastoreServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.MemcacheServiceFactory is a phantom class!
Warning: com.google.appengine.api.memcache.LogAndContinueErrorHandler is a phantom class!
Warning: java.dyn.InvokeDynamic is a phantom class!

Analyzing: travelplanapp.travelplanapp.PlanWorker#createPlan()
===============================================================
Distinct paths through the code: 1
API calls in paths: [ 1 ]
Memory (heap) allocations in paths: [ 3 ]
Loops: 0
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.DatastoreService#put()
API call traces: 
  [path0] com.google.appengine.api.datastore.DatastoreService#put()

Analyzing: travelplanapp.travelplanapp.PlanWorker#<init>()
===========================================================
Distinct paths through the code: 1
API calls in paths: [ 0 ]
Memory (heap) allocations in paths: [ 0 ]
Loops: 0
API call traces: 
  [path0] -- No API Calls --

Analyzing: travelplanapp.travelplanapp.PlanWorker#deletePlan()
===============================================================
Distinct paths through the code: 1
API calls in paths: [ 3 ]
Memory (heap) allocations in paths: [ 2 ]
Loops: 1
API calls in loops: 
  [loop] $z0 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>() [Nesting Level: 1] : 1
Called GAE methods (non-unique): 
  [cloud] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
  [cloud] com.google.appengine.api.datastore.DatastoreService#delete()
  [cloud] com.google.appengine.api.memcache.MemcacheService#delete()
API call traces: 
  [path0] com.google.appengine.api.datastore.PreparedQuery#asIterable()
  [path0] com.google.appengine.api.datastore.DatastoreService#delete()
  [path0] com.google.appengine.api.memcache.MemcacheService#delete()

