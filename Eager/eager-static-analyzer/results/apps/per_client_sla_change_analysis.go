package main

import (
	"bufio"
	"fmt"
	"os"
	"regexp"
	"sort"
	"strings"
	"strconv"
)

// This program extracts data from output files generated by SLAEvolutionAnalyzer (adaptive 
// interval mode).
func main() {
	if len(os.Args) != 2 {
		fmt.Println("Usage: per_client_sla_change_analysis <path>")
		return
	}

	inputFile, err := os.Open(os.Args[1])
	if err != nil {
		fmt.Println("Error while opening input file", err)
		return
	}

	defer inputFile.Close()
	scanner := bufio.NewScanner(inputFile)
	re := regexp.MustCompile("^\\[sla\\] [0-9]+ .*")
	results := make(map[int]int)
	prev := 0
	count := 0
	for scanner.Scan() {
		line := scanner.Text()
		if re.MatchString(line) {
			index, err := strconv.Atoi(strings.Fields(line)[1])
			if err != nil {
				fmt.Println("Error while parsing string", err)
				return
			}
			if index != prev {
				// Count one less to account for the end-of-change event.
				results[count - 1] += 1
				count = 0
			}
			count += 1
			prev = index
		}
	}
	if err := scanner.Err(); err != nil {
		fmt.Println("Error while reading from input file", err)
		return
	}

	var keys []int
	for k,_ := range results {
		keys = append(keys, k)
	}
	sort.Ints(keys)
	for _,k := range keys {
		fmt.Println(k, results[k])
	}
}
